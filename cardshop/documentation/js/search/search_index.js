var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.114,1,0.762]],["body/components/AccountManagementComponent.html",[0,0.186,1,1.326,2,1.194,3,0.287,4,0.253,5,0.969,6,0.969,7,0.969,8,0.253,9,5.094,10,5.094,11,2.593,12,0.371,13,1.51,14,3.786,15,0.518,16,5.065,17,0.386,18,4.294,19,3.104,20,0.969,21,1.774,22,1.774,23,1.641,24,1.422,25,1.273,26,0.912,27,1.273,28,1.326,29,1.326,30,1.326,31,1.326,32,1.615,33,1.273,34,3.786,35,1.273,36,3.786,37,0.157,38,0.289,39,5.657,40,0.675,41,1.715,42,1.007,43,1.419,44,1.641,45,0.693,46,5.065,47,0.675,48,1.54,49,1.16,50,1.946,51,0.473,52,0.025,53,0.525,54,0.247,55,0.473,56,3.268,57,1.446,58,4.294,59,1.241,60,3.407,61,4.041,62,1.046,63,1.416,64,2.636,65,0.473,66,0.789,67,1.194,68,0.6,69,0.556,70,0.733,71,0.433,72,0.518,73,2.882,74,5.065,75,0.948,76,2.882,77,1.416,78,2.882,79,3.855,80,1.249,81,2.882,82,3.855,83,1.033,84,1.249,85,0.287,86,0.473,87,0.514,88,0.851,89,3.855,90,3.855,91,4.294,92,5.094,93,6.008,94,3.104,95,6.008,96,5.065,97,3.104,98,0.969,99,1.273,100,1.273,101,0.969,102,1.416,103,0.969,104,1.273,105,0.851,106,0.969,107,0.851,108,0.969,109,0.851,110,1.273,111,0.851,112,0.556,113,1.273,114,0.969,115,0.851,116,0.969,117,0.851,118,0.969,119,0.851,120,0.851,121,0.969,122,0.851,123,0.912,124,0.969,125,0.851,126,0.969,127,0.851,128,0.969,129,0.851,130,0.969,131,0.969,132,0.851,133,0.969,134,0.969,135,0.969,136,0.969,137,0.018,138,0.018]],["title/interfaces/Address.html",[75,0.578,139,1.356]],["body/interfaces/Address.html",[3,0.348,4,0.307,8,0.307,12,0.307,15,0.586,17,0.402,37,0.191,38,0.327,52,0.025,53,0.598,54,0.333,57,1.635,62,1.183,67,1.66,72,0.586,75,0.96,85,0.348,137,0.02,138,0.02,139,1.84,140,2.636,141,3.969,142,2.437,143,3.499,144,1.183,145,2.869,146,1.723,147,2.636,148,2.106,149,2.436,150,5.47,151,3.954,152,2.325,153,1.894,154,4.127,155,3.117,156,3.93,157,3.226,158,2.407,159,1.535,160,3.226,161,2.768,162,5.729,163,1.265,164,1.742,165,5.729]],["title/injectables/AddressApiService.html",[166,0.713,167,2.32]],["body/injectables/AddressApiService.html",[3,0.244,4,0.215,8,0.215,12,0.401,15,0.625,17,0.411,37,0.134,38,0.259,40,0.605,42,0.873,45,0.768,47,0.814,48,1.38,49,0.876,51,0.689,52,0.025,53,0.601,54,0.312,55,0.689,62,0.938,63,1.546,65,0.749,66,0.875,67,1.546,68,0.707,69,0.655,70,0.631,71,0.368,72,0.335,75,1.086,85,0.244,86,0.402,87,0.863,88,1.15,94,4.196,137,0.016,138,0.016,146,1.671,151,3.618,152,1.941,153,1.815,154,3.837,155,3.025,156,3.439,157,2.556,159,1.216,160,2.556,163,1.002,166,0.938,167,3.053,168,1.288,169,5.411,170,2.204,171,2.782,172,4.097,173,3.192,174,2.71,175,3.893,176,4.539,177,5.622,178,3.848,179,2.008,180,3.445,181,3.848,182,3.445,183,3.837,184,2.778,185,3.277,186,1.995,187,2.193,188,2.043,189,4.539,190,3.277,191,3.445,192,3.743,193,3.393,194,1.822,195,3.053,196,3.971,197,2.926,198,2.782,199,2.778,200,3.848,201,3.072,202,1.395,203,3.277,204,2.556,205,1.47,206,3.848,207,1.583,208,2.008,209,3.445,210,1.216,211,3.192,212,2.782,213,2.782,214,2.782,215,2.782,216,4.539,217,4.539,218,4.539,219,4.539,220,4.539,221,2.778,222,2.782,223,2.782,224,2.782,225,4.539,226,4.539,227,4.539,228,4.539,229,4.539,230,2.782,231,2.008,232,2.45,233,1.705,234,1.377,235,1.288,236,1.583,237,1.15,238,2.008,239,3.277,240,2.778,241,4.539,242,1.705,243,1.062,244,1.583,245,2.45,246,1.583,247,1.705,248,1.062,249,1.475,250,2.778,251,2.778,252,2.778,253,2.778,254,2.778,255,2.778,256,3.277,257,3.277,258,1.784,259,2.778,260,3.277,261,2.778,262,3.277]],["title/components/AddressCreateComponent.html",[0,0.114,105,0.762]],["body/components/AddressCreateComponent.html",[0,0.177,1,0.767,2,1.114,3,0.258,4,0.228,5,0.873,6,0.873,7,0.873,8,0.228,12,0.352,13,1.188,17,0.403,20,0.873,21,1.757,22,1.757,23,0.873,24,0.873,25,1.188,26,0.851,27,1.188,28,0.767,29,0.767,30,0.767,31,0.767,32,1.533,33,1.188,35,1.188,37,0.142,38,0.27,40,0.629,41,1.645,42,0.9,43,1.279,44,1.599,45,0.793,47,0.768,49,0.912,50,1.867,51,0.426,52,0.025,53,0.59,54,0.231,55,0.426,62,0.976,65,0.579,66,0.836,70,0.677,71,0.39,72,0.356,75,1.085,77,1.265,80,1.043,83,0.931,84,1.126,85,0.258,86,0.426,87,0.463,98,0.873,99,1.188,100,1.188,101,0.873,102,1.358,103,0.873,104,1.188,105,1.272,106,0.873,107,0.767,108,0.873,109,0.767,110,1.188,111,0.767,112,0.501,113,1.188,114,0.873,115,0.767,116,0.873,117,0.767,118,0.873,119,0.767,120,0.767,121,0.873,122,0.767,123,0.851,124,0.873,125,0.767,126,0.873,127,0.767,128,0.873,129,0.767,130,0.873,131,0.873,132,0.767,133,0.873,134,0.873,135,0.873,136,0.873,137,0.016,138,0.016,147,2.66,151,3.531,153,1.544,154,3.531,156,3.5,157,3.244,210,1.615,236,1.679,237,1.272,263,4.906,264,4.906,265,2.946,266,3.127,267,5.762,268,3.178,269,4.006,270,2.594,271,4.014,272,4.725,273,4.725,274,5.369,275,2.999,276,2.459,277,4.725,278,2.896,279,1.188,280,3.475,281,1.531,282,4.006,283,4.006,284,3.475,285,4.006,286,2.459,287,2.784,288,3.475,289,3.475,290,3.475,291,3.475,292,3.475,293,3.475,294,3.475,295,3.475,296,2.712,297,1.808,298,2.946,299,2.946,300,2.597,301,1.563,302,3.291,303,3.178,304,2.129,305,3.475,306,2.999,307,3.475,308,3.475,309,3.475,310,3.475,311,3.475,312,3.475,313,3.475,314,3.178,315,5.487,316,2.912,317,3.368,318,4.885,319,3.81,320,3.235,321,3.81,322,3.876,323,3.531,324,4.006,325,2.126]],["title/components/AddressManagementComponent.html",[0,0.114,29,0.762]],["body/components/AddressManagementComponent.html",[0,0.188,1,0.868,2,1.209,3,0.293,4,0.258,5,0.988,6,0.988,7,0.988,8,0.258,11,2.645,12,0.337,13,1.29,15,0.525,17,0.393,20,0.988,21,1.778,22,1.778,23,0.988,24,1.436,25,1.29,26,0.924,27,1.29,28,0.868,29,1.337,30,0.868,31,0.868,32,1.631,33,1.29,34,3.836,35,1.29,36,3.836,37,0.16,38,0.293,40,0.684,41,1.728,42,0.958,43,1.448,44,1.649,45,0.7,47,0.684,49,0.99,50,1.961,51,0.482,52,0.025,53,0.53,54,0.251,55,0.482,62,1.33,63,1.427,65,0.482,66,0.799,68,0.612,69,0.567,70,0.705,71,0.442,72,0.403,75,1.165,76,4.526,77,1.346,80,1.133,83,1.054,84,1.274,85,0.293,86,0.482,87,0.524,94,3.947,98,0.988,99,1.29,100,1.29,101,0.988,102,1.427,103,0.988,104,1.29,105,1.337,106,0.988,107,0.868,108,0.988,109,0.868,110,1.29,111,0.868,112,0.567,113,1.29,114,0.988,115,0.868,116,0.988,117,0.868,118,0.988,119,0.868,120,0.868,121,0.988,122,0.868,123,0.924,124,0.988,125,0.868,126,0.988,127,0.868,128,0.988,129,0.868,130,0.988,131,0.988,132,0.868,133,0.988,134,0.988,135,0.988,136,0.988,137,0.018,138,0.018,157,2.889,193,2.94,194,1.728,236,1.9,263,4.526,264,2.94,278,3.145,279,1.522,315,4.351,318,4.351,323,3.145,326,4.351,327,2.309,328,5.132,329,5.712,330,5.132,331,3.933,332,4.351,333,2.309,334,3.933,335,3.933,336,3.933,337,3.933,338,5.132,339,5.132,340,5.132,341,5.132]],["title/injectables/AddressService.html",[166,0.713,342,2.32]],["body/injectables/AddressService.html",[3,0.26,4,0.229,8,0.229,12,0.396,15,0.638,17,0.408,37,0.143,38,0.271,40,0.632,45,0.708,47,0.632,49,0.916,51,0.66,52,0.025,53,0.627,54,0.282,55,0.66,59,1.287,60,3.192,62,1.193,63,1.566,65,0.74,66,0.544,67,1.548,68,0.544,69,0.504,70,0.533,71,0.393,72,0.358,75,1.124,85,0.26,86,0.429,87,0.849,94,3.972,137,0.017,138,0.017,142,2.127,144,1.193,146,1.747,147,3.253,148,2.803,149,2.469,150,4.898,151,4.027,152,2.238,153,1.863,154,4.109,155,3.21,156,3.804,157,2.672,158,1.994,159,1.271,160,2.672,163,1.275,164,1.443,166,0.98,168,1.374,175,3.547,178,4.023,184,4.023,186,1.894,187,2.292,193,4.515,194,1.778,200,4.023,205,1.871,232,2.613,234,1.469,235,1.374,237,1.189,240,2.964,243,1.133,244,1.689,246,1.689,247,1.819,248,1.133,249,2.718,250,2.964,251,2.964,252,2.964,253,2.964,254,2.964,255,2.964,261,2.964,316,2.135,327,2.135,342,3.192,343,2.964,344,3.507,345,3.547,346,5.777,347,3.496,348,3.547,349,4.023,350,2.292,351,3.192,352,4.745,353,3.496,354,4.745,355,3.192,356,4.745,357,3.496,358,4.023,359,2.908,360,2.672,361,1.133,362,1.747,363,2.135,364,1.747,365,2.908,366,3.192,367,4.745,368,5.777,369,4.023,370,5.777,371,4.745,372,4.745,373,4.318,374,4.745,375,5.777,376,3.496,377,4.745,378,4.745,379,1.638,380,3.496,381,3.496,382,3.496,383,1.287,384,3.496]],["title/components/AppComponent.html",[0,0.114,107,0.762]],["body/components/AppComponent.html",[0,0.2,1,0.985,2,1.311,3,0.332,4,0.293,5,1.122,6,1.122,7,1.122,8,0.293,12,0.365,13,1.398,14,4.158,17,0.362,19,3.888,20,1.122,21,1.797,22,1.797,23,1.122,24,1.122,25,1.398,26,1.002,27,1.398,28,0.985,29,0.985,30,0.985,31,0.985,33,1.398,35,1.398,37,0.182,38,0.318,45,0.547,52,0.025,53,0.516,54,0.218,67,1.052,68,0.695,69,0.644,70,0.681,71,0.501,72,0.457,75,0.933,77,1.428,80,1.228,85,0.332,86,0.547,98,1.122,99,1.398,100,1.398,101,1.122,102,1.495,103,1.122,104,1.398,105,0.985,106,1.122,107,1.401,108,1.122,109,0.985,110,1.398,111,0.985,112,0.644,113,1.398,114,1.122,115,0.985,116,1.122,117,1.401,118,1.122,119,0.985,120,0.985,121,1.122,122,0.985,123,1.002,124,1.122,125,0.985,126,1.122,127,0.985,128,1.122,129,0.985,130,1.122,131,1.122,132,0.985,133,1.122,134,1.122,135,1.122,136,1.122,137,0.019,138,0.019,144,1.149,235,2.186,385,3.784,386,6.061,387,5.563,388,5.563,389,6.061,390,4.716,391,4.463,392,5.563,393,1.446,394,4.463]],["title/injectables/AuthService.html",[44,0.867,166,0.713]],["body/injectables/AuthService.html",[3,0.152,4,0.134,8,0.134,12,0.376,14,2.394,15,0.709,17,0.405,19,2.738,37,0.083,38,0.183,40,0.427,42,0.749,44,0.805,45,0.805,47,0.427,48,0.974,49,0.936,50,1.896,51,0.659,52,0.025,53,0.531,54,0.279,55,0.659,57,1.671,59,1.252,60,2.154,61,3.005,62,1.252,63,1.596,64,3.047,65,0.819,66,0.969,67,1.581,68,0.755,69,0.7,70,0.67,71,0.23,72,0.586,75,0.662,85,0.152,86,0.251,87,0.845,88,1.433,94,3.295,112,0.844,123,0.804,137,0.011,138,0.011,142,1.179,144,1.375,146,1.645,147,1.803,151,2.738,152,1.542,153,1.568,154,3.153,156,3.134,157,1.803,158,1.346,159,1.491,160,1.803,161,1.547,163,1.136,164,1.892,166,0.662,167,3.617,168,0.804,175,2.394,186,2.04,187,2.158,188,2.01,194,0.914,197,1.667,201,2.978,202,1.647,204,2.515,205,1.896,207,1.907,210,1.378,232,1.529,233,1.064,234,0.859,235,0.804,237,1.263,248,1.037,259,3.347,279,1.438,320,1.667,325,2.01,327,2.01,333,2.634,342,1.375,360,1.803,361,1.742,362,2.049,363,2.01,364,2.291,365,1.963,379,1.542,393,0.662,395,1.734,396,3.203,397,3.203,398,2.715,399,2.715,400,2.655,401,3.948,402,3.948,403,3.347,404,2.394,405,4.467,406,4.467,407,4.467,408,4.467,409,4.467,410,4.467,411,3.787,412,2.715,413,3.787,414,3.203,415,4.467,416,3.203,417,3.203,418,1.375,419,1.98,420,2.798,421,3.295,422,3.203,423,1.547,424,1.547,425,1.179,426,3.203,427,2.045,428,2.495,429,2.551,430,2.301,431,2.738,432,3.203,433,3.203,434,2.515,435,2.715,436,2.394,437,2.154,438,3.203,439,2.045,440,3.787,441,3.813,442,3.203,443,2.045,444,2.045,445,2.045,446,2.045,447,3.203,448,3.203,449,3.787,450,3.787,451,2.045,452,3.203,453,2.045,454,2.045,455,3.005,456,1.877,457,3.203,458,2.045,459,4.467,460,1.667,461,1.346,462,2.394,463,2.045,464,3.203,465,2.715,466,1.963,467,3.203,468,2.045,469,3.203,470,3.347,471,3.203,472,2.045,473,3.203,474,3.203,475,3.203,476,3.203,477,3.203,478,3.203,479,2.731,480,2.343,481,2.045,482,2.394,483,2.515,484,1.179,485,3.005,486,3.005,487,2.223,488,3.46,489,3.203,490,2.515,491,2.045,492,3.203,493,3.005,494,2.951,495,4.85,496,1.659,497,2.045,498,5.144,499,4.467,500,2.045,501,3.203,502,2.045,503,3.203,504,2.154,505,2.045,506,3.203,507,1.375,508,1.529,509,1.064,510,1.375,511,1.253,512,1.375,513,2.045,514,2.419,515,2.045,516,2.045,517,1.253,518,1.064,519,1.253,520,2.045,521,3.948,522,2.045,523,1.564,524,5.723,525,3.948,526,3.203,527,1.375,528,2.045,529,3.203,530,3.203,531,2.045,532,1.375,533,2.045,534,2.045,535,2.045,536,2.045,537,2.045,538,2.045,539,2.045,540,1.151,541,3.948,542,3.203,543,1.375,544,2.045,545,2.045,546,3.203,547,2.045,548,3.203,549,3.203,550,3.203,551,2.045,552,3.203,553,3.203,554,2.045,555,2.045,556,2.045,557,2.045,558,2.715]],["title/components/CardDetailComponent.html",[0,0.114,109,0.762]],["body/components/CardDetailComponent.html",[0,0.149,1,0.561,2,0.891,3,0.189,4,0.167,5,0.639,6,0.639,7,0.639,8,0.167,12,0.296,13,0.951,15,0.652,17,0.408,20,0.639,21,1.694,22,1.694,23,0.639,24,0.639,25,0.951,26,0.681,27,0.951,28,0.561,29,0.561,30,0.561,31,0.561,32,1.289,33,0.951,35,0.951,37,0.104,38,0.216,40,0.504,41,1.428,42,0.634,43,0.936,44,1.459,45,0.814,47,0.666,48,1.15,49,0.491,50,1.225,51,0.312,52,0.025,53,0.419,54,0.244,55,0.312,62,1.033,65,0.464,66,0.779,67,0.891,68,0.589,69,0.546,70,0.67,71,0.285,72,0.26,75,0.634,77,1.064,80,1.316,83,0.681,84,0.824,85,0.189,86,0.312,87,0.602,88,0.997,98,0.639,99,0.951,100,0.951,101,0.639,102,1.179,103,0.639,104,0.951,105,0.561,106,0.639,107,0.561,108,0.639,109,1.104,110,0.951,111,0.561,112,0.808,113,0.951,114,0.639,115,0.561,116,0.639,117,0.561,118,0.639,119,0.561,120,0.561,121,0.639,122,0.561,123,0.681,124,0.639,125,0.561,126,0.639,127,0.561,128,0.639,129,0.561,130,0.639,131,0.639,132,0.561,133,0.639,134,0.639,135,0.639,136,0.639,137,0.013,138,0.013,144,0.781,159,1.598,161,2.416,202,0.681,210,1.707,237,1.389,258,0.999,266,2.707,270,2.182,275,2.603,276,1.968,279,1.344,281,1.62,286,2.603,287,2.416,296,2.867,297,1.323,301,1.144,303,3.364,304,1.558,306,3.275,316,3.057,317,3.536,319,3.435,320,2.917,321,3.435,323,3.065,324,4.751,325,1.144,333,2.251,359,2.318,393,0.824,403,3.829,419,2.196,423,1.827,424,1.827,425,1.393,428,2.717,449,4.241,482,4.458,523,0.773,558,2.156,559,4.991,560,5.66,561,1.901,562,2.137,563,2.251,564,2.827,565,2.543,566,3.207,567,3.207,568,4.517,569,5.347,570,3.364,571,3.739,572,3.739,573,3.739,574,3.739,575,3.739,576,3.364,577,3.739,578,3.739,579,3.739,580,3.739,581,2.804,582,3.782,583,2.827,584,2.543,585,2.543,586,1.487,587,2.543,588,3.207,589,2.544,590,2.543,591,2.827,592,2.544,593,2.543,594,2.543,595,2.543,596,2.543,597,2.543,598,2.543,599,2.543,600,2.543,601,2.543,602,2.543,603,2.543,604,2.543,605,2.543,606,2.543,607,2.543,608,2.543,609,2.543,610,2.543,611,2.543,612,2.543,613,2.543,614,2.543,615,1.558,616,1.901,617,1.323,618,2.543,619,2.543,620,3.782,621,1.228,622,2.543,623,3.782,624,3.782,625,3.782,626,3.782,627,3.782,628,3.782,629,3.782,630,3.782,631,3.782,632,3.782,633,3.782,634,2.543,635,2.543,636,2.543,637,2.543,638,2.543,639,2.543,640,2.543,641,2.543,642,2.543,643,2.543,644,2.543,645,4.517,646,2.156,647,2.543,648,2.543,649,2.543,650,2.543,651,2.543,652,2.543,653,2.543,654,2.543,655,2.543,656,2.543,657,2.543,658,2.543,659,1.432,660,3.782,661,2.543,662,4.458,663,4.241,664,4.241,665,3.065,666,3.065,667,4.241,668,3.364,669,3.739,670,5.002,671,3.782]],["title/interfaces/CardItem.html",[112,0.498,139,1.356]],["body/interfaces/CardItem.html",[3,0.298,4,0.263,8,0.263,12,0.263,15,0.59,17,0.412,37,0.163,38,0.296,52,0.025,54,0.339,57,1.482,59,0.827,62,0.827,67,1.681,85,0.298,112,0.749,137,0.018,138,0.018,139,1.573,140,2.254,142,2.121,143,2.992,144,1.479,145,2.453,152,2.234,153,1.872,158,2.181,159,1.633,160,2.923,163,1.146,174,2.701,379,1.792,428,2.803,484,1.474,488,3.492,493,3.492,562,1.474,563,2.842,570,4.1,571,4.557,572,4.557,573,4.557,574,4.557,575,4.557,576,4.1,577,4.557,578,4.557,579,4.557,580,4.557,665,3.181,667,4.401,668,3.492,672,3.393,673,2.453,674,5.168,675,5.487,676,5.191,677,6.096,678,5.191,679,5.191,680,5.191,681,5.191,682,5.191]],["title/injectables/CardItemService.html",[166,0.713,617,1.795]],["body/injectables/CardItemService.html",[3,0.085,4,0.172,8,0.075,12,0.232,15,0.564,17,0.373,26,0.357,37,0.081,38,0.113,40,0.264,45,0.474,49,0.382,51,0.383,52,0.025,53,0.29,54,0.203,55,0.383,57,0.566,59,0.409,62,0.645,65,0.563,67,0.911,68,0.178,69,0.378,70,0.222,71,0.128,77,0.736,80,1.338,85,0.085,86,0.14,87,0.416,88,0.578,97,4.135,102,0.27,112,0.794,137,0.007,138,0.007,142,1.424,152,2.268,153,1.176,158,1.313,159,0.837,163,0.437,164,0.95,166,0.409,168,0.45,186,1.453,194,1.253,197,1.031,202,0.946,204,2.178,234,0.481,235,0.45,237,1.055,243,0.642,244,0.957,246,0.553,248,2.143,249,1.976,269,5.016,325,0.892,344,1.759,350,0.957,361,1.012,362,0.729,363,0.892,364,1.15,373,3.972,383,0.421,428,2.227,431,1.214,434,1.988,437,2.101,504,1.333,512,0.77,523,0.348,562,2.027,563,2.391,570,4.395,571,4.885,572,4.885,573,4.885,574,4.885,575,4.885,576,4.395,577,4.885,578,4.885,579,4.885,580,4.885,592,1.333,617,1.031,662,2.335,668,2.101,669,4.336,674,5.54,683,0.97,684,2.222,685,1.981,686,1.68,687,1.68,688,1.68,689,3.124,690,1.981,691,1.144,692,1.333,693,1.68,694,1.144,695,1.68,696,1.144,697,2.691,698,1.68,699,1.68,700,2.792,701,1.144,702,1.981,703,1.68,704,2.335,705,2.335,706,1.68,707,1.481,708,1.144,709,3.124,710,1.981,711,1.981,712,5.313,713,5.313,714,5.313,715,1.981,716,6.534,717,1.981,718,6.016,719,3.868,720,6.179,721,4.391,722,1.981,723,5.916,724,5.313,725,6.819,726,1.981,727,1.981,728,3.868,729,4.391,730,3.124,731,1.981,732,4.391,733,1.981,734,1.981,735,1.981,736,5.916,737,5.076,738,3.868,739,4.391,740,1.981,741,1.981,742,1.981,743,1.981,744,1.981,745,3.868,746,1.981,747,1.981,748,1.981,749,4.391,750,4.391,751,4.391,752,4.391,753,1.981,754,3.722,755,3.868,756,1.981,757,5.801,758,6.016,759,4.391,760,1.981,761,1.981,762,4.778,763,4.391,764,3.124,765,3.868,766,5.916,767,5.313,768,3.868,769,3.868,770,1.981,771,4.778,772,3.124,773,3.414,774,1.981,775,1.981,776,1.981,777,1.981,778,1.981,779,1.981,780,3.124,781,3.124,782,1.981,783,3.868,784,5.506,785,3.124,786,3.124,787,1.981,788,1.981,789,4.05,790,3.124,791,1.981,792,1.981,793,1.981,794,1.981,795,1.981,796,1.981,797,4.304,798,3.124,799,1.981,800,4.391,801,1.981,802,4.778,803,1.981,804,4.391,805,3.868,806,4.391,807,5.313,808,3.124,809,1.981,810,1.981,811,1.981,812,1.981,813,3.868,814,1.981,815,1.981,816,1.981,817,1.981,818,1.981,819,1.981,820,1.981,821,1.981,822,1.981,823,1.981,824,1.981,825,1.481,826,3.124,827,5.313,828,1.981,829,4.391,830,1.981,831,4.05,832,1.981,833,1.981,834,1.981,835,3.124,836,3.124,837,1.981,838,1.981,839,1.981,840,1.981,841,1.981,842,3.124,843,3.124,844,1.981,845,1.981,846,1.981,847,1.981,848,1.981,849,5.313,850,3.868,851,1.981,852,1.981,853,1.981,854,1.981,855,1.981,856,3.124,857,1.981,858,1.981,859,2.649,860,3.722,861,4.391,862,3.868,863,1.981,864,1.981,865,3.124,866,1.981,867,1.981,868,1.981,869,1.981,870,1.981,871,3.124,872,1.981,873,3.868,874,2.649,875,3.124,876,1.981,877,1.981,878,1.981,879,1.981,880,1.981,881,2.891,882,3.124,883,3.124,884,1.981,885,4.391,886,1.981,887,1.981,888,3.124,889,4.391,890,3.868,891,1.981,892,3.124,893,3.124,894,3.124,895,1.981,896,1.981,897,1.981,898,1.981,899,1.981,900,1.981,901,1.981,902,1.981,903,1.981,904,3.124,905,1.981,906,1.981,907,3.124,908,1.981,909,3.124,910,1.981,911,1.981,912,1.981,913,1.981,914,1.981,915,1.981,916,1.981,917,1.981,918,1.981,919,3.124,920,5.076,921,1.981,922,3.124,923,1.981,924,1.981,925,3.868,926,1.981,927,1.981,928,4.778,929,1.981,930,1.981,931,3.868,932,1.981,933,1.981,934,5.313,935,1.981,936,1.981,937,1.981,938,1.981,939,1.981,940,1.981,941,1.981,942,1.981,943,3.124,944,3.124,945,3.124,946,1.981,947,1.981,948,5.313,949,1.981,950,3.868,951,1.981,952,1.981,953,3.124,954,1.981,955,1.981,956,1.981,957,4.391,958,3.124,959,3.868,960,3.868,961,3.868,962,3.868,963,1.981,964,3.868,965,1.981,966,3.124,967,3.111,968,4.391,969,1.981,970,1.981,971,1.981,972,1.981,973,1.981,974,1.981,975,1.981,976,1.981,977,1.981,978,1.981,979,1.981,980,1.981,981,1.981,982,1.981,983,3.868,984,1.981,985,1.981,986,3.124,987,1.981,988,1.981,989,1.981,990,1.981,991,1.981,992,1.981,993,1.981,994,3.124,995,1.981,996,1.981,997,1.981,998,1.981,999,3.124,1000,1.981,1001,1.981,1002,1.981,1003,1.981,1004,1.981,1005,1.981,1006,1.981,1007,1.981,1008,1.981,1009,3.124,1010,3.124,1011,1.981,1012,1.981,1013,1.981,1014,1.981,1015,3.124,1016,1.981,1017,1.68,1018,3.124,1019,3.868,1020,1.981,1021,1.981,1022,1.981,1023,1.981,1024,1.981,1025,1.481,1026,3.124,1027,3.868,1028,4.391,1029,4.391,1030,1.981,1031,1.981,1032,1.981,1033,1.981,1034,3.124,1035,1.981,1036,1.981,1037,1.981,1038,1.981,1039,1.981,1040,1.981,1041,4.778,1042,1.981,1043,4.391,1044,3.124,1045,3.124,1046,1.981,1047,1.981,1048,1.981,1049,1.981,1050,1.981,1051,1.981,1052,3.124,1053,1.981,1054,1.981,1055,1.981,1056,3.868,1057,1.981,1058,1.981,1059,1.981,1060,1.981,1061,1.981,1062,1.981,1063,1.981,1064,1.981,1065,1.981,1066,1.981,1067,3.868,1068,3.868,1069,1.981,1070,1.68,1071,1.981,1072,1.981,1073,1.981,1074,1.981,1075,1.981,1076,1.981,1077,1.981,1078,1.981,1079,1.981,1080,1.981,1081,1.981,1082,1.981,1083,1.981,1084,1.981,1085,1.981,1086,1.981,1087,1.981,1088,4.391,1089,1.981,1090,3.124,1091,3.124,1092,1.981,1093,1.981,1094,1.981,1095,1.981,1096,1.981,1097,1.981,1098,1.981,1099,1.981,1100,1.981,1101,1.981,1102,3.124,1103,1.981,1104,1.981,1105,1.981,1106,1.981,1107,1.981,1108,1.981,1109,1.981,1110,1.981,1111,1.981,1112,1.981,1113,1.981,1114,1.981,1115,1.981,1116,1.981,1117,1.981,1118,1.981,1119,1.981,1120,1.981,1121,1.981,1122,1.981,1123,1.981,1124,1.981,1125,1.981,1126,1.981,1127,1.981,1128,1.981,1129,1.981,1130,1.981,1131,1.981,1132,1.981,1133,1.981,1134,1.981,1135,1.981,1136,1.981,1137,1.981,1138,1.144,1139,1.68,1140,1.68,1141,1.144,1142,0.97,1143,0.855,1144,1.144,1145,0.97,1146,0.97,1147,2.164,1148,1.144,1149,1.144,1150,1.144,1151,0.97,1152,0.644,1153,1.144,1154,1.144,1155,1.144]],["title/components/CardManageComponent.html",[0,0.114,31,0.762]],["body/components/CardManageComponent.html",[0,0.177,1,0.764,2,1.111,3,0.258,4,0.227,5,0.87,6,0.87,7,0.87,8,0.227,12,0.352,13,1.185,15,0.589,17,0.402,18,3.995,20,0.87,21,1.756,22,1.756,23,0.87,24,0.87,25,1.185,26,0.849,27,1.185,28,0.764,29,0.764,30,0.764,31,1.27,32,1.53,33,1.185,35,1.185,37,0.141,38,0.269,40,0.628,41,1.642,42,0.964,43,1.274,44,1.597,45,0.738,47,0.628,48,1.433,49,0.668,51,0.578,52,0.025,53,0.534,54,0.262,55,0.578,62,1.312,65,0.657,66,0.896,68,0.539,69,0.499,70,0.697,71,0.389,72,0.354,75,0.79,77,1.263,80,1.464,81,4.642,83,0.927,84,1.121,85,0.258,86,0.424,87,0.766,88,1.183,98,0.87,99,1.185,100,1.185,101,0.87,102,1.356,103,0.87,104,1.185,105,0.764,106,0.87,107,0.764,108,0.87,109,0.764,110,1.185,111,0.764,112,0.917,113,1.185,114,0.87,115,0.764,116,0.87,117,0.764,118,0.87,119,0.764,120,0.764,121,0.87,122,0.764,123,0.849,124,0.87,125,0.764,126,0.87,127,0.764,128,0.87,129,0.764,130,0.87,131,0.87,132,0.764,133,0.87,134,0.87,135,0.87,136,0.87,137,0.016,138,0.016,144,1.188,152,1.627,159,1.263,186,1.629,194,1.773,242,2.453,258,1.852,279,1.185,281,1.527,320,1.801,325,2.121,379,1.627,393,1.121,419,2.381,423,2.277,424,2.277,425,1.735,428,2.441,466,3.806,482,3.523,523,1.052,559,4.642,562,2.414,563,2.859,564,2.587,581,2.779,586,1.852,615,2.121,616,2.587,617,1.801,662,3.523,663,3.995,664,3.995,665,2.888,666,2.888,773,2.328,1147,2.888,1156,2.934,1157,4.713,1158,4.713,1159,4.713,1160,3.284,1161,5.753,1162,4.713,1163,5.359,1164,4.713,1165,3.461,1166,4.713,1167,3.523,1168,3.461,1169,4.713,1170,3.461,1171,4.713,1172,3.461,1173,3.461,1174,2.328,1175,2.587,1176,3.461,1177,3.461,1178,2.934,1179,3.461,1180,2.934,1181,2.934,1182,2.121,1183,2.934,1184,2.587,1185,3.461,1186,3.523,1187,4.713,1188,4.713,1189,3.17,1190,3.17,1191,2.888]],["title/components/CarditemListComponent.html",[0,0.114,111,0.762]],["body/components/CarditemListComponent.html",[0,0.171,1,0.722,2,1.068,3,0.243,4,0.215,5,0.822,6,0.822,7,0.822,8,0.215,12,0.369,13,1.412,15,0.604,17,0.402,20,0.822,21,1.746,22,1.746,23,0.822,24,0.822,25,1.139,26,0.816,27,1.139,28,0.722,29,0.722,30,0.722,31,0.722,32,1.485,33,1.139,35,1.139,37,0.133,38,0.259,40,0.604,41,1.603,42,0.942,44,1.603,45,0.688,47,0.604,48,1.378,50,1.468,51,0.556,52,0.025,53,0.521,54,0.254,55,0.556,57,1.684,59,1.16,60,3.778,65,0.556,66,0.81,67,1.226,68,0.509,69,0.472,70,0.685,71,0.367,72,0.335,75,0.76,77,1.226,80,1.001,83,0.876,84,1.059,85,0.243,86,0.401,87,0.786,88,1.148,98,0.822,99,1.139,100,1.139,101,0.822,102,1.324,103,0.822,104,1.139,105,0.722,106,0.822,107,0.722,108,0.822,109,0.722,110,1.139,111,1.24,112,0.946,113,1.139,114,0.822,115,0.722,116,0.822,117,0.722,118,0.822,119,0.722,120,0.722,121,0.822,122,0.722,123,0.816,124,0.822,125,0.722,126,0.822,127,0.722,128,0.822,129,0.722,130,0.822,131,0.822,132,0.722,133,0.822,134,0.822,135,0.822,136,0.822,137,0.016,138,0.016,153,1.394,158,1.904,159,1.505,164,1.856,174,2.359,188,2.039,194,1.603,202,1.394,242,2.359,243,1.468,258,1.781,279,1.483,281,1.468,325,2.527,350,2.19,379,1.565,393,1.059,423,2.19,424,2.19,425,1.669,428,2.626,429,2.044,430,1.781,431,2.004,434,2.929,437,2.2,450,3.843,456,1.374,562,2.172,563,2.816,570,4.105,581,2.713,586,1.781,615,2.004,616,2.444,617,1.702,659,1.841,668,3.049,684,4.41,700,3.778,707,3.388,773,2.2,1139,3.843,1174,2.2,1175,2.444,1181,2.772,1191,2.778,1192,5.001,1193,5.001,1194,2.444,1195,4.105,1196,3.843,1197,3.843,1198,3.843,1199,4.533,1200,3.27,1201,4.762,1202,5.202,1203,4.533,1204,3.889,1205,4.533,1206,3.27,1207,3.27,1208,3.843,1209,4.762,1210,3.388,1211,4.533,1212,4.533,1213,2.772,1214,3.27,1215,3.27,1216,3.27,1217,3.27,1218,3.27,1219,1.702,1220,3.27,1221,3.27,1222,4.533,1223,4.533,1224,4.533,1225,3.388]],["title/injectables/CardsService.html",[166,0.713,581,1.667]],["body/injectables/CardsService.html",[3,0.194,4,0.171,8,0.171,12,0.403,15,0.702,17,0.411,37,0.157,38,0.22,40,0.514,42,0.769,45,0.765,47,0.853,48,1.173,49,0.744,51,0.717,52,0.025,53,0.543,54,0.309,55,0.717,59,1.047,65,0.776,66,0.955,67,1.525,68,0.601,69,0.556,70,0.569,71,0.293,80,1.249,85,0.194,86,0.32,87,0.862,88,1.013,112,0.976,137,0.013,138,0.013,142,1.865,144,1.047,152,1.749,153,1.229,159,1.357,163,0.851,166,0.797,168,1.026,171,2.364,172,3.926,173,2.811,174,2.387,179,1.6,180,3.105,182,3.105,183,3.587,186,2.086,187,1.863,188,2.28,191,3.105,192,3.468,194,1.864,195,2.594,196,3.966,197,2.007,198,2.364,201,3.398,202,1.516,204,2.853,207,2.216,208,1.6,209,3.105,210,1.033,211,2.811,212,2.364,213,2.364,214,2.364,215,2.364,222,2.364,223,2.364,224,2.364,230,2.364,231,1.6,233,1.358,234,1.097,235,1.026,236,1.261,237,1.414,238,1.6,242,2.637,243,1.249,244,1.863,246,1.261,248,1.486,249,1.735,258,2.125,314,3.408,325,1.735,350,1.863,351,2.594,358,3.27,361,1.249,362,1.865,379,1.953,383,0.961,428,2.518,434,2.583,461,1.62,512,1.756,523,0.794,527,3.085,532,1.756,562,2.551,563,2.938,581,1.863,592,3.806,686,3.27,687,3.27,688,3.27,693,3.27,695,3.27,699,3.27,700,4.127,703,4.583,704,4.492,773,2.594,1140,2.213,1142,2.213,1143,1.951,1145,2.213,1146,2.213,1147,3.313,1151,2.213,1152,1.47,1160,3.76,1174,2.594,1175,2.883,1209,4.296,1210,3.787,1226,2.213,1227,2.364,1228,3.857,1229,5.067,1230,3.857,1231,3.857,1232,3.857,1233,2.61,1234,3.787,1235,3.857,1236,3.857,1237,2.61,1238,2.61,1239,2.61,1240,3.857,1241,3.857,1242,2.61,1243,5.067,1244,3.857,1245,3.857,1246,5.067,1247,3.857,1248,2.61,1249,3.857,1250,2.61,1251,3.857,1252,3.857,1253,3.857,1254,3.857,1255,3.857,1256,3.857,1257,3.857,1258,2.61,1259,3.857,1260,3.857,1261,3.857,1262,3.857,1263,3.857,1264,2.61,1265,2.61,1266,3.857,1267,2.61,1268,2.61,1269,2.61,1270,2.61,1271,2.61,1272,2.61,1273,2.61,1274,2.61,1275,2.61,1276,2.61,1277,2.61,1278,2.61,1279,2.61,1280,2.61,1281,2.61,1282,2.61,1283,2.61]],["title/components/LoginComponent.html",[0,0.114,115,0.762]],["body/components/LoginComponent.html",[0,0.179,1,0.785,2,1.131,3,0.264,4,0.233,5,0.893,6,0.893,7,0.893,8,0.233,12,0.357,13,1.206,15,0.491,17,0.407,19,2.94,20,0.893,21,1.761,22,1.761,23,0.893,24,0.893,25,1.206,26,0.864,27,1.206,28,0.785,29,0.785,30,0.785,31,0.785,32,1.551,33,1.206,35,1.206,37,0.145,38,0.274,40,0.639,41,1.66,42,0.911,43,1.308,44,1.573,45,0.767,47,0.639,48,1.459,49,1.123,50,1.884,51,0.436,52,0.025,53,0.504,54,0.234,55,0.436,59,1.201,62,1.201,63,1.475,65,0.588,66,0.906,70,0.682,71,0.399,72,0.364,75,0.804,77,1.28,80,1.059,83,0.952,84,1.151,85,0.264,86,0.436,87,0.639,98,0.893,99,1.206,100,1.206,101,0.893,102,1.371,103,0.893,104,1.206,105,0.785,106,0.893,107,0.785,108,0.893,109,0.785,110,1.206,111,0.785,112,0.513,113,1.206,114,0.893,115,1.284,116,0.893,117,0.785,118,0.893,119,0.785,120,0.785,121,0.893,122,0.785,123,1.171,124,0.893,125,0.785,126,0.893,127,0.785,128,0.893,129,0.785,130,0.893,131,0.893,132,0.785,133,0.893,134,0.893,135,0.893,136,0.893,137,0.017,138,0.017,144,0.991,159,1.677,161,2.81,202,1.285,210,1.455,236,1.717,237,1.059,266,3.273,270,2.624,275,3.027,276,2.497,279,1.206,281,1.554,286,2.497,287,2.81,296,2.444,297,1.85,301,1.599,306,2.497,316,2.159,317,3.027,393,1.151,412,5.306,419,2.395,425,1.767,436,4.348,441,2.178,456,1.493,460,3.257,540,2.001,565,3.058,586,1.886,1182,2.94,1210,2.657,1219,1.85,1284,3.013,1285,3.587,1286,4.798,1287,4.798,1288,5.432,1289,4.798,1290,3.554,1291,3.554,1292,3.587,1293,2.657,1294,3.554,1295,2.657,1296,3.554,1297,3.554,1298,3.554,1299,3.554,1300,3.554,1301,3.013,1302,3.554,1303,3.554,1304,3.554,1305,4.303,1306,3.554,1307,3.564,1308,4.931,1309,3.227]],["title/components/NavbarComponent.html",[0,0.114,117,0.762]],["body/components/NavbarComponent.html",[0,0.174,1,0.74,2,1.086,3,0.249,4,0.22,5,0.842,6,0.842,7,0.842,8,0.22,12,0.346,13,1.426,15,0.703,17,0.402,20,0.842,21,1.75,22,1.75,23,0.842,24,0.842,25,1.158,26,0.83,27,1.158,28,0.74,29,0.74,30,0.74,31,0.74,32,1.504,33,1.158,35,1.158,37,0.137,38,0.263,40,0.614,41,1.62,42,0.883,44,1.613,45,0.754,47,0.614,48,1.401,49,0.89,50,1.493,51,0.411,52,0.025,53,0.489,54,0.257,55,0.411,59,1.326,63,1.512,64,2.399,65,0.646,66,0.884,68,0.522,69,0.483,70,0.668,71,0.376,72,0.343,75,0.773,77,1.242,80,1.017,83,0.898,84,1.085,85,0.249,86,0.411,87,0.614,88,0.74,91,3.908,98,0.842,99,1.158,100,1.158,101,0.842,102,1.337,103,0.842,104,1.158,105,0.74,106,0.842,107,0.74,108,0.842,109,0.74,110,1.158,111,0.74,112,0.483,113,1.158,114,0.842,115,0.74,116,0.842,117,1.253,118,0.842,119,0.74,120,0.74,121,0.842,122,0.74,123,0.83,124,0.842,125,0.74,126,0.842,127,0.74,128,0.842,129,0.74,130,0.842,131,0.842,132,0.74,133,0.842,134,0.842,135,0.842,136,0.842,137,0.016,138,0.016,144,1.172,148,2.074,159,1.235,163,1.253,164,1.401,210,1.235,236,1.619,243,1.085,266,2.742,270,2.545,279,1.546,281,1.838,287,2.742,296,2.074,301,1.508,333,2.074,345,3.445,350,2.227,361,1.493,362,1.697,363,2.074,364,2.089,366,3.1,379,1.591,383,1.697,393,1.085,398,3.908,399,3.908,411,4.467,413,4.811,418,2.254,419,2.319,423,2.227,424,2.227,425,1.697,429,1.811,430,1.811,431,2.825,441,3.478,455,3.1,456,1.408,494,2.504,504,3.1,562,1.697,563,2.074,565,2.967,586,2.417,669,4.242,697,2.825,700,3.1,704,3.445,705,3.445,706,5.44,707,4.242,1143,2.504,1182,2.825,1219,1.744,1305,3.1,1309,3.1,1310,2.84,1311,5.675,1312,3.445,1313,4.609,1314,4.609,1315,5.269,1316,5.675,1317,4.609,1318,3.35,1319,5.675,1320,4.609,1321,3.35,1322,4.609,1323,3.35,1324,3.35,1325,3.35,1326,3.35,1327,3.35,1328,3.35,1329,3.35,1330,3.35,1331,3.35,1332,5.269,1333,5.675,1334,4.609,1335,4.609,1336,4.609,1337,4.609,1338,4.609,1339,4.609,1340,3.1]],["title/components/OrderDetailComponent.html",[0,0.114,119,0.762]],["body/components/OrderDetailComponent.html",[0,0.178,1,0.774,2,1.121,3,0.261,4,0.23,5,0.881,6,0.881,7,0.881,8,0.23,12,0.354,13,1.195,15,0.638,17,0.403,20,0.881,21,1.758,22,1.758,23,0.881,24,0.881,25,1.195,26,0.856,27,1.195,28,0.774,29,0.774,30,0.774,31,0.774,32,1.54,33,1.195,35,1.195,37,0.143,38,0.272,40,0.633,42,1.014,45,0.741,47,0.633,51,0.43,52,0.025,53,0.5,54,0.283,55,0.43,62,1.373,65,0.583,68,0.74,69,0.686,70,0.65,71,0.394,72,0.359,75,0.797,77,1.549,80,1.05,83,0.94,85,0.261,86,0.43,87,0.467,98,0.881,99,1.195,100,1.195,101,0.881,102,1.363,103,0.881,104,1.195,105,0.774,106,0.881,107,0.774,108,0.881,109,0.774,110,1.195,111,0.774,112,0.872,113,1.195,114,0.881,115,0.774,116,0.881,117,0.774,118,0.881,119,1.277,120,0.774,121,0.881,122,0.774,123,0.856,124,0.881,125,0.774,126,0.881,127,0.774,128,0.881,129,0.774,130,0.881,131,0.881,132,0.774,133,0.881,134,0.881,135,0.881,136,0.881,137,0.017,138,0.017,142,1.751,144,0.982,153,1.55,161,2.297,164,1.446,186,1.446,194,1.357,205,1.54,237,0.774,248,1.748,281,1.54,327,2.603,361,1.54,364,1.751,383,1.751,400,3.629,428,1.869,429,2.657,430,2.45,455,3.198,496,2.43,509,1.825,523,1.066,561,2.622,562,2.13,564,3.555,566,4.031,567,4.031,615,2.149,665,3.975,666,2.914,1160,2.914,1167,3.555,1186,3.555,1189,4.067,1190,4.067,1191,3.821,1195,3.891,1225,3.555,1341,4.193,1342,4.193,1343,5.285,1344,4.512,1345,4.52,1346,4.755,1347,5.395,1348,4.755,1349,3.507,1350,4.904,1351,3.507,1352,4.755,1353,3.198,1354,4.755,1355,4.031,1356,3.507,1357,4.755,1358,3.257,1359,5.395,1360,2.359,1361,2.622,1362,2.973,1363,2.973,1364,4.031,1365,4.755]],["title/components/OrderFinishComponent.html",[0,0.114,120,0.762]],["body/components/OrderFinishComponent.html",[0,0.183,1,0.817,2,1.162,3,0.275,4,0.243,5,0.93,6,0.93,7,0.93,8,0.243,12,0.324,13,1.239,15,0.505,17,0.406,20,0.93,21,1.768,22,1.768,23,0.93,24,0.93,25,1.239,26,0.888,27,1.239,28,0.817,29,0.817,30,0.817,31,0.817,33,1.239,35,1.239,37,0.151,38,0.282,40,0.657,41,1.687,42,0.991,43,1.362,44,1.625,45,0.679,47,0.657,49,0.951,50,1.915,51,0.454,52,0.025,53,0.514,54,0.241,55,0.454,57,1.407,62,1.018,64,2.565,65,0.454,66,0.576,68,0.576,69,0.534,70,0.711,71,0.415,72,0.379,75,0.826,77,1.582,80,1.088,84,1.199,85,0.275,86,0.454,87,0.657,88,1.088,92,4.179,98,0.93,99,1.239,100,1.239,101,0.93,102,1.393,103,0.93,104,1.239,105,0.817,106,0.93,107,0.817,108,0.93,109,0.817,110,1.239,111,0.817,112,0.534,113,1.239,114,0.93,115,0.817,116,0.93,117,0.817,118,0.93,119,1.305,120,1.305,121,0.93,122,0.817,123,0.888,124,0.93,125,0.817,126,0.93,127,0.817,128,0.93,129,0.817,130,0.93,131,0.93,132,0.817,133,0.93,134,0.93,135,0.93,136,0.93,137,0.017,138,0.017,163,1.088,205,1.796,248,1.199,258,1.454,279,1.592,281,1.597,333,2.66,393,1.199,400,3.729,419,2.417,425,1.815,429,2.489,430,2.489,466,3.021,490,2.083,496,2.66,509,1.926,511,2.268,523,1.125,540,2.083,543,2.489,565,3.121,1341,3.976,1342,2.489,1358,3.329,1360,2.489,1361,2.766,1366,5.012,1367,3.137,1368,4.93,1369,4.93,1370,4.93,1371,4.93,1372,4.93,1373,4.93,1374,3.7,1375,3.685,1376,4.93,1377,4.93,1378,3.685,1379,4.179,1380,3.685,1381,3.137,1382,3.7,1383,2.766,1384,3.7,1385,3.7,1386,3.137,1387,3.137,1388,3.7,1389,3.7,1390,4.179,1391,4.93,1392,4.93,1393,4.93,1394,4.179,1395,4.93]],["title/components/OrderListComponent.html",[0,0.114,30,0.762]],["body/components/OrderListComponent.html",[0,0.161,1,0.641,2,0.982,3,0.216,4,0.191,5,0.73,6,0.73,7,0.73,8,0.191,12,0.385,13,1.047,15,0.633,17,0.409,20,0.73,21,1.723,22,1.723,23,0.73,24,0.73,25,1.047,26,0.878,27,1.047,28,0.641,29,0.641,30,1.176,31,0.641,32,1.392,33,1.047,35,1.047,37,0.118,38,0.238,40,0.555,41,1.521,42,0.893,43,1.069,44,1.52,45,0.759,47,0.71,48,1.267,50,1.35,51,0.653,52,0.025,53,0.545,54,0.295,55,0.653,59,1.278,62,1.278,63,1.384,64,2.169,65,0.72,66,0.759,68,0.759,69,0.703,70,0.695,71,0.326,72,0.297,75,0.699,77,1.507,78,4.711,80,1.176,83,0.778,84,0.94,85,0.216,86,0.356,87,0.752,88,0.92,98,0.73,99,1.047,100,1.047,101,0.73,102,1.255,103,0.73,104,1.047,105,0.641,106,0.73,107,0.641,108,0.73,109,0.641,110,1.047,111,0.641,112,0.893,113,1.047,114,0.73,115,0.641,116,0.73,117,0.641,118,0.73,119,1.176,120,0.641,121,0.73,122,0.641,123,0.75,124,0.73,125,0.641,126,0.73,127,0.641,128,0.73,129,0.641,130,0.73,131,0.73,132,0.641,133,0.73,134,0.73,135,0.73,136,0.73,137,0.015,138,0.015,144,1.1,146,1.534,148,1.875,152,1.439,153,1.427,155,2.013,161,2.013,163,0.92,186,1.62,194,1.676,202,1.116,205,1.726,237,0.92,243,0.94,248,1.35,279,1.225,281,1.35,326,3.533,361,1.35,362,1.534,383,1.795,421,3.707,423,2.013,424,2.013,429,2.684,430,2.684,435,4.979,441,2.554,470,4.133,484,1.534,493,2.803,496,2.687,509,1.511,514,1.779,517,1.779,519,2.554,523,1.267,562,2.355,586,1.638,615,1.779,646,2.461,666,2.554,697,3.265,1160,3.265,1167,3.115,1189,2.803,1190,1.953,1191,2.554,1194,2.17,1195,2.803,1196,3.533,1197,3.533,1198,3.533,1341,4.239,1342,1.953,1343,3.533,1344,4.302,1345,4.217,1355,3.533,1358,3.601,1360,1.953,1362,3.533,1363,3.533,1380,3.115,1381,2.461,1390,3.533,1394,3.533,1396,4.39,1397,4.979,1398,4.875,1399,4.875,1400,4.875,1401,5.642,1402,4.168,1403,4.168,1404,4.168,1405,2.903,1406,4.168,1407,2.903,1408,4.168,1409,2.903,1410,4.168,1411,4.168,1412,4.168,1413,2.903,1414,4.168,1415,2.903,1416,2.903,1417,2.903,1418,2.903,1419,2.903,1420,4.168,1421,2.903,1422,2.903,1423,2.903,1424,4.168,1425,4.168,1426,4.168,1427,4.168]],["title/components/PasswordRecoveryComponent.html",[0,0.114,122,0.762]],["body/components/PasswordRecoveryComponent.html",[0,0.179,1,0.784,2,1.13,3,0.264,4,0.233,5,0.893,6,0.893,7,0.893,8,0.233,12,0.356,13,1.205,15,0.595,17,0.404,20,0.893,21,1.761,22,1.761,23,0.893,24,0.893,25,1.205,26,0.863,27,1.205,28,0.784,29,0.784,30,0.784,31,0.784,32,1.55,33,1.205,35,1.205,37,0.145,38,0.274,40,0.639,41,1.66,42,0.804,45,0.744,47,0.639,49,1.122,51,0.435,52,0.025,53,0.504,54,0.234,55,0.435,58,4.066,59,0.991,65,0.588,66,0.845,70,0.718,71,0.399,72,0.363,75,0.804,77,1.28,80,1.059,83,0.951,85,0.264,86,0.435,87,0.639,88,1.284,98,0.893,99,1.205,100,1.205,101,0.893,102,1.37,103,0.893,104,1.205,105,0.784,106,0.893,107,0.784,108,0.893,109,0.784,110,1.205,111,0.784,112,0.512,113,1.205,114,0.893,115,0.784,116,0.893,117,0.784,118,0.893,119,0.784,120,0.784,121,0.893,122,1.284,123,1.171,124,0.893,125,0.784,126,0.893,127,0.784,128,0.893,129,0.784,130,0.893,131,0.893,132,0.784,133,0.893,134,0.893,135,0.893,136,0.893,137,0.017,138,0.017,146,1.766,202,1.285,210,1.285,237,0.784,266,2.809,270,2.623,275,3.026,276,2.496,278,2.939,279,1.461,281,1.554,286,2.496,287,2.809,296,2.158,297,1.848,301,1.598,306,1.848,316,2.158,317,2.496,393,1.15,418,2.389,419,2.355,420,3.329,425,1.766,436,3.585,456,1.492,461,2.8,480,3.248,488,3.911,514,2.176,518,3.026,565,3.057,583,3.585,586,1.885,588,4.066,659,2,1182,2.939,1219,1.848,1227,3.721,1307,2.939,1308,4.066,1309,3.226,1340,4.209,1428,4.678,1429,5.305,1430,3.011,1431,2.7,1432,4.796,1433,4.796,1434,5.43,1435,5.814,1436,3.92,1437,4.796,1438,3.551,1439,3.551,1440,2.655,1441,3.551,1442,3.551,1443,3.011,1444,3.011,1445,3.551,1446,2.655,1447,3.551,1448,3.011,1449,3.551,1450,4.796,1451,3.551,1452,3.551,1453,3.551]],["title/components/PasswordResetComponent.html",[0,0.114,125,0.762]],["body/components/PasswordResetComponent.html",[0,0.169,1,0.7,2,1.045,3,0.236,4,0.208,5,0.797,6,0.797,7,0.797,8,0.208,12,0.336,13,1.115,15,0.648,17,0.387,20,0.797,21,1.74,22,1.74,23,0.797,24,0.797,25,1.115,26,0.799,27,1.115,28,0.7,29,0.7,30,0.7,31,0.7,32,1.461,33,1.115,35,1.115,37,0.129,38,0.253,40,0.591,41,1.582,42,0.929,45,0.761,47,0.591,51,0.389,52,0.025,53,0.475,54,0.25,55,0.389,65,0.544,66,0.863,67,1.045,68,0.494,69,0.457,70,0.679,71,0.356,72,0.325,75,0.744,77,1.206,80,0.979,83,0.85,85,0.236,86,0.389,87,0.682,88,1.13,98,0.797,99,1.115,100,1.115,101,0.797,102,1.306,103,0.797,104,1.115,105,0.7,106,0.797,107,0.7,108,0.797,109,0.7,110,1.115,111,0.7,112,0.457,113,1.115,114,0.797,115,0.7,116,0.797,117,0.7,118,0.797,119,0.7,120,0.7,121,0.797,122,0.7,123,1.197,124,0.797,125,1.223,126,0.797,127,0.7,128,0.797,129,0.7,130,0.797,131,0.797,132,0.7,133,0.797,134,0.797,135,0.797,136,0.797,137,0.015,138,0.015,144,1.205,149,1.65,188,2.849,202,1.189,205,2.051,210,1.371,237,0.979,243,1.027,266,2.92,270,2.472,275,2.884,276,2.309,278,2.719,279,1.466,281,1.795,286,2.309,287,2.678,296,2.302,297,2.309,301,1.427,304,1.943,306,2.309,316,1.996,317,2.884,321,3.396,323,3.396,327,1.996,333,1.996,345,3.316,360,1.785,393,1.027,418,2.133,419,2.285,423,2.143,424,2.143,425,1.633,456,1.332,461,2.539,484,2.399,518,1.65,540,2.498,565,2.881,586,1.744,621,2.143,659,2.498,881,4.143,967,3.803,1025,4.143,1184,2.37,1201,4.699,1204,4.143,1208,3.761,1213,2.688,1219,1.65,1295,2.37,1305,4.505,1340,2.984,1350,3.761,1353,4.259,1375,3.316,1378,4.518,1428,4.733,1436,3.803,1444,2.688,1454,5.368,1455,2.688,1456,4.437,1457,4.437,1458,4.437,1459,5.117,1460,5.117,1461,4.699,1462,4.437,1463,3.171,1464,4.437,1465,3.171,1466,3.171,1467,3.171,1468,2.688,1469,3.171,1470,3.442,1471,2.133,1472,3.171,1473,3.171,1474,4.437,1475,4.437,1476,3.171,1477,3.761,1478,3.761,1479,2.688,1480,3.171,1481,3.171,1482,3.171,1483,3.171,1484,4.143,1485,4.143,1486,4.143,1487,4.143,1488,4.699,1489,4.699,1490,4.699,1491,4.699,1492,3.761,1493,3.761]],["title/components/PaymentComponent.html",[0,0.114,127,0.762]],["body/components/PaymentComponent.html",[0,0.179,1,0.783,2,1.129,3,0.264,4,0.233,5,0.891,6,0.891,7,0.891,8,0.233,12,0.356,13,1.572,15,0.595,17,0.411,20,0.891,21,1.76,22,1.76,23,0.891,24,0.891,25,1.204,26,0.977,27,1.204,28,0.783,29,0.783,30,0.783,31,0.783,32,1.549,33,1.204,35,1.204,37,0.145,38,0.274,40,0.638,41,1.659,42,0.803,43,1.305,44,1.607,45,0.712,47,0.638,48,1.457,49,0.925,50,2.026,51,0.435,52,0.025,53,0.503,54,0.234,55,0.435,57,1.367,59,0.99,65,0.587,66,0.746,68,0.552,69,0.511,70,0.652,71,0.398,72,0.363,75,0.803,77,1.279,80,1.058,83,0.95,84,1.149,85,0.264,86,0.435,87,0.638,88,1.058,98,0.891,99,1.204,100,1.204,101,0.891,102,1.369,103,0.891,104,1.204,105,0.783,106,0.891,107,0.783,108,0.891,109,0.783,110,1.204,111,0.783,112,0.511,113,1.204,114,0.891,115,0.783,116,0.891,117,0.783,118,0.891,119,0.783,120,0.783,121,0.891,122,0.783,123,0.863,124,0.891,125,0.783,126,0.891,127,1.283,128,0.891,129,0.783,130,0.891,131,0.891,132,0.783,133,0.891,134,0.891,135,0.891,136,0.891,137,0.017,138,0.017,144,0.99,146,1.764,163,1.058,164,1.767,205,1.758,248,1.149,258,1.394,279,1.46,281,1.552,285,4.061,344,2.697,361,1.552,362,1.764,364,1.764,379,1.654,383,1.764,393,1.149,419,2.394,425,1.764,429,2.284,430,1.883,455,3.222,456,2.013,466,3.561,523,1.078,540,1.996,583,3.581,797,4.926,1379,4.061,1380,3.581,1383,2.65,1386,3.006,1387,3.006,1494,3.006,1495,5.811,1496,5.741,1497,4.791,1498,4.791,1499,4.791,1500,5.426,1501,5.811,1502,4.791,1503,3.546,1504,4.791,1505,4.791,1506,4.791,1507,5.811,1508,5.811,1509,4.061,1510,3.546,1511,4.791,1512,4.791,1513,4.791,1514,4.791,1515,5.811,1516,3.546,1517,2.65,1518,4.791,1519,3.546,1520,3.546,1521,4.791,1522,3.546,1523,3.546,1524,4.791,1525,5.811,1526,4.791,1527,4.791]],["title/interfaces/Recovery.html",[139,1.356,1431,1.942]],["body/interfaces/Recovery.html",[3,0.377,4,0.332,8,0.332,12,0.332,15,0.518,17,0.408,37,0.207,38,0.343,47,0.675,52,0.025,54,0.313,63,1.416,67,1.51,85,0.377,137,0.021,138,0.021,139,1.991,140,2.852,144,1.046,145,3.104,153,1.716,155,3.201,158,2.524,359,3.104,461,2.691,967,4.204,1227,4.145,1375,3.787,1431,3.383,1528,4.294,1529,5.18,1530,6.008,1531,6.625]],["title/injectables/RecoveryService.html",[166,0.713,1436,2.114]],["body/injectables/RecoveryService.html",[3,0.191,4,0.168,8,0.168,12,0.392,15,0.684,17,0.41,37,0.105,38,0.217,40,0.507,42,0.842,45,0.762,47,0.749,49,0.734,51,0.689,52,0.025,53,0.521,54,0.303,55,0.689,57,0.732,63,0.604,65,0.762,66,0.994,67,1.608,68,0.592,69,0.549,70,0.653,71,0.288,72,0.549,85,0.191,86,0.314,87,0.85,88,1.184,123,0.966,137,0.013,138,0.013,149,1.98,163,1.241,166,0.786,168,1.007,171,2.332,172,3.911,173,2.781,174,2.361,179,1.571,180,3.077,182,2.332,183,3.288,186,2.068,191,3.077,192,3.445,194,1.086,196,3.742,197,2.925,198,2.332,201,3.512,202,1.665,205,1.821,207,2.426,208,1.571,209,3.077,210,1.559,211,2.781,212,2.332,213,2.332,214,2.332,215,2.332,222,2.332,223,2.332,224,2.332,230,2.332,231,1.571,233,1.334,234,1.077,235,1.007,237,1.458,238,1.571,242,2.613,243,1.978,247,1.334,249,1.712,258,2.4,268,2.559,314,2.559,350,1.838,351,2.559,355,3.378,420,3.111,456,1.598,461,2.611,480,2.592,484,1.401,507,1.724,514,1.571,523,1.527,589,3.378,591,3.754,621,2.192,967,4.23,1227,4.249,1234,2.844,1431,3.664,1436,2.332,1529,3.392,1532,2.173,1533,3.226,1534,3.226,1535,3.805,1536,3.226,1537,4.257,1538,5.022,1539,3.226,1540,3.805,1541,3.226,1542,3.805,1543,3.226,1544,2.563,1545,3.226,1546,3.226,1547,2.173,1548,2.563,1549,3.805,1550,3.805,1551,3.226,1552,3.805,1553,2.563,1554,3.805,1555,3.805,1556,3.805,1557,3.805,1558,3.226,1559,2.563,1560,3.226,1561,3.226,1562,2.563,1563,3.226,1564,3.226,1565,2.563,1566,3.226,1567,2.563,1568,3.805,1569,3.805,1570,3.805,1571,3.805,1572,3.805,1573,3.805,1574,2.563,1575,3.805,1576,3.805,1577,3.805,1578,3.805,1579,3.805,1580,2.173,1581,2.173,1582,1.916,1583,1.916,1584,2.563,1585,2.173,1586,3.805,1587,3.805,1588,2.563,1589,2.173,1590,2.563,1591,1.916,1592,2.173,1593,5.977,1594,3.226,1595,2.173,1596,2.173,1597,3.226,1598,2.173,1599,2.563,1600,2.563,1601,2.563,1602,2.173,1603,2.173,1604,2.173,1605,2.563,1606,3.226,1607,3.226,1608,3.226,1609,4.257,1610,3.805,1611,3.226,1612,3.226,1613,4.257,1614,3.226,1615,3.226,1616,3.226,1617,4.257,1618,3.226,1619,3.805,1620,3.226,1621,2.563,1622,2.173,1623,1.916,1624,2.563,1625,2.173,1626,2.563,1627,2.563,1628,2.563]],["title/components/RegistrationFormComponent.html",[0,0.114,129,0.762]],["body/components/RegistrationFormComponent.html",[0,0.158,1,0.624,2,0.963,3,0.21,4,0.186,5,0.71,6,0.71,7,0.71,8,0.186,12,0.315,13,1.028,17,0.398,20,0.71,21,1.717,22,1.717,23,0.71,24,0.71,25,1.028,26,0.736,27,1.028,28,0.624,29,0.624,30,0.624,31,0.624,32,1.371,33,1.028,35,1.028,37,0.115,38,0.233,40,0.545,41,1.502,42,0.882,43,1.041,44,1.508,45,0.779,47,0.744,48,1.243,50,1.324,51,0.346,52,0.025,53,0.445,54,0.2,55,0.346,59,0.584,62,0.584,63,1.371,65,0.501,66,0.819,70,0.674,71,0.317,72,0.289,75,0.685,77,1.132,80,0.902,83,0.757,84,0.916,85,0.21,86,0.346,87,0.64,88,1.06,97,3.566,98,0.71,99,1.028,100,1.028,101,0.71,102,1.24,103,0.71,104,1.028,105,0.624,106,0.71,107,0.624,108,0.71,109,0.624,110,1.028,111,0.624,112,0.408,113,1.028,114,0.71,115,0.624,116,0.71,117,0.624,118,0.71,119,0.624,120,0.624,121,0.71,122,0.624,123,1.048,124,0.71,125,0.624,126,0.71,127,0.624,128,0.71,129,1.162,130,1.508,131,0.71,132,0.624,133,0.71,134,0.71,135,0.71,136,0.71,137,0.014,138,0.014,144,1.087,146,1.041,148,1.272,159,1.677,188,2.765,202,1.287,205,1.99,210,1.608,237,1.285,266,3.025,270,2.32,271,3.59,275,2.738,276,2.127,279,1.403,283,3.466,286,2.127,287,2.542,296,2.7,297,2.127,301,1.272,302,3.225,304,1.732,306,3.028,316,2.861,317,3.387,319,3.566,320,3.028,321,3.896,322,3.914,323,3.225,327,1.839,332,3.466,379,1.411,393,0.916,419,2.262,420,3.123,423,1.975,424,1.975,425,1.505,456,1.188,460,2.738,466,2.505,479,2.963,480,3.071,483,2.963,484,2.437,487,2.963,514,1.732,518,1.471,540,1.592,586,1.607,659,1.592,754,3.466,825,3.934,881,3.934,1025,3.934,1183,2.396,1219,1.471,1285,2.113,1293,2.113,1295,2.113,1301,2.396,1305,4.378,1307,2.505,1309,2.75,1353,4.453,1378,3.934,1440,2.113,1443,2.396,1446,2.113,1461,4.461,1468,2.396,1470,3.23,1471,1.901,1477,3.466,1478,3.466,1479,2.396,1484,4.753,1485,4.753,1486,4.753,1487,3.934,1488,4.461,1489,4.461,1490,4.461,1491,4.461,1492,3.466,1493,3.466,1629,5.459,1630,5.459,1631,2.396,1632,4.934,1633,4.088,1634,4.088,1635,4.088,1636,4.802,1637,4.088,1638,2.827,1639,4.088,1640,4.088,1641,3.466,1642,2.827,1643,2.396,1644,2.827,1645,2.396,1646,2.827,1647,2.827,1648,2.827,1649,2.827,1650,2.827,1651,2.827,1652,4.071,1653,3.466,1654,2.827,1655,2.827,1656,2.827,1657,2.827,1658,2.827,1659,2.827,1660,2.827,1661,2.827,1662,2.827,1663,4.088,1664,2.827,1665,2.827,1666,4.088,1667,2.827,1668,2.827,1669,2.827,1670,2.396,1671,2.827,1672,2.396,1673,2.113,1674,2.827,1675,2.827,1676,2.827,1677,3.466]],["title/interfaces/ShoppingCart.html",[139,1.356,496,1.449]],["body/interfaces/ShoppingCart.html",[3,0.337,4,0.297,8,0.297,12,0.369,17,0.401,37,0.185,38,0.321,52,0.025,54,0.326,59,1.16,62,1.435,63,1.323,70,0.631,85,0.337,112,0.92,137,0.02,138,0.02,139,1.781,140,2.551,142,2.348,144,1.16,145,3.441,147,3.161,152,2.202,153,1.879,155,3.081,156,3.161,158,2.359,161,2.713,163,1.475,194,1.603,327,2.526,379,1.939,429,2.626,430,2.69,490,3.762,493,3.777,494,4.768,496,2.359,510,3.047,511,2.776,562,2.067,576,4.29,673,3.441,1160,3.909,1312,4.197,1344,3.777,1678,3.841,1679,3.841,1680,4.76,1681,6.379,1682,5.615,1683,4.76,1684,5.615,1685,5.615,1686,5.615,1687,4.53]],["title/injectables/ShoppingCartApiService.html",[166,0.713,421,2.114]],["body/injectables/ShoppingCartApiService.html",[3,0.167,4,0.148,8,0.148,12,0.387,15,0.65,17,0.412,37,0.227,38,0.197,40,0.459,42,0.788,45,0.737,47,0.765,49,0.665,51,0.682,52,0.025,53,0.516,54,0.299,55,0.682,57,1.342,63,1.354,65,0.722,66,0.998,67,0.53,68,0.537,69,0.497,70,0.625,71,0.253,72,0.23,85,0.167,86,0.276,87,0.878,88,1.119,112,0.678,137,0.012,138,0.012,144,0.971,146,1.269,148,1.551,152,2.141,153,1.784,155,2.775,163,1.426,164,1.429,166,0.712,168,0.884,170,1.513,171,2.113,172,3.89,173,2.569,174,2.182,179,1.378,180,2.881,182,2.113,183,3.412,186,2.05,187,1.666,188,1.551,191,2.881,192,3.277,194,1.639,195,3.162,196,3.609,197,3.303,198,2.113,201,3.495,202,1.662,205,1.523,207,2.449,208,1.378,209,2.881,210,0.924,211,2.569,212,2.113,213,2.113,214,2.113,215,2.113,222,2.113,223,2.113,224,2.113,230,2.113,231,1.378,233,1.17,234,0.945,235,0.884,237,1.038,238,1.378,242,2.989,243,1.523,244,1.666,245,1.681,246,1.087,247,1.17,248,0.729,249,2.705,258,2.102,278,2.881,279,0.867,325,2.406,348,2.577,360,2.647,361,1.523,362,1.731,363,2.115,364,1.731,383,0.828,404,2.577,421,2.113,428,2.257,429,2.737,430,2.737,434,3.442,484,1.731,490,1.266,496,2.842,508,1.681,509,1.17,510,1.513,511,1.378,512,1.513,517,3.747,523,0.684,527,2.82,532,1.513,543,2.319,562,1.969,563,2.115,581,2.775,586,1.847,621,1.666,1147,1.378,1152,1.941,1358,1.941,1396,2.577,1517,2.577,1688,5.183,1689,3.448,1690,2.923,1691,3.448,1692,2.923,1693,4.701,1694,2.923,1695,3.448,1696,3.448,1697,3.448,1698,4.534,1699,4.87,1700,4.87,1701,2.249,1702,3.448,1703,3.448,1704,3.448,1705,2.923,1706,3.448,1707,2.923,1708,4.297,1709,2.249,1710,3.448,1711,2.923,1712,2.249,1713,3.448,1714,2.249,1715,2.923,1716,2.249,1717,3.448,1718,3.448,1719,2.923,1720,2.249,1721,2.923,1722,2.249,1723,3.555,1724,3.448,1725,3.448,1726,3.448,1727,3.448,1728,3.448,1729,3.448,1730,2.249,1731,3.448,1732,3.448,1733,3.448,1734,3.448,1735,3.448,1736,2.249,1737,2.249,1738,1.907,1739,4.701,1740,1.907,1741,1.907,1742,1.907,1743,2.249,1744,3.448,1745,2.249,1746,3.448,1747,1.907,1748,2.923,1749,2.923,1750,1.907,1751,1.907,1752,3.448,1753,3.448,1754,3.448,1755,1.907,1756,3.448,1757,2.249,1758,2.249,1759,1.907,1760,2.249,1761,2.923,1762,3.555,1763,1.907,1764,1.907,1765,1.907,1766,1.907,1767,2.923,1768,2.923,1769,2.923,1770,3.448,1771,3.448,1772,3.448,1773,3.448,1774,1.907,1775,1.907,1776,1.907,1777,1.907]],["title/components/ShoppingCartComponent.html",[0,0.114,132,0.762]],["body/components/ShoppingCartComponent.html",[0,0.173,1,0.733,2,1.079,3,0.247,4,0.218,5,0.834,6,0.834,7,0.834,8,0.218,12,0.344,13,1.151,15,0.607,17,0.403,20,0.834,21,1.748,22,1.748,23,0.834,24,0.834,25,1.151,26,0.944,27,1.151,28,0.733,29,0.733,30,0.733,31,0.733,32,1.496,33,1.151,35,1.151,37,0.135,38,0.262,40,0.61,41,1.613,42,0.947,43,1.222,44,1.579,45,0.751,48,1.392,49,0.884,50,1.831,51,0.407,52,0.025,53,0.486,54,0.276,55,0.407,57,0.947,59,1.266,62,1.322,64,2.941,65,0.561,66,0.816,68,0.816,69,0.756,70,0.666,71,0.373,72,0.34,75,0.768,77,1.235,80,1.011,83,0.889,84,1.075,85,0.247,86,0.407,87,0.61,88,1.011,98,0.834,99,1.151,100,1.151,101,0.834,102,1.332,103,0.834,104,1.151,105,0.733,106,0.834,107,0.733,108,0.834,109,0.733,110,1.151,111,0.733,112,0.479,113,1.151,114,0.834,115,0.733,116,0.834,117,0.733,118,0.834,119,0.733,120,0.733,121,0.834,122,0.733,123,0.824,124,0.834,125,0.733,126,0.834,127,0.733,128,0.834,129,0.733,130,0.834,131,0.834,132,1.248,133,1.579,134,0.834,135,0.834,136,0.834,137,0.016,138,0.016,144,0.685,153,1.227,161,2.212,163,1.248,164,1.392,186,1.392,248,1.698,268,3.08,279,1.421,281,1.483,333,2.06,344,2.578,351,3.08,361,1.483,362,1.686,363,2.06,364,1.686,366,2.232,383,1.686,393,1.075,400,3.526,419,2.357,425,1.686,428,1.799,429,2.633,430,2.585,441,2.806,465,3.882,496,2.576,509,1.727,517,2.806,523,1.392,665,3.757,666,2.806,673,2.034,1178,2.813,1182,2.034,1184,2.48,1186,3.423,1189,3.989,1190,3.989,1191,3.757,1195,3.08,1225,3.423,1312,3.423,1344,4.468,1345,3.919,1358,1.868,1360,2.232,1361,2.48,1364,3.882,1383,2.48,1496,4.792,1509,3.882,1683,3.882,1778,5.327,1779,5.327,1780,2.813,1781,4.579,1782,4.579,1783,4.579,1784,5.242,1785,5.652,1786,4.579,1787,4.579,1788,3.318,1789,4.579,1790,3.318,1791,4.579,1792,3.318,1793,4.579,1794,4.579,1795,3.318,1796,3.318,1797,3.318,1798,3.318,1799,3.318,1800,3.318,1801,3.318]],["title/injectables/ShoppingCartService.html",[166,0.713,519,2.114]],["body/injectables/ShoppingCartService.html",[3,0.231,4,0.204,8,0.204,12,0.394,15,0.692,17,0.41,26,0.56,37,0.206,38,0.25,40,0.583,42,0.921,45,0.736,47,0.583,49,0.977,51,0.71,52,0.025,53,0.537,54,0.293,55,0.71,57,1.568,59,1.135,62,1.046,63,1.561,64,2.276,65,0.772,66,0.788,68,0.484,69,0.448,70,0.617,71,0.349,72,0.318,85,0.231,86,0.381,87,0.822,88,0.686,137,0.015,138,0.015,142,1.61,148,2.472,153,1.801,155,3.043,158,2.727,163,1.213,164,1.33,166,0.903,168,1.221,186,1.915,187,2.113,188,1.968,194,1.249,201,2.276,202,1.472,204,2.463,205,1.945,206,4.657,207,1.501,234,1.306,235,1.221,237,1.278,243,1.78,244,2.113,246,1.501,247,1.617,248,1.007,249,2.834,279,1.455,325,2.472,344,3.093,355,3.695,359,2.68,360,2.463,361,1.64,362,2.022,363,1.968,364,2.022,365,2.68,383,1.61,404,3.27,428,2.159,429,2.695,430,2.672,431,2.68,434,3.26,437,2.942,462,3.27,484,1.61,490,1.75,496,2.856,508,2.323,509,1.617,510,2.09,511,1.904,519,2.68,523,0.945,543,2.942,562,1.144,563,2.277,581,2.901,589,2.942,617,1.617,621,2.654,673,2.68,697,2.68,1147,1.904,1152,2.463,1358,3.381,1396,4.489,1397,3.708,1517,3.27,1541,3.708,1690,3.708,1692,3.708,1694,3.708,1698,4.291,1699,4.291,1700,3.708,1705,3.708,1707,3.708,1708,4.908,1711,3.708,1715,3.708,1721,3.708,1723,4.291,1738,3.708,1740,2.635,1741,2.635,1742,2.635,1747,2.635,1749,2.635,1750,2.635,1751,2.635,1755,2.635,1759,2.635,1761,3.708,1762,4.291,1763,2.635,1764,2.635,1765,2.635,1766,2.635,1767,3.708,1768,3.708,1769,3.708,1774,2.635,1775,2.635,1776,2.635,1777,2.635,1802,5.231,1803,2.635,1804,4.374,1805,3.108,1806,4.374,1807,4.374,1808,3.108,1809,3.108,1810,3.108,1811,4.374,1812,3.108,1813,3.708,1814,4.374,1815,3.108,1816,3.108,1817,3.108,1818,4.374,1819,4.374,1820,3.108,1821,3.108]],["title/interfaces/User.html",[72,0.353,139,1.356]],["body/interfaces/User.html",[3,0.337,4,0.297,8,0.297,12,0.297,15,0.624,17,0.348,37,0.185,38,0.321,52,0.025,54,0.334,59,1.159,61,3.774,62,1.454,63,1.665,67,1.681,72,0.574,85,0.337,123,1.148,137,0.02,138,0.02,139,1.779,140,2.548,142,2.246,143,3.383,145,2.774,149,2.355,152,2.201,153,1.634,158,2.358,159,1.708,163,1.475,164,1.706,320,2.92,327,2.525,361,1.976,366,3.774,460,3.318,461,2.358,479,3.59,480,3.08,483,3.16,485,3.774,486,3.774,487,3.59,1625,3.837,1680,4.757,1822,3.837,1823,5.406,1824,5.406,1825,5.612,1826,5.612,1827,4.757,1828,5.612,1829,5.612,1830,5.612]],["title/injectables/UserApiService.html",[166,0.713,420,1.795]],["body/injectables/UserApiService.html",[3,0.19,4,0.167,8,0.167,12,0.4,15,0.653,17,0.406,26,0.459,37,0.155,38,0.216,40,0.505,42,0.758,45,0.761,47,0.747,48,1.153,49,0.732,51,0.712,52,0.025,53,0.539,54,0.308,55,0.712,57,1.43,59,1.233,63,1.532,65,0.761,66,0.993,67,1.629,68,0.59,69,0.547,70,0.562,71,0.286,72,0.68,85,0.19,86,0.313,87,0.885,88,0.999,123,1.117,137,0.013,138,0.013,142,1.396,144,0.783,146,1.844,147,2.134,149,3.435,159,1.599,163,1.435,164,1.706,166,0.783,168,1.002,170,1.715,171,2.323,172,3.985,173,2.773,174,2.354,179,1.563,180,3.07,181,3.213,182,3.07,183,3.56,186,2.067,187,2.186,191,3.07,192,3.438,194,1.704,195,3.369,196,3.737,197,3.106,198,2.323,199,2.162,201,3.435,202,1.634,204,2.547,207,2.42,208,1.563,209,3.07,210,1.015,211,2.773,212,2.323,213,2.323,214,2.323,215,2.323,221,2.162,222,2.323,223,2.323,224,2.323,230,2.323,231,1.563,233,1.327,234,1.071,235,1.002,236,1.232,237,1.318,238,1.563,242,2.786,243,1.228,244,1.831,245,1.906,246,1.232,247,1.972,248,0.826,249,1.705,258,2.205,348,1.906,350,1.831,361,1.933,362,2.197,363,2.254,364,2.066,365,2.323,379,1.729,420,1.972,460,3.174,461,2.357,462,2.833,479,3.014,480,3.284,483,2.134,484,1.396,485,2.549,486,2.549,487,3.014,488,3.369,507,1.715,523,1.153,527,4.015,532,2.549,592,2.549,621,1.831,705,4.194,1152,1.436,1174,3.369,1234,2.833,1591,1.906,1623,1.906,1719,3.213,1748,2.162,1831,5.339,1832,3.79,1833,3.213,1834,3.79,1835,3.835,1836,3.79,1837,3.835,1838,5.009,1839,3.213,1840,3.213,1841,4.756,1842,2.55,1843,5.009,1844,3.79,1845,2.55,1846,3.79,1847,2.162,1848,2.55,1849,3.79,1850,2.55,1851,2.162,1852,2.55,1853,3.213,1854,2.55,1855,3.835,1856,3.79,1857,3.79,1858,3.79,1859,3.79,1860,3.79,1861,3.79,1862,3.79,1863,3.79,1864,3.79,1865,3.79,1866,3.79,1867,5.009,1868,2.55,1869,3.835,1870,2.55,1871,2.162,1872,2.162,1873,2.162,1874,2.162,1875,2.162,1876,2.162,1877,2.162,1878,2.162,1879,2.162,1880,2.55,1881,3.79,1882,2.55,1883,5.009,1884,2.55,1885,2.55,1886,2.55,1887,2.55,1888,2.162,1889,2.162,1890,2.55]],["title/components/UserManagementComponent.html",[0,0.114,28,0.762]],["body/components/UserManagementComponent.html",[0,0.171,1,0.722,2,1.069,3,0.243,4,0.215,5,0.823,6,0.823,7,0.823,8,0.215,11,2.201,12,0.342,13,1.14,17,0.406,20,0.823,21,1.746,22,1.746,23,0.823,24,1.308,25,1.14,26,0.816,27,1.14,28,1.24,29,0.722,30,0.722,31,0.722,32,1.485,33,1.14,34,3.39,35,1.14,36,3.39,37,0.133,38,0.259,40,0.604,41,1.604,42,0.872,43,1.205,44,1.573,45,0.794,47,0.813,48,1.379,49,0.875,50,1.82,51,0.401,52,0.025,53,0.483,54,0.254,55,0.401,56,2.774,57,0.934,63,1.575,65,0.556,66,0.81,68,0.51,69,0.472,70,0.685,71,0.367,72,0.684,73,4.903,75,0.76,77,1.226,80,1.001,83,0.877,84,1.06,85,0.243,86,0.401,87,0.436,97,3.443,98,0.823,99,1.14,100,1.14,101,0.823,102,1.324,103,0.823,104,1.14,105,0.722,106,0.823,107,0.722,108,0.823,109,0.722,110,1.14,111,0.722,112,0.472,113,1.14,114,0.823,115,0.722,116,0.823,117,0.722,118,0.823,119,0.722,120,0.722,121,0.823,122,0.722,123,0.816,124,0.823,125,0.722,126,0.823,127,0.722,128,0.823,129,0.722,130,0.823,131,0.823,132,0.722,133,0.823,134,0.823,135,0.823,136,0.823,137,0.016,138,0.016,146,2.069,148,2.04,159,1.635,202,0.877,210,1.505,236,1.581,237,1.24,266,3.083,270,2.514,271,3.89,275,2.924,276,2.36,279,1.14,281,1.82,286,2.36,287,2.714,296,1.472,297,1.703,298,2.774,299,2.774,300,2.446,301,1.472,302,3.189,304,2.005,306,2.708,316,2.747,317,3.177,319,3.443,320,2.924,321,3.443,322,3.779,333,2.04,360,1.843,460,2.708,479,3.163,480,3.169,483,3.163,484,2.069,487,3.163,586,1.782,621,2.514,659,1.843,675,5.175,825,4.2,1219,1.703,1293,2.446,1307,2.779,1353,3.779,1440,2.446,1446,2.446,1484,4.2,1485,4.2,1486,4.2,1643,2.774,1645,2.774,1652,3.845,1653,3.845,1670,2.774,1677,3.845,1891,5.56,1892,5.204,1893,5.204,1894,4.535,1895,3.273,1896,3.273,1897,3.273,1898,3.273,1899,3.273,1900,3.273,1901,3.273,1902,3.273,1903,3.273,1904,3.273,1905,3.273,1906,3.273,1907,3.273,1908,3.273,1909,3.273,1910,3.273,1911,3.273,1912,3.273,1913,3.273,1914,3.273,1915,3.273,1916,3.273,1917,5.618]],["title/injectables/UserService.html",[166,0.713,518,1.795]],["body/injectables/UserService.html",[3,0.164,4,0.144,8,0.144,12,0.392,15,0.693,17,0.402,19,2.077,26,0.994,37,0.138,38,0.194,40,0.452,45,0.756,47,0.76,49,0.654,51,0.699,52,0.025,53,0.529,54,0.292,55,0.699,57,0.628,59,1.178,61,2.28,62,1.095,63,1.6,65,0.805,66,0.343,67,1.655,68,0.528,69,0.489,70,0.522,71,0.247,72,0.688,85,0.164,86,0.27,87,0.842,123,1.183,137,0.012,138,0.012,142,2.1,144,0.96,146,1.71,148,2.09,149,2.418,152,2.063,159,1.601,163,1.259,164,2.008,166,0.7,168,0.865,186,2.008,187,2.561,194,1.628,202,0.908,205,2.047,210,1.108,234,0.924,235,0.865,237,1.458,243,1.97,244,1.637,246,1.063,247,2.152,248,0.713,249,2.385,258,2.241,268,2.28,314,3.125,316,1.525,344,3.474,349,2.874,350,2.244,355,3.125,359,2.077,361,1.717,362,1.71,363,1.525,364,2.272,365,2.847,373,2.534,379,1.969,383,1.522,440,2.874,456,1.424,460,3.164,461,2.655,479,3.294,480,3.259,483,1.908,484,1.248,485,2.28,486,2.28,487,3.294,504,3.836,507,1.48,518,1.764,523,1.612,589,3.125,591,3.473,621,2.668,692,3.566,697,2.077,698,2.874,967,4.161,1152,1.239,1180,4.494,1227,3.973,1340,3.125,1431,3.364,1487,2.534,1529,3.091,1533,2.874,1534,2.874,1536,2.874,1537,3.939,1539,2.874,1543,2.874,1545,2.874,1546,2.874,1547,1.865,1551,2.874,1558,2.874,1560,2.874,1561,2.874,1563,2.874,1564,2.874,1566,2.874,1580,1.865,1581,1.865,1582,1.644,1583,1.644,1585,1.865,1589,1.865,1591,2.534,1592,1.865,1594,2.874,1595,1.865,1596,1.865,1597,3.506,1598,1.865,1602,1.865,1603,1.865,1604,1.865,1606,2.874,1607,2.874,1608,2.874,1609,3.939,1611,2.874,1612,2.874,1613,3.939,1614,2.874,1615,2.874,1616,2.874,1617,3.939,1618,2.874,1620,2.874,1622,1.865,1623,2.534,1632,2.874,1672,4.494,1673,3.962,1813,2.874,1823,3.939,1824,3.939,1827,2.874,1833,2.874,1835,2.874,1837,2.874,1839,2.874,1840,2.874,1841,3.506,1847,2.874,1851,2.874,1853,2.874,1855,3.506,1869,3.506,1871,1.865,1872,1.865,1873,1.865,1874,1.865,1875,1.865,1876,1.865,1877,1.865,1878,1.865,1879,1.865,1888,1.865,1889,1.865,1918,1.865,1919,3.389,1920,4.135,1921,4.646,1922,2.2,1923,2.2,1924,2.2,1925,2.2,1926,4.646,1927,3.389,1928,5.301,1929,3.389,1930,4.646,1931,3.389,1932,3.389,1933,3.389,1934,3.389,1935,2.2,1936,3.389,1937,2.2,1938,2.2,1939,2.2,1940,3.389,1941,3.389,1942,3.389,1943,2.2,1944,2.2,1945,3.389,1946,3.389,1947,2.874,1948,3.389,1949,3.389,1950,3.389,1951,4.646,1952,3.389,1953,3.389,1954,2.2,1955,2.2,1956,3.389,1957,2.2,1958,2.2,1959,2.2,1960,2.2,1961,4.646,1962,2.2,1963,2.2,1964,2.2,1965,2.2,1966,3.389,1967,2.2,1968,2.2]],["title/coverage.html",[1969,3.986]],["body/coverage.html",[0,0.233,1,0.923,8,0.274,9,3.545,10,3.545,11,3.956,28,0.923,29,0.923,30,0.923,31,0.923,44,1.051,52,0.025,54,0.204,72,0.428,73,3.125,75,0.701,76,3.125,78,3.125,81,3.125,105,0.923,107,0.923,109,0.923,111,0.923,112,0.603,115,0.923,117,0.923,119,0.923,120,0.923,122,0.923,125,0.923,127,0.923,129,0.923,132,0.923,137,0.019,138,0.019,139,2.516,141,3.545,166,1.416,167,2.812,169,3.545,170,3.956,207,2.993,210,1.12,263,3.991,264,3.125,265,3.545,302,2.562,303,2.812,333,2.402,342,2.812,343,3.545,385,3.545,395,3.545,420,2.176,421,2.562,496,1.757,517,2.562,518,2.176,519,2.562,559,3.991,560,3.545,561,3.991,581,2.02,617,2.176,672,3.545,683,3.545,1017,5.55,1070,3.545,1156,3.545,1192,3.545,1193,3.545,1194,3.991,1226,3.545,1284,3.545,1310,3.545,1341,3.956,1342,2.812,1366,3.545,1367,3.545,1428,3.991,1429,3.545,1430,3.545,1431,2.354,1436,2.562,1454,3.545,1455,3.545,1470,2.812,1471,2.812,1494,3.545,1528,3.545,1532,3.545,1629,3.545,1630,3.545,1631,3.545,1678,3.545,1679,3.545,1688,3.545,1778,3.545,1779,3.545,1780,3.545,1802,3.545,1803,3.545,1822,3.545,1831,3.545,1891,3.545,1918,3.545,1969,3.545,1970,4.181,1971,4.181,1972,4.181,1973,7.24,1974,6.196,1975,6.655,1976,3.545,1977,3.545,1978,3.545,1979,3.545,1980,3.545,1981,6.547,1982,6.196,1983,5.339,1984,4.181,1985,5.339,1986,6.196,1987,4.181,1988,4.181,1989,5.253,1990,4.181,1991,4.181]],["title/dependencies.html",[1992,2.156,1993,3.516]],["body/dependencies.html",[52,0.025,71,0.6,83,1.431,137,0.022,138,0.022,233,2.78,301,2.404,393,1.73,1582,3.993,1583,3.993,1993,4.529,1994,5.342,1995,7.046,1996,5.342,1997,6.199,1998,6.199,1999,5.342,2000,5.342,2001,5.342,2002,5.342,2003,5.342,2004,5.342,2005,5.342,2006,5.342,2007,5.342]],["title/miscellaneous/enumerations.html",[2008,1.624,2009,3.516]],["body/miscellaneous/enumerations.html",[37,0.222,52,0.024,69,0.994,137,0.022,138,0.022,490,3.527,1448,5.31,2008,3.062,2009,4.611,2010,5.439,2011,6.263,2012,5.439,2013,6.263,2014,6.263,2015,6.263,2016,6.263]],["title/miscellaneous/functions.html",[2008,1.624,2017,3.516]],["body/miscellaneous/functions.html",[12,0.326,15,0.674,17,0.284,37,0.202,47,0.661,51,0.609,52,0.024,53,0.46,54,0.242,55,0.609,59,1.026,65,0.807,67,1.551,137,0.021,138,0.021,160,2.795,163,1.453,186,2.001,188,2.671,205,1.923,296,2.961,300,4.92,302,3.892,303,4.272,319,3.638,322,3.34,327,2.234,379,2.272,461,2.668,484,1.828,692,4.427,1307,3.043,1470,4.272,1471,3.993,1641,5.033,1989,4.209,2008,2.795,2017,4.209,2018,6.581,2019,5.937,2020,4.965,2021,4.965,2022,4.965,2023,4.965,2024,4.965,2025,4.965,2026,4.965,2027,4.965,2028,4.965,2029,4.965,2030,4.965,2031,4.965,2032,5.937,2033,4.965,2034,4.965,2035,4.965,2036,4.965,2037,4.965,2038,4.965,2039,4.965,2040,4.965]],["title/index.html",[37,0.118,2041,2.884,2042,2.884]],["body/index.html",[0,0.21,4,0.328,52,0.021,53,0.464,137,0.021,138,0.021,210,1.339,369,4.237,390,4.237,789,4.237,831,4.237,874,5.798,1947,4.237,1992,3.736,2043,5.961,2044,4.998,2045,6.37,2046,6.37,2047,4.237,2048,4.998,2049,4.998,2050,5.961,2051,6.74,2052,6.912,2053,4.998,2054,4.998,2055,4.998,2056,4.998,2057,4.998,2058,4.998,2059,4.998,2060,4.998,2061,4.998,2062,4.998,2063,4.998,2064,6.37,2065,6.37,2066,4.998,2067,6.596,2068,4.998,2069,4.998,2070,4.998,2071,4.998,2072,5.961,2073,5.961,2074,6.596,2075,4.998,2076,5.961,2077,5.961,2078,4.998,2079,4.998,2080,4.998,2081,4.998,2082,5.961,2083,4.998,2084,4.998,2085,4.998,2086,4.998,2087,6.37,2088,4.998,2089,4.998,2090,4.998,2091,3.736,2092,4.998,2093,4.998]],["title/modules.html",[2094,3.986]],["body/modules.html",[52,0.022,137,0.022,138,0.022,2094,4.772]],["title/overview.html",[2091,3.515]],["body/overview.html",[2,1.317,52,0.022,97,3.424,137,0.022,138,0.022,140,3.146,168,2.196,859,4.737,860,4.737,2091,4.177]],["title/properties.html",[38,0.237,1992,2.156]],["body/properties.html",[38,0.32,52,0.023,137,0.022,138,0.022,2047,4.754,2095,5.608]],["title/miscellaneous/variables.html",[1292,3.1,2008,1.624]],["body/miscellaneous/variables.html",[15,0.53,17,0.348,26,1.096,37,0.211,44,1.301,52,0.025,54,0.297,57,1.477,59,1.069,63,1.22,68,0.948,69,0.878,137,0.021,138,0.021,164,1.574,237,1.343,243,1.971,282,4.388,364,1.906,383,1.906,419,1.906,673,3.172,692,3.482,1204,3.869,1285,3.869,1292,3.869,1673,3.869,1976,4.388,1977,5.48,1978,4.388,1979,5.159,1980,5.159,2008,2.914,2096,5.176,2097,5.176,2098,5.176,2099,5.176,2100,5.176,2101,5.176,2102,5.176,2103,6.086,2104,5.176,2105,5.176,2106,5.176,2107,5.176,2108,5.176]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":248,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["0.0.0",{"_index":2095,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["00ce0410a300",{"_index":229,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["0665",{"_index":1114,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["09b9b7597d35",{"_index":1263,"title":{},"body":{"injectables/CardsService.html":{}}}],["0d24",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1137,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":249,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["100",{"_index":1973,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1616,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["100960c55891.jpg?1650599698",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11/11",{"_index":1986,"title":{},"body":{"coverage.html":{}}}],["114",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1100,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":370,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13/13",{"_index":1988,"title":{},"body":{"coverage.html":{}}}],["139",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1984,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["18.0.0",{"_index":1995,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":2048,"title":{},"body":{"index.html":{}}}],["19",{"_index":1079,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":1083,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1c4649bc7596",{"_index":1866,"title":{},"body":{"injectables/UserApiService.html":{}}}],["1f9c",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":373,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1070,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["20",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1097,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2089",{"_index":1576,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["21",{"_index":1118,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1987,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1121,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{}}}],["237a30543693",{"_index":1579,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["23d3",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["305e",{"_index":1570,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["3213",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["373d73475912",{"_index":1257,"title":{},"body":{"injectables/CardsService.html":{}}}],["3835",{"_index":1134,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1105,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":1066,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{},"components/PaymentComponent.html":{}}}],["4.2.0",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1974,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1521,"title":{},"body":{"components/PaymentComponent.html":{}}}],["400d",{"_index":1864,"title":{},"body":{"injectables/UserApiService.html":{}}}],["4013",{"_index":1577,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["4100aa98",{"_index":1725,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["4138",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4210",{"_index":1859,"title":{},"body":{"injectables/UserApiService.html":{}}}],["4243",{"_index":227,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["4350",{"_index":1135,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1115,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1098,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a4b",{"_index":1261,"title":{},"body":{"injectables/CardsService.html":{}}}],["4a56a84e17d5",{"_index":1861,"title":{},"body":{"injectables/UserApiService.html":{}}}],["4a64",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ac9",{"_index":1571,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["4c19",{"_index":1255,"title":{},"body":{"injectables/CardsService.html":{}}}],["4d25",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d26",{"_index":1733,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["4d62",{"_index":218,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["4d71",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d82",{"_index":1727,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["4df2",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":1076,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1975,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1982,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1617,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["67",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6c98",{"_index":1254,"title":{},"body":{"injectables/CardsService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1981,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7869d0269d9c",{"_index":1735,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7d2f8df26b56",{"_index":220,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["7e73",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["8/8",{"_index":1983,"title":{},"body":{"coverage.html":{}}}],["832767d2",{"_index":1253,"title":{},"body":{"injectables/CardsService.html":{}}}],["851addba1f2c",{"_index":1729,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["86b7",{"_index":1572,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["86e5",{"_index":1860,"title":{},"body":{"injectables/UserApiService.html":{}}}],["8749",{"_index":1256,"title":{},"body":{"injectables/CardsService.html":{}}}],["87b9",{"_index":1858,"title":{},"body":{"injectables/UserApiService.html":{}}}],["8c01",{"_index":1136,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8c91f5c5",{"_index":1569,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["8cbf",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f1e",{"_index":219,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["8f1f",{"_index":1726,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["8f2b",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1985,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1099,"title":{},"body":{"injectables/CardItemService.html":{}}}],["93b4",{"_index":1262,"title":{},"body":{"injectables/CardsService.html":{}}}],["9475",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9703",{"_index":1734,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["9798",{"_index":1077,"title":{},"body":{"injectables/CardItemService.html":{}}}],["983c",{"_index":1732,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["98dd",{"_index":1863,"title":{},"body":{"injectables/UserApiService.html":{}}}],["99e9",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9ba2",{"_index":226,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["9eb7",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a10b",{"_index":1728,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["a23f",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a6b2",{"_index":1865,"title":{},"body":{"injectables/UserApiService.html":{}}}],["a70e",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a8db4a92",{"_index":1857,"title":{},"body":{"injectables/UserApiService.html":{}}}],["abierto",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1919,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":298,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":276,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":586,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1829,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["acion",{"_index":285,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/PaymentComponent.html":{}}}],["aclcular",{"_index":1408,"title":{},"body":{"components/OrderListComponent.html":{}}}],["activatedroute",{"_index":1201,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["activo",{"_index":1380,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":367,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":360,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1813,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":621,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["addcardtoshoppingcart",{"_index":1689,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["addcardtoshoppingcart(shoppingcartindex",{"_index":1697,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["additem",{"_index":1199,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1205,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemtoshoppingcart",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1707,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":382,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":341,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":338,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":339,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":340,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.userid",{"_index":261,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["addressapiservice",{"_index":167,"title":{"injectables/AddressApiService.html":{}},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":274,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1681,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":193,"title":{},"body":{"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressname",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{}}}],["addressservice",{"_index":342,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1180,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1926,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":313,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1220,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":325,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":678,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aleatorio",{"_index":1564,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["alert('dirección",{"_index":312,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1671,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1670,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1386,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1800,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1181,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1219,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1674,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(result",{"_index":1474,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["alert(this.submittext",{"_index":660,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacena",{"_index":1550,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["almacenar",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anadir",{"_index":1703,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["angular",{"_index":2045,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1994,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":231,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["angular/compiler",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":301,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["antes",{"_index":1512,"title":{},"body":{"components/PaymentComponent.html":{}}}],["apellido",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["api",{"_index":172,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["api.service",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{}}}],["api.service.ts",{"_index":170,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["api.service.ts:100",{"_index":203,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["api.service.ts:103",{"_index":1722,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:114",{"_index":1842,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:123",{"_index":1845,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:138",{"_index":1709,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:140",{"_index":1852,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:159",{"_index":1854,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:18",{"_index":221,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/UserApiService.html":{}}}],["api.service.ts:193",{"_index":1850,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:195",{"_index":1716,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:21",{"_index":1730,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:217",{"_index":1701,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:28",{"_index":181,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/UserApiService.html":{}}}],["api.service.ts:31",{"_index":1695,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:40",{"_index":199,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/UserApiService.html":{}}}],["api.service.ts:47",{"_index":1720,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:49",{"_index":190,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["api.service.ts:53",{"_index":1848,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:56",{"_index":1714,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api.service.ts:61",{"_index":185,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["api.service.ts:65",{"_index":1712,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["api/address",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["api/cards.service",{"_index":1815,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["api/shopping",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["api/user",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1977,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":2057,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":213,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["applicationconfig",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":2068,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["asociado",{"_index":1718,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["attach",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":214,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":2058,"title":{},"body":{"index.html":{}}}],["auxiliar",{"_index":1702,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["av",{"_index":368,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b2f9",{"_index":228,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["b45f",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ba94",{"_index":1260,"title":{},"body":{"injectables/CardsService.html":{}}}],["base",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1945,"title":{},"body":{"injectables/UserService.html":{}}}],["bd01e3634afe",{"_index":1573,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["bearer",{"_index":215,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["beast",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfaf",{"_index":1578,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["bfe9",{"_index":1116,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1110,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bolleano",{"_index":1352,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["boolean",{"_index":361,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":362,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1934,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1102,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1319,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1101,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":2067,"title":{},"body":{"index.html":{}}}],["busca",{"_index":1846,"title":{},"body":{"injectables/UserApiService.html":{}}}],["buscar",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserApiService.html":{}}}],["busqueda",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1785,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1640,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1401,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1404,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1426,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1345,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1355,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1365,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1427,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcula",{"_index":1791,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calcular",{"_index":1357,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["callback",{"_index":201,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{}}}],["callback('error",{"_index":1593,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["callback('token",{"_index":1619,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["callback([selectedshoppingcart,false",{"_index":1757,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["callback([selectedshoppingcart,hasstock",{"_index":1777,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["callback([shoppingcart,hasstock",{"_index":1754,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["callback(false",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["callback(newshoppingcart",{"_index":1745,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["callback(recovery.token",{"_index":1601,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["callback(response",{"_index":1283,"title":{},"body":{"injectables/CardsService.html":{}}}],["callback(response.filter(shoppincart",{"_index":1758,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["callback(response.find(recovery",{"_index":1605,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["callback(response.find(user",{"_index":1886,"title":{},"body":{"injectables/UserApiService.html":{}}}],["callback(result",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback(resultadded[1",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback(resultcard",{"_index":1277,"title":{},"body":{"injectables/CardsService.html":{}}}],["callback(this.checkemail(email,response",{"_index":1885,"title":{},"body":{"injectables/UserApiService.html":{}}}],["callback(true",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["callback(useraddress",{"_index":262,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["cambiar",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1641,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1676,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":666,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":2085,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1486,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1186,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1188,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1147,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1190,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1189,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1187,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1774,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1775,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1761,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem,callback",{"_index":1265,"title":{},"body":{"injectables/CardsService.html":{}}}],["carditem.cardname",{"_index":1222,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1145,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1142,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["carditem.id",{"_index":1151,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["carditem.model",{"_index":1687,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1224,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1223,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":617,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1160,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.findindex(carditem",{"_index":1272,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardlist.foreach(card",{"_index":1363,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardlist.push(card",{"_index":1271,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardlist.reduce((maxid",{"_index":1270,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardlist[index",{"_index":1273,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["cards.service",{"_index":1736,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["cardservice",{"_index":1202,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["cardshop",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardsservcie",{"_index":1163,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardsservice",{"_index":581,"title":{"injectables/CardsService.html":{}},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardtext",{"_index":580,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":578,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1684,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1396,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1225,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["carros",{"_index":1804,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart'},{'name",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1783,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1782,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1780,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:24",{"_index":1792,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:28",{"_index":1795,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:32",{"_index":1786,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:48",{"_index":1790,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:65",{"_index":1788,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1679,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":1418,"title":{},"body":{"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1803,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:121",{"_index":1810,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1806,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:34",{"_index":1809,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:53",{"_index":1812,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:69",{"_index":1808,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1779,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":1071,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1209,"title":{},"body":{"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["category",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["catidad",{"_index":681,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cd07",{"_index":217,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["cerrado",{"_index":1331,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1339,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":2060,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":1068,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":2089,"title":{},"body":{"index.html":{}}}],["checkear",{"_index":1545,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["checkemail",{"_index":1833,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["checkemail(email",{"_index":1840,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["checkemailapi",{"_index":1834,"title":{},"body":{"injectables/UserApiService.html":{}}}],["checkemailapi(email",{"_index":1844,"title":{},"body":{"injectables/UserApiService.html":{}}}],["checkrecovery",{"_index":1533,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["checkrecovery(token",{"_index":1543,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["checkstock",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":2081,"title":{},"body":{"index.html":{}}}],["choose",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["clase",{"_index":171,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["clave",{"_index":1561,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":2046,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":268,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/RecoveryService.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["code",{"_index":2062,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":663,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1493,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["color",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":2082,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1123,"title":{},"body":{"injectables/CardItemService.html":{}}}],["completo",{"_index":1212,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1358,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1683,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1675,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":664,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1368,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1378,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1461,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["conservicio",{"_index":1542,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["console.error('error",{"_index":1174,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/UserApiService.html":{}}}],["console.log('usuario",{"_index":1882,"title":{},"body":{"injectables/UserApiService.html":{}}}],["console.log(user.id",{"_index":1967,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":243,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(cardsservice",{"_index":1805,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(http",{"_index":179,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["constructor(private",{"_index":236,"title":{},"body":{"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1200,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["contega",{"_index":2023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":321,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contenido",{"_index":1781,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["content",{"_index":212,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["contiene",{"_index":1312,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["contrario",{"_index":1942,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardsService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasena/'+result",{"_index":1453,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["contrasenas",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1492,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["control",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":1073,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["contructor",{"_index":583,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{}}}],["copy",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1382,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":335,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":615,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1360,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1901,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/api/cards.service",{"_index":616,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/api/recovery.service",{"_index":1444,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["core/services/api/shopping",{"_index":1419,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/api/user",{"_index":1443,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/shopping",{"_index":1417,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1442,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["core/validators/validators",{"_index":304,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["correlativo",{"_index":349,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":165,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1128,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":679,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":1088,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1969,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["creacion",{"_index":267,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["creado",{"_index":348,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["crear",{"_index":187,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":269,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":334,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":273,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":272,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":265,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:27",{"_index":277,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:38",{"_index":280,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:58",{"_index":289,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:62",{"_index":291,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:66",{"_index":293,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:70",{"_index":295,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:77",{"_index":284,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":264,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":175,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":184,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["createdby",{"_index":674,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["createorupdatecarditem(card",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["createrecovery",{"_index":1534,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["createrecovery(email",{"_index":1547,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["createrecovery(email:string",{"_index":1585,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["createshoppingcar",{"_index":1690,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1711,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1835,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["createuser(username",{"_index":1847,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["creature",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1940,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1686,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1337,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crypto",{"_index":1582,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":1581,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["cryptojs.lib.wordarray.random(16",{"_index":1603,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1191,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentdate",{"_index":1607,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["currentdate.gettime",{"_index":1612,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["currentshoppingcart",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currenttimestamp",{"_index":1611,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["currentuser",{"_index":1892,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1117,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d23a4.appspot.com/o/address.json?alt=media&token=177adff0",{"_index":225,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["d23a4.appspot.com/o/cards.json?alt=media&token=3ee7efb3",{"_index":1259,"title":{},"body":{"injectables/CardsService.html":{}}}],["d23a4.appspot.com/o/recovery.json?alt=media&token=3fa8f2c2",{"_index":1575,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["d23a4.appspot.com/o/shopcart.json?alt=media&token=47fa4eaf",{"_index":1731,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["d23a4.appspot.com/o/users.json?alt=media&token=41e3ea2d",{"_index":1862,"title":{},"body":{"injectables/UserApiService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":355,"title":{},"body":{"injectables/AddressService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["damage",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["data.filter(carditem",{"_index":1280,"title":{},"body":{"injectables/CardsService.html":{}}}],["date",{"_index":1529,"title":{},"body":{"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["date(recovery.date).gettime",{"_index":1610,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["datos",{"_index":1917,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["dcon",{"_index":1787,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1921,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1353,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1125,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1931,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1680,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":282,"title":{},"body":{"components/AddressCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":1685,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1639,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1373,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":278,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ShoppingCartApiService.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{}}}],["dependencies",{"_index":1993,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1936,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1381,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":594,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:109",{"_index":596,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:113",{"_index":598,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":600,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:121",{"_index":602,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:125",{"_index":604,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:129",{"_index":606,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:133",{"_index":608,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:137",{"_index":610,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":612,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:145",{"_index":614,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:152",{"_index":585,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1349,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1351,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":587,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1348,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":590,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":582,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1356,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":584,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1342,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1167,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["dev",{"_index":2054,"title":{},"body":{"index.html":{}}}],["development",{"_index":2049,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["differenceinhours",{"_index":1615,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["differenceinmillis",{"_index":1613,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["direccion",{"_index":156,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":315,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2066,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2071,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":354,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1830,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":2070,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1970,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["donde",{"_index":1504,"title":{},"body":{"components/PaymentComponent.html":{}}}],["double",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1095,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1999,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1710,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":2079,"title":{},"body":{"index.html":{}}}],["each",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":675,"title":{},"body":{"interfaces/CardItem.html":{},"components/UserManagementComponent.html":{}}}],["editaddressjson",{"_index":176,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["editaddressjson(addresslist",{"_index":189,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["editar",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["editcardsjson",{"_index":1228,"title":{},"body":{"injectables/CardsService.html":{}}}],["editcardsjson(cardlist",{"_index":1236,"title":{},"body":{"injectables/CardsService.html":{}}}],["editrecoveriesjson",{"_index":1535,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["editrecoveriesjson(recoverylist",{"_index":1552,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["editshoppingcartjson",{"_index":1691,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["editshoppingcartjson(shoppingcartlist",{"_index":1713,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["editusersjson",{"_index":1836,"title":{},"body":{"injectables/UserApiService.html":{}}}],["editusersjson(userlist",{"_index":1849,"title":{},"body":{"injectables/UserApiService.html":{}}}],["ejecucion",{"_index":1235,"title":{},"body":{"injectables/CardsService.html":{}}}],["ejecutar",{"_index":1856,"title":{},"body":{"injectables/UserApiService.html":{}}}],["ejecuto",{"_index":1706,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1122,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elementos",{"_index":1556,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["elk",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":379,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1336,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrada",{"_index":1241,"title":{},"body":{"injectables/CardsService.html":{}}}],["encontrado",{"_index":1941,"title":{},"body":{"injectables/UserService.html":{}}}],["encontrar",{"_index":1560,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["encontro",{"_index":1843,"title":{},"body":{"injectables/UserApiService.html":{}}}],["encuentra",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1827,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enpoint",{"_index":230,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["enters",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entrada",{"_index":1350,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{}}}],["entre",{"_index":1485,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserApiService.html":{}}}],["enum/cart",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":2009,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1448,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["equal",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":258,"title":{},"body":{"injectables/AddressApiService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["es",{"_index":316,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":1067,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":206,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["espera",{"_index":1507,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esta",{"_index":1183,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":2076,"title":{},"body":{"index.html":{}}}],["exile",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1379,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["existentes",{"_index":1930,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1669,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["expirado",{"_index":1620,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":1078,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f569de63",{"_index":216,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["fabled",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1106,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":383,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":1075,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fecha",{"_index":1530,"title":{},"body":{"interfaces/Recovery.html":{}}}],["field1",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":2061,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtradas",{"_index":1246,"title":{},"body":{"injectables/CardsService.html":{}}}],["filtratadas",{"_index":1243,"title":{},"body":{"injectables/CardsService.html":{}}}],["filtro",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["finalizacion",{"_index":1514,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1391,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["findrecovery",{"_index":1536,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["findrecovery(token",{"_index":1558,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["finduser",{"_index":1589,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["finduser.id",{"_index":1595,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["finish",{"_index":1369,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1371,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1370,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1367,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1372,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1374,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1366,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1947,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1109,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1377,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1633,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1635,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1634,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1631,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1649,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1650,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1642,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1637,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1638,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1644,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1646,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1647,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1648,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1630,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formaulario",{"_index":1464,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["formcontrol",{"_index":296,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1907,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1905,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1906,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":287,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":266,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["four",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":374,"title":{},"body":{"injectables/AddressService.html":{}}}],["fromulario",{"_index":588,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["fucion",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":186,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1807,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["function",{"_index":207,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["functions",{"_index":2017,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2086,"title":{},"body":{"index.html":{}}}],["gain",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{}}}],["genera",{"_index":1549,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["generado",{"_index":1551,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["generar",{"_index":1563,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["generate",{"_index":2064,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2044,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":1537,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["generic",{"_index":1132,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddress",{"_index":177,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["getaddressbyuser",{"_index":178,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":200,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["getallcards",{"_index":1229,"title":{},"body":{"injectables/CardsService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1692,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1715,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcard(cardid",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcardlistwithfilters",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcardlistwithfilters(category",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcardlistwithfiltersfetch",{"_index":1230,"title":{},"body":{"injectables/CardsService.html":{}}}],["getcardlistwithfiltersfetch(category",{"_index":1247,"title":{},"body":{"injectables/CardsService.html":{}}}],["getcardname",{"_index":593,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":601,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":613,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":609,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":294,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":603,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1468,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1440,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1643,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":607,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1645,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":611,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":288,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":290,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":605,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":595,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getrecoveries",{"_index":1538,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["getregion",{"_index":292,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":597,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":599,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getshoppingcart",{"_index":1693,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["getting",{"_index":2041,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1837,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1851,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["getusername",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getusers",{"_index":1838,"title":{},"body":{"injectables/UserApiService.html":{}}}],["giant",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":2088,"title":{},"body":{"index.html":{}}}],["god",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1161,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["habilidad",{"_index":676,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1828,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1392,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1093,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1916,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1784,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1762,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":1087,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["headers",{"_index":209,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["heliod",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":2087,"title":{},"body":{"index.html":{}}}],["henge",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http",{"_index":183,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["http://localhost:4200",{"_index":2056,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":180,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["httpheaders",{"_index":211,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["httpoptions",{"_index":173,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1133,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1096,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":1074,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1113,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://firebasestorage.googleapis.com/v0/b/mtg",{"_index":223,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["human",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":352,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1971,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1146,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["if(cardindex",{"_index":1766,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1362,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(cardlist.length",{"_index":1268,"title":{},"body":{"injectables/CardsService.html":{}}}],["if(category",{"_index":1140,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["if(differenceinhours",{"_index":1618,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["if(finduser",{"_index":1592,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["if(hasstock",{"_index":1769,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1152,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["if(recovery.userid",{"_index":1608,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["if(response.find(user",{"_index":1868,"title":{},"body":{"injectables/UserApiService.html":{}}}],["if(result",{"_index":659,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["if(search",{"_index":1143,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1763,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1516,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(shoppingcartindex",{"_index":1770,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["if(this.authservice.getuser().id",{"_index":1178,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.checkemail(email",{"_index":1958,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.checkemail(email,response",{"_index":1870,"title":{},"body":{"injectables/UserApiService.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1796,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1384,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1388,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":619,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1957,"title":{},"body":{"injectables/UserService.html":{}}}],["if(user.id",{"_index":1622,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["iko",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":667,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["imagenes",{"_index":1354,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["implements",{"_index":2084,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":332,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":363,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1825,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{}}}],["indicar",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":2022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1182,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":281,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["inicio",{"_index":1376,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":166,"title":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":168,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1359,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1346,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1108,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1092,"title":{},"body":{"injectables/CardItemService.html":{}}}],["intentelo",{"_index":1626,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["intento",{"_index":1531,"title":{},"body":{"interfaces/Recovery.html":{}}}],["intentos",{"_index":1956,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":139,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invocacion",{"_index":222,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["invocar",{"_index":1175,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["isactive",{"_index":1823,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1500,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1398,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":589,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["items",{"_index":351,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"components/ShoppingCartComponent.html":{}}}],["jegantha",{"_index":1119,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["js",{"_index":1583,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["juego",{"_index":677,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":680,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":2078,"title":{},"body":{"index.html":{}}}],["khm",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1091,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":327,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":2026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":322,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["libreria",{"_index":182,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["librerias",{"_index":1696,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["lies",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1196,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1198,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1197,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1194,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1203,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:28",{"_index":1415,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:32",{"_index":1416,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:36",{"_index":1403,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:47",{"_index":1207,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:51",{"_index":1409,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:68",{"_index":1413,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:78",{"_index":1407,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:80",{"_index":1206,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:93",{"_index":1405,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1193,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["lista",{"_index":1555,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["listado",{"_index":194,"title":{},"body":{"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/RecoveryService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":326,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/OrderListComponent.html":{}}}],["llamado",{"_index":198,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["lo",{"_index":1487,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1525,"title":{},"body":{"components/PaymentComponent.html":{}}}],["localtoken",{"_index":1459,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["logeduser",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["logica",{"_index":1251,"title":{},"body":{"injectables/CardsService.html":{}}}],["login",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":365,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["loguear",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1953,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1949,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":669,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1157,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1159,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1158,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1156,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:25",{"_index":1164,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:42",{"_index":1168,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:57",{"_index":1170,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:65",{"_index":1165,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:24",{"_index":330,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1896,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1894,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:35",{"_index":331,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts:65",{"_index":1897,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:69",{"_index":1898,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:73",{"_index":1899,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:77",{"_index":1900,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:84",{"_index":1895,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":579,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":345,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/PasswordResetComponent.html":{}}}],["manejo",{"_index":279,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["manipulacion",{"_index":1832,"title":{},"body":{"injectables/UserApiService.html":{}}}],["many",{"_index":1090,"title":{},"body":{"injectables/CardItemService.html":{}}}],["map",{"_index":1264,"title":{},"body":{"injectables/CardsService.html":{}}}],["map(data",{"_index":1279,"title":{},"body":{"injectables/CardsService.html":{}}}],["market",{"_index":1333,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mas",{"_index":1627,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["matching",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(currenttimestamp",{"_index":1614,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["math.max(maxid",{"_index":246,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":2027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1489,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1814,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1488,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["mensaje",{"_index":591,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["merfolk",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metodo",{"_index":191,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["metropolitana",{"_index":371,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1490,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":2008,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":344,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":232,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{}}}],["models/recovery.model",{"_index":1580,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["models/shopping",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RecoveryService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["modificada",{"_index":1252,"title":{},"body":{"injectables/CardsService.html":{}}}],["modificado",{"_index":195,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["modificados",{"_index":1557,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["modificar",{"_index":358,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardsService.html":{}}}],["modifycarditem",{"_index":1231,"title":{},"body":{"injectables/CardsService.html":{}}}],["modifycarditem(card",{"_index":1249,"title":{},"body":{"injectables/CardsService.html":{}}}],["modules",{"_index":2094,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":1081,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["mostrar",{"_index":1195,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["much",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2055,"title":{},"body":{"index.html":{}}}],["need",{"_index":2083,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":377,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":210,"title":{},"body":{"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":240,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":255,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":250,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":252,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":253,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":254,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":251,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{}}}],["newid",{"_index":244,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1738,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1740,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1742,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1741,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1871,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.email",{"_index":1877,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1874,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.id",{"_index":1872,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1879,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1875,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.password",{"_index":1876,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.role",{"_index":1878,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["newuser.username",{"_index":1873,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["ng",{"_index":2052,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":271,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":159,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1111,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1933,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":314,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["number,callback",{"_index":1820,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["numerico",{"_index":162,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":160,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":2024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":323,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":324,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1210,"title":{},"body":{"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{}}}],["obetener",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["obetenr",{"_index":1240,"title":{},"body":{"injectables/CardsService.html":{}}}],["object",{"_index":208,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["objeto",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":317,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["observable",{"_index":196,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["obteener",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":204,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["ocurrido",{"_index":1387,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":2020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":302,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":2025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":303,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1316,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":275,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1390,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1395,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1424,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1425,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1399,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1393,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":2090,"title":{},"body":{"index.html":{}}}],["overview",{"_index":2091,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1112,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1992,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":2093,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1496,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parametros",{"_index":1208,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["params.get('categoria",{"_index":1214,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('recovery",{"_index":1472,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["params.get('search",{"_index":1215,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["pasarela",{"_index":1789,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["passage",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordrecoverycomponent",{"_index":122,"title":{"components/PasswordRecoveryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordresetcomponent",{"_index":125,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordvalidator",{"_index":1470,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1131,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1497,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1499,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1498,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":127,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1682,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1103,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":1084,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1946,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1335,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":2080,"title":{},"body":{"index.html":{}}}],["play",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1527,"title":{},"body":{"components/PaymentComponent.html":{}}}],["post",{"_index":192,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["power",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":1085,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":665,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{}}}],["procesando",{"_index":1524,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proceso",{"_index":1495,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":2043,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":234,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes),providehttpclient",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1951,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":320,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":163,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1952,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":1082,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["randombytes",{"_index":1602,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["randombytes.tostring(cryptojs.enc.hex",{"_index":1604,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":270,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1523,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1811,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1515,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1397,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":366,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["realizo",{"_index":1724,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["recoverpassform",{"_index":1434,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery",{"_index":1431,"title":{"interfaces/Recovery.html":{}},"body":{"components/PasswordRecoveryComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["recovery'},{'name",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["recovery.component.css",{"_index":1433,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.html",{"_index":1432,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts",{"_index":1430,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recovery.component.ts:28",{"_index":1437,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:45",{"_index":1438,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:54",{"_index":1441,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:61",{"_index":1439,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.date",{"_index":1596,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["recovery.date.gettime",{"_index":1966,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.token",{"_index":1597,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["recovery.userid",{"_index":1594,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["recovery/password",{"_index":1429,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recoverylist",{"_index":1554,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["recoveryservice",{"_index":1436,"title":{"injectables/RecoveryService.html":{}},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"coverage.html":{}}}],["recoverytimestamp",{"_index":1609,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["recuperacion",{"_index":1227,"title":{},"body":{"injectables/CardsService.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["recuperar",{"_index":1340,"title":{},"body":{"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/UserService.html":{}}}],["redireccionar",{"_index":1166,"title":{},"body":{"components/CardManageComponent.html":{}}}],["redirecciones",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["redirect",{"_index":1501,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"components/ShoppingCartComponent.html":{}}}],["redirigiendo",{"_index":1526,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigir",{"_index":1513,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":2092,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1541,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":2021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":328,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1668,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1636,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":129,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1632,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["región",{"_index":318,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":2059,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1929,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1932,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":378,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1826,"title":{},"body":{"interfaces/User.html":{}}}],["reset",{"_index":1456,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["reset.component.css",{"_index":1458,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.html",{"_index":1457,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":1455,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:27",{"_index":1466,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:31",{"_index":1462,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:49",{"_index":1463,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:81",{"_index":1467,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:85",{"_index":1469,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:92",{"_index":1465,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":1454,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["respectivos",{"_index":1411,"title":{},"body":{"components/OrderListComponent.html":{}}}],["respondeiendo",{"_index":1244,"title":{},"body":{"injectables/CardsService.html":{}}}],["response",{"_index":242,"title":{},"body":{"injectables/AddressApiService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["response.find(card",{"_index":1276,"title":{},"body":{"injectables/CardsService.html":{}}}],["response.find(user",{"_index":1621,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["response.findindex(shoppingcart",{"_index":1746,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["response.findindex(user",{"_index":1887,"title":{},"body":{"injectables/UserApiService.html":{}}}],["response.push(newaddress",{"_index":256,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["response.push(newshoppingcart",{"_index":1743,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["response.push(newuser",{"_index":1880,"title":{},"body":{"injectables/UserApiService.html":{}}}],["response.push(recovery",{"_index":1599,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["response.reduce((maxid",{"_index":245,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["response[index",{"_index":1748,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["rest",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["restorna",{"_index":1245,"title":{},"body":{"injectables/CardsService.html":{}}}],["result",{"_index":202,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["result.filter(address",{"_index":260,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["result.filter(carditem",{"_index":1144,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultadded",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["resultado",{"_index":592,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/UserApiService.html":{}}}],["resultante",{"_index":1719,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["resultcard:carditem",{"_index":1275,"title":{},"body":{"injectables/CardsService.html":{}}}],["resultcreate",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["resultcreate.id",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retiornar",{"_index":1568,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["retorna",{"_index":197,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["retornar",{"_index":1234,"title":{},"body":{"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/UserApiService.html":{}}}],["return",{"_index":237,"title":{},"body":{"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1107,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1824,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":235,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1094,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1204,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["routeroutlet",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2051,"title":{},"body":{"index.html":{}}}],["running",{"_index":2072,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":233,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1320,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1126,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1471,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1479,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":372,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":2063,"title":{},"body":{"index.html":{}}}],["scute",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":164,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1948,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":350,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"injectables/RecoveryService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["segundos",{"_index":1508,"title":{},"body":{"components/PaymentComponent.html":{}}}],["seleccionada",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["seleccionado",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["seleccionar",{"_index":1171,"title":{},"body":{"components/CardManageComponent.html":{}}}],["selecionada",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selecionado",{"_index":1343,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["selected",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1700,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1767,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1400,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1699,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1765,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1764,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1776,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1768,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1402,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1412,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":2053,"title":{},"body":{"index.html":{}}}],["server",{"_index":2050,"title":{},"body":{"index.html":{}}}],["service",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["sesión",{"_index":1332,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":662,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setea",{"_index":1414,"title":{},"body":{"components/OrderListComponent.html":{}}}],["setear",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1162,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1169,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1518,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shop",{"_index":224,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["shoppincart.userid",{"_index":1759,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":496,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1749,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart,hasstock",{"_index":1753,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["shoppingcart.id",{"_index":1517,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1750,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart[],selectedshoppingcart",{"_index":1760,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["shoppingcartapiservice",{"_index":421,"title":{"injectables/ShoppingCartApiService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartApiService.html":{},"coverage.html":{}}}],["shoppingcartcomponent",{"_index":132,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1708,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcartindex",{"_index":1704,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["shoppingcartlist",{"_index":1698,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist.push(selectedshoppingcart",{"_index":1771,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["shoppingcartlist[shoppingcartindex",{"_index":1772,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["shoppingcartresult",{"_index":1756,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["shoppingcartservice",{"_index":519,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1347,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":364,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":682,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulacion",{"_index":1511,"title":{},"body":{"components/PaymentComponent.html":{}}}],["simular",{"_index":1509,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sistema",{"_index":1625,"title":{},"body":{"injectables/RecoveryService.html":{},"interfaces/User.html":{}}}],["sitio",{"_index":673,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":319,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1130,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":2018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":263,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1192,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":672,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/recovery.model.ts",{"_index":1528,"title":{},"body":{"interfaces/Recovery.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1678,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1822,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":343,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":376,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:47",{"_index":347,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:68",{"_index":357,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:77",{"_index":353,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/api/address",{"_index":169,"title":{},"body":{"injectables/AddressApiService.html":{},"coverage.html":{}}}],["src/app/core/services/api/cards.service.ts",{"_index":1226,"title":{},"body":{"injectables/CardsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/cards.service.ts:102",{"_index":1237,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:111",{"_index":1239,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:130",{"_index":1248,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:153",{"_index":1242,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:18",{"_index":1258,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:28",{"_index":1232,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:40",{"_index":1238,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:49",{"_index":1233,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:79",{"_index":1250,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/recovery.service.ts",{"_index":1532,"title":{},"body":{"injectables/RecoveryService.html":{},"coverage.html":{}}}],["src/app/core/services/api/recovery.service.ts:112",{"_index":1562,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:122",{"_index":1559,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:141",{"_index":1544,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:173",{"_index":1567,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:21",{"_index":1574,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:31",{"_index":1540,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:47",{"_index":1565,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:56",{"_index":1553,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/recovery.service.ts:65",{"_index":1548,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["src/app/core/services/api/shopping",{"_index":1688,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"coverage.html":{}}}],["src/app/core/services/api/user",{"_index":1831,"title":{},"body":{"injectables/UserApiService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:105",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:123",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:137",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:145",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:155",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:164",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:204",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:218",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:232",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:240",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:248",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:256",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:264",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:94",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1138,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1802,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1918,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1944,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:118",{"_index":1935,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:127",{"_index":1922,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:136",{"_index":1924,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:157",{"_index":1938,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:167",{"_index":1937,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:176",{"_index":1923,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1954,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:202",{"_index":1943,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:45",{"_index":1955,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:61",{"_index":1925,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:95",{"_index":1939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1989,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1310,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1324,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1317,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1321,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1323,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1318,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1341,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/password",{"_index":1428,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1494,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1502,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1503,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:59",{"_index":1510,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1629,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1778,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1891,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":2042,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1124,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1972,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":2069,"title":{},"body":{"index.html":{}}}],["strike",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":286,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["submittext",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subscribe",{"_index":1282,"title":{},"body":{"injectables/CardsService.html":{}}}],["subtotal",{"_index":1364,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1221,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sumar",{"_index":1406,"title":{},"body":{"components/OrderListComponent.html":{}}}],["sun",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sus",{"_index":1410,"title":{},"body":{"components/OrderListComponent.html":{}}}],["suscribible",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1322,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1127,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1491,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["t",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1991,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1990,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tarde",{"_index":1628,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["target",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tempo",{"_index":1506,"title":{},"body":{"components/PaymentComponent.html":{}}}],["tener",{"_index":1484,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":2019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":2075,"title":{},"body":{"index.html":{}}}],["testing",{"_index":369,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":2074,"title":{},"body":{"index.html":{}}}],["texto",{"_index":670,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1104,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addcardtoshoppingcart",{"_index":1752,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["this.addressapiservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addressapiservice.getaddressbyuser",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.addressform",{"_index":305,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":310,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":307,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":308,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":309,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":384,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":381,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":380,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.authservice.additemtoshoppingcart",{"_index":1218,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":311,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1383,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":336,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":618,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1903,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":646,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1179,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1325,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1176,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updatebasicinfo",{"_index":1912,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1389,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":622,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":634,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":647,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":638,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":651,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":644,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":657,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":642,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":655,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":639,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":652,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":641,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":654,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":643,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":656,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":640,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":653,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":635,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":648,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":636,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":649,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":637,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":650,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1139,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1141,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1154,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1150,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1149,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1148,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1153,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.cardlist",{"_index":1173,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.cardservice.getallcards().subscribe",{"_index":1217,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.cardservice.getcardlistwithfilters(categoria,search",{"_index":1216,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.cardsservcie.getallcards().subscribe",{"_index":1172,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.cardsservice.createorupdatecarditem(this.selectedcard",{"_index":658,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardsservice.getcard(cardid",{"_index":1751,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["this.createshoppingcar(userid",{"_index":1755,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1361,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1797,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1385,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(resultadded[0",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.id",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1902,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1908,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.editaddressjson(response).subscribe",{"_index":257,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["this.editcardsjson(cardlist).subscribe",{"_index":1269,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.editrecoveriesjson(response).subscribe",{"_index":1600,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["this.editshoppingcartjson(response).subscribe",{"_index":1744,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["this.editshoppingcartjson(shoppingcartlist).subscribe",{"_index":1773,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["this.editusersjson(response).subscribe",{"_index":1881,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.email?.value",{"_index":1450,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.filterform",{"_index":1327,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1328,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.findrecovery(token",{"_index":1606,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["this.generaterandomtoken",{"_index":1598,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["this.getaddress().subscribe",{"_index":241,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["this.getallcards().subscribe",{"_index":1266,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.getcard(cardid).quantity",{"_index":1155,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.getcardlistwithfiltersfetch",{"_index":1281,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.getrecoveries().subscribe",{"_index":1586,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["this.getshoppingcart().subscribe",{"_index":1739,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["this.getusers().subscribe",{"_index":1867,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.gotodetail",{"_index":1177,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1798,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.http.get(this.url",{"_index":238,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["this.http.get(this.url).pipe",{"_index":1278,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.http.post(this.url,addresslist,this.httpoptions",{"_index":239,"title":{},"body":{"injectables/AddressApiService.html":{}}}],["this.http.post(this.url,cardlist,this.httpoptions",{"_index":1274,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.http.post(this.url,recoverylist,this.httpoptions",{"_index":1584,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["this.http.post(this.url,shoppingcartlist,this.httpoptions",{"_index":1737,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["this.http.post(this.url,userlist,this.httpoptions",{"_index":1890,"title":{},"body":{"injectables/UserApiService.html":{}}}],["this.isloggedin",{"_index":1326,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1519,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1420,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.localtoken",{"_index":1475,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.logeduser",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modifycarditem(card,response",{"_index":1267,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.orderlist",{"_index":1422,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.password?.value",{"_index":1483,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.recoverpassform",{"_index":1445,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.recoverpassform.get('email",{"_index":1447,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.recoveryservice.checkrecovery",{"_index":1473,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.recoveryservice.createrecovery",{"_index":1451,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.recoveryservice.updatepassword",{"_index":1482,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.redirect",{"_index":1520,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1651,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1660,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1658,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1667,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1655,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1664,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1656,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1665,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1659,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1666,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1657,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1663,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1661,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1213,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.router.navigate",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/actualizar",{"_index":1452,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1329,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1185,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1184,"title":{},"body":{"components/CardManageComponent.html":{},"components/PasswordResetComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1522,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1801,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":623,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":627,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":633,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":631,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":628,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":645,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":630,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":632,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":629,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":624,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":625,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":626,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1423,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartapiservice.additemtoshoppingcart",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartapiservice.createshoppingcar",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartapiservice.getallshopppingcartsbyuser",{"_index":1421,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartapiservice.updateshoppingcart",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1821,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1818,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1817,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1816,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1819,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.submittext",{"_index":620,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1799,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1904,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1911,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email')?.value",{"_index":1915,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1909,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname')?.value",{"_index":1913,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1910,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname')?.value",{"_index":1914,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updatepasswordform",{"_index":1476,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updatepasswordform.get('confirmpassword",{"_index":1481,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updatepasswordform.get('password",{"_index":1480,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updateuser(user",{"_index":1968,"title":{},"body":{"injectables/UserService.html":{}}}],["this.useraddress.asobservable",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(result",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":337,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userapiservice.checkemailapi",{"_index":1449,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.userapiservice.createuser",{"_index":1662,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userapiservice.getuserauth(username,password",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userapiservice.getusers().subscribe",{"_index":1587,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["this.userapiservice.updateuser(this.logeduser",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userapiservice.updateuser(user",{"_index":1624,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["this.userlist.find(user",{"_index":1961,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1962,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1960,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1959,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1963,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrecoverytry.find(recovery",{"_index":1965,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrecoverytry.push(recovery",{"_index":1964,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["those",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["tine",{"_index":1794,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["tipo",{"_index":668,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["titan",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["todos",{"_index":1717,"title":{},"body":{"injectables/ShoppingCartApiService.html":{}}}],["token",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["token.\\n",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":1072,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1344,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trae",{"_index":1211,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["trample",{"_index":1086,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1705,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":1089,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":205,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":188,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":2073,"title":{},"body":{"index.html":{}}}],["unless",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":346,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":356,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1723,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1747,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1855,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1888,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1889,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["updateform",{"_index":1893,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updatepassword",{"_index":1539,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["updatepassword(token",{"_index":1566,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["updatepasswordform",{"_index":1460,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["updateshoppingcart",{"_index":1694,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1721,"title":{},"body":{"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1839,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1853,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["url",{"_index":174,"title":{},"body":{"injectables/AddressApiService.html":{},"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/UserApiService.html":{}}}],["uro",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1927,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":2065,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":1591,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":247,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1623,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["user.username",{"_index":1869,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["user1",{"_index":1950,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":259,"title":{},"body":{"injectables/AddressApiService.html":{},"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":329,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userapiservice",{"_index":420,"title":{"injectables/UserApiService.html":{}},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["userid",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressApiService.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1841,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["userlist.find(user",{"_index":1884,"title":{},"body":{"injectables/UserApiService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrecoverytry",{"_index":1920,"title":{},"body":{"injectables/UserService.html":{}}}],["userresponse",{"_index":1588,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["userresponse.find(user",{"_index":1590,"title":{},"body":{"injectables/RecoveryService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":518,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservie",{"_index":1435,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["uso",{"_index":1673,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["usuarios',error",{"_index":1883,"title":{},"body":{"injectables/UserApiService.html":{}}}],["ususario",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/PasswordRecoveryComponent.html":{},"injectables/UserApiService.html":{}}}],["vacio",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1928,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1375,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{}}}],["validaciones",{"_index":283,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":299,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":300,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":297,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1446,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1478,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1654,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1653,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1652,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1477,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":306,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validez",{"_index":1546,"title":{},"body":{"injectables/RecoveryService.html":{},"injectables/UserService.html":{}}}],["valki",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":161,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["valores",{"_index":359,"title":{},"body":{"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"interfaces/Recovery.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":375,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":333,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1292,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["varieble",{"_index":1793,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vehicle",{"_index":1069,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1394,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["verifica",{"_index":1505,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":2047,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":2077,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressApiService.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":671,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":1080,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1677,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1120,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1129,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":661,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/RecoveryService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartApiService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserApiService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1672,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressName\n                                        \n                                \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Direccion.\n     */\n    AddressName: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressApiService.html":{"url":"injectables/AddressApiService.html","title":"injectable - AddressApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/address-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Clase con Funciones de API de direcciones de usuario\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                editAddressJson\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/address-api.service.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a libreria HTTP\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Libreria HTTP\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/address-api.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editAddressJson\n                        \n                    \n                \n            \n            \n                \neditAddressJson(addressList: Address[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/address-api.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo POST de API de direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                addressList\n                                            \n                                                            Address[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado modificado de direcciones\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Retorna Observable de llamado Post de API\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/address-api.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo GET de API de direcciones\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number, callback: (result: Address[]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/address-api.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de direcciones de un usuario especifico\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de usuario\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna listado de direcciones del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f569de63-cd07-4d62-8f1e-7d2f8df26b56' \n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/address-api.service.ts:18\n                        \n                    \n\n            \n                \n                    Headers para invocacion de API POST\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/address.json?alt=media&token=177adff0-9ba2-4243-b2f9-00ce0410a300'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/address-api.service.ts:28\n                        \n                    \n\n            \n                \n                    Enpoint de API de Informacion de Direcciones\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Address } from '../../models/address.model';\nimport { Observable } from 'rxjs';\n\n/**\n * @description\n * Clase con Funciones de API de direcciones de usuario\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressApiService {\n\n  /**\n   * Headers para invocacion de API POST\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer f569de63-cd07-4d62-8f1e-7d2f8df26b56' \n    })\n  }\n\n  /**\n   * Enpoint de API de Informacion de Direcciones\n   */\n  private url = 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/address.json?alt=media&token=177adff0-9ba2-4243-b2f9-00ce0410a300';\n\n  /**\n   * Constructor con dependencias a libreria HTTP\n   * @param http Libreria HTTP\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funcion de Metodo GET de API de direcciones\n   * @returns Observable con listado de direcciones\n   */\n  getAddress(): Observable{\n    return this.http.get(this.url);\n  }\n\n  /**\n   * Funcion de Metodo POST de API de direcciones\n   * @param addressList Listado modificado de direcciones\n   * @returns Retorna Observable de llamado Post de API\n   */\n  editAddressJson(addressList: Address[]): Observable{\n    return this.http.post(this.url,addressList,this.httpOptions);\n  }\n\n  /**\n   * Funcion para crear una direccion\n   * @param userId Id de usuario\n   * @param name Nombre de direccion\n   * @param number Numero de direccion\n   * @param region Region\n   * @param Commune Comuna\n   */\n  createAddress(\n    userId: number, \n    name: string, \n    number: number, \n    region: string, \n    Commune: string){\n\n      let newAddress = {} as Address;\n\n      this.getAddress().subscribe(\n        response => {\n          const newId = response.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n          }, 0) + 1;\n    \n          newAddress.id=newId;\n          newAddress.UserId = userId;\n          newAddress.Name = name;\n          newAddress.Number = number;\n          newAddress.Region = region;\n          newAddress.Commune = Commune;\n          \n          \n          response.push(newAddress);\n\n          this.editAddressJson(response).subscribe();\n        },\n        error => {\n\n        }\n      );\n      \n  }\n\n  /**\n   * Funcion para obtener listado de direcciones de un usuario especifico\n   * @param userId Id de usuario\n   * @param callback Funcion que retorna listado de direcciones del usuario\n   */\n  getAddressByUser(userId: number, callback: (result: Address[]) => void) {\n    this.getAddress().subscribe(\n      result => {\n        let userAddress = result.filter(address => address.UserId === userId) || [] as Address[]\n        callback(userAddress);\n      },\n      error => {\n        callback([] as Address[]);\n      }\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de creacion de direccion de entrega del cliente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Acion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de direccion\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente de formulario de creacion de direccion de entrega del cliente\n */\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  /**\n   * Formulario de direccion\n   */\n  addressForm!: FormGroup;\n\n  /**\n   * Constructor con dependencia a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n   */\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  /**\n   * Acion submit de formulario\n   */\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            AddressName: \"\",\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            AddressName: \"\",\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            AddressName: \"\",\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            AddressName: \"\",\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Titulo de aplicacion\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * @description\n * Componente principal de la aplicacion\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /**\n   * Titulo de aplicacion\n   */\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userApiService: UserApiService, addressApiService: AddressApiService, shoppingCartApiService: ShoppingCartApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                        UserApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        addressApiService\n                                                  \n                                                        \n                                                                        AddressApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        shoppingCartApiService\n                                                  \n                                                        \n                                                                        ShoppingCartApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:232\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:240\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:264\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:248\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:155\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:218\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:204\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\nimport { UserApiService } from './api/user-api.service';\nimport { AddressApiService } from './api/address-api.service';\nimport { ShoppingCartApiService } from './api/shopping-cart-api.service';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router,\n    private userApiService: UserApiService,\n    private addressApiService: AddressApiService,\n    private shoppingCartApiService: ShoppingCartApiService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string, callback: (result: boolean) => void) {\n\n    this.userApiService.getUserAuth(userName,password,\n      result => {\n        this.logedUser = result;\n\n        if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n          this.loggedIn.next(false);\n          callback(false);\n          return;\n        }\n    \n        this.setUserIdToShoppingCart();\n        this.addressApiService.getAddressByUser(\n          this.logedUser.id,\n          result => {\n            this.userAddress.next(result);\n          }\n        )\n        this.loggedIn.next(true);\n        callback(true);\n        return;\n      }\n    );\n\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string, callback: (result: boolean) => void) {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email; \n    this.userApiService.updateUser(this.logedUser,\n      result =>{\n        callback(result)\n      }\n    );\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressApiService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.addressApiService.getAddressByUser(\n      this.logedUser.id,\n      result => {\n        this.userAddress.next(result);\n      }\n    )\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number, callback: (result: boolean) => void) {\n\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      \n      this.shoppingCartApiService.createShoppingcar(\n        this.logedUser.id,\n        resultCreate => {\n          this.shoppingCartApiService.addItemToShoppingCart(\n            this.logedUser.id,\n            cardId,\n            resultCreate.id,\n            resultAdded => {\n              this.currentShoppingCart.next(resultAdded[0]);\n              callback(resultAdded[1]);\n            }\n          )\n        }\n      )\n\n    }else{\n\n      this.shoppingCartApiService.addItemToShoppingCart(\n        this.logedUser.id,\n        cardId,\n        this.currentShoppingCart.value.id,\n        resultAdded => {\n          this.currentShoppingCart.next(resultAdded[0]);\n          callback(resultAdded[1]);\n        }\n      )\n\n    }\n\n  }\n\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartApiService.updateShoppingCart(\n        this.currentShoppingCart.value,\n        result => {}\n      );\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartApiService.updateShoppingCart(\n        this.currentShoppingCart.value,\n        result => {}\n      );\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para editar cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardsService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                            \n                        \n\n                \n                    \n                            Contructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardsService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Iniciacion de Formulario de editar cartas\nIniciacion de valores de carta selecionada\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario para editar cartas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:29\n                        \n                    \n\n            \n                \n                    Fromulario para editar carta del catalogo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                        \n                    \n\n            \n                \n                    Variable para item de carta selecionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n            \n                \n                    Variable para mensaje de resultado de submit\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:113\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:125\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:141\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:145\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardsService } from '../core/services/api/cards.service';\n\n/**\n * @description\n * Componente para formulario para editar cartas del catalogo\n */\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n  /**\n   * Fromulario para editar carta del catalogo\n   */\n  cardForm!: FormGroup;\n  /**\n   * Variable para mensaje de resultado de submit\n   */\n  submitText: string = '';\n  /**\n   * Variable para item de carta selecionada\n   */\n  selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Contructor con dependencias a la capa service\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de manejo de cartas\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardsService: CardsService\n  ){}\n\n  /**\n   * Iniciacion de Formulario de editar cartas\n   * Iniciacion de valores de carta selecionada\n   */\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  /**\n   * Accion de submit de formulario para editar cartas\n   */\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    this.cardsService.createOrUpdateCardItem(this.selectedCard,\n      result => {\n        if(result){\n          alert(this.submitText + ' con éxito');\n        }else{\n          alert(this.submitText + ' con error');\n        }\n      }\n    )\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de administracion de cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardsServcie: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardsServcie\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para redireccionar a pantalla de detalle de carta\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Iniciacion de listado de cartas del catalogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion para seleccionar carta en la pantalla\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas del catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CommonModule } from '@angular/common';\nimport { CardsService } from '../core/services/api/cards.service';\n\n/**\n * @description\n * Componente de pantalla de administracion de cartas del catalogo\n */\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n  /**\n   * Listado de cartas del catalogo\n   */\n  cardList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a la capa service\n   * @param authService \n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de cartas del catalogo\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardsServcie: CardsService\n  ){}\n\n  /**\n   * Iniciacion de listado de cartas del catalogo\n   */\n  ngOnInit(): void {\n    this.cardsServcie.getAllCards().subscribe(\n      response => {\n        this.cardList = response;\n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n      }\n    );\n  }\n\n  /**\n   * Accion para seleccionar carta en la pantalla\n   * @param card \n   */\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  /**\n   * Funcion para redireccionar a pantalla de detalle de carta\n   */\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar catalogo de cartas.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthService, cardService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Accion para agregar una carta seleccionada a al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSe obtiene parametros de url:\n -categoria = tipo de carta\n -search = nombre de carta\nSe obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas a mostrar en el catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardsService } from '../core/services/api/cards.service';\n\n/**\n * @description\n * Componente para mostrar catalogo de cartas.\n */\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n  /**\n   * Listado de cartas a mostrar en el catalogo\n   */\n  carditemList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param route Manejo de redirecciones\n   * @param cardItemService Manejo de catalogo de cartas\n   * @param authService Manejo de sesion\n   * \n   */\n  constructor(\n    private route: ActivatedRoute, \n    private authService: AuthService,\n    private cardService: CardsService\n  ) {}\n\n  /**\n   * Iniciacion de componente.\n   * Se obtiene parametros de url:\n   *  -categoria = tipo de carta\n   *  -search = nombre de carta\n   * Se obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n\n      if (categoria !== '' || search !== '') {\n        \n        this.cardService.getCardListWithFilters(categoria,search,\n          result => {\n            this.carditemList = result\n          }\n        );\n\n      }else{\n\n        this.cardService.getAllCards().subscribe(\n          response => {\n            this.carditemList = response;\n          },\n          error => {\n            console.error('Error a invocar cards : ' + error );\n          }\n        );\n\n      }\n    });\n  }\n\n  /**\n   * Accion para agregar una carta seleccionada a al carrito de compras\n   * @param cardId Identificador de carta\n   * @param cardName Nombre de carta\n   */\n  addItem(cardId: number, cardName: string){\n    this.authService.addItemToShoppingCart(\n      cardId,\n      result => {\n        if(result){\n          alert('Se ha agregado '+cardName+' al carrito');\n        }else{\n          alert('No hay suficiente stock para '+cardName);\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardsService.html":{"url":"injectables/CardsService.html","title":"injectable - CardsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/cards.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Clase con Funciones de API de recuperacion de contrasena\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                editCardsJson\n                            \n                            \n                                getAllCards\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardListWithFiltersFetch\n                            \n                            \n                                modifyCardItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/cards.service.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a libreria HTTP\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Libreria HTTP\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Funcion para crear cartas en el catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de nueva Carta\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion para retornar booleano con resultado de la ejecucion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCardsJson\n                        \n                    \n                \n            \n            \n                \neditCardsJson(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo POST de API de catalogo de cartas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado modificado de cartas\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Retorna Observable de llamado Post de API\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCards\n                        \n                    \n                \n            \n            \n                \ngetAllCards()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo GET de API de catalogo de cartas\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con listado de Items de cartas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number, callback: (result: CardItem) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Funcion para Obetenr carta de catalogo segun ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de carta\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion para retornar Objeto de Carta encontrada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string, callback: (result: CardItem[]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas filtratadas respondeiendo el resultado en una funcion callback\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filtro para categoria de cartas\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filtro para nombre de cartas\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    funcion que restorna listado de cartas filtradas\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFiltersFetch\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFiltersFetch(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas filtratadas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filtro para categoria de cartas\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    filtro para nombre de cartas\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con listado de cartas filtradas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyCardItem\n                        \n                    \n                \n            \n            \n                \nmodifyCardItem(card: CardItem, cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Funcion con logica para agregar o modificar una carta en catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta modificada o nueva\n\n                                            \n                                        \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de catalogo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                booleano de resultado de la funcion\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 832767d2-6c98-4c19-8749-373d73475912' \n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/cards.service.ts:18\n                        \n                    \n\n            \n                \n                    Headers para invocacion de API POST\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/cards.json?alt=media&token=3ee7efb3-ba94-4a4b-93b4-09b9b7597d35'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/cards.service.ts:28\n                        \n                    \n\n            \n                \n                    Enpoint de API de Catalogo de Cartas\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CardItem } from '../../models/carditem.model';\nimport { Observable, map } from 'rxjs';\n\n/**\n * @description\n * Clase con Funciones de API de recuperacion de contrasena\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardsService {\n\n  /**\n   * Headers para invocacion de API POST\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 832767d2-6c98-4c19-8749-373d73475912' \n    })\n  }\n\n  /**\n   * Enpoint de API de Catalogo de Cartas\n   */\n  private url = 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/cards.json?alt=media&token=3ee7efb3-ba94-4a4b-93b4-09b9b7597d35';\n\n  /**\n   * Constructor con dependencias a libreria HTTP\n   * @param http Libreria HTTP\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funcion de Metodo GET de API de catalogo de cartas\n   * @returns Observable con listado de Items de cartas\n   */\n  getAllCards(): Observable{\n    return this.http.get(this.url);\n  }\n  \n  /**\n   * Funcion para crear cartas en el catalogo\n   * @param card Objeto de nueva Carta\n   * @param callback Funcion para retornar booleano con resultado de la ejecucion\n   */\n  createOrUpdateCardItem(card: CardItem,callback: (result: boolean) => void){\n    this.getAllCards().subscribe(\n      response => {\n        let cardList = this.modifyCardItem(card,response);\n        if(cardList.length == 0){\n          callback(false)\n          return\n        }\n        return this.editCardsJson(cardList).subscribe(\n          response => {\n            callback(true)\n          },\n          error => {\n            callback(false)\n          }\n        )     \n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n        callback(false)\n      }\n    );\n  }\n  \n  /**\n   * Funcion con logica para agregar o modificar una carta en catalogo\n   * @param card Carta modificada o nueva\n   * @param cardList Listado de catalogo\n   * @returns booleano de resultado de la funcion\n   */\n  modifyCardItem(card: CardItem, cardList: CardItem[]): CardItem[]{\n    if(card.Id === undefined || card.Id === 0){\n        const newId = cardList.reduce((maxId, card) => {\n            return Math.max(maxId, card.Id);\n        }, 0) + 1;\n        card.Id = newId;\n        cardList.push(card);\n        return cardList;\n    }else{\n        const index = cardList.findIndex(cardItem => cardItem.Id === card.Id);\n        if(index !== -1){\n            cardList[index] = card;\n            return cardList;\n        }\n    }\n    return [];\n  }\n\n  /**\n   * Funcion de Metodo POST de API de catalogo de cartas\n   * @param cardList Listado modificado de cartas \n   * @returns Retorna Observable de llamado Post de API\n   */\n  editCardsJson(cardList: CardItem[]): Observable{\n    return this.http.post(this.url,cardList,this.httpOptions);\n  }\n  \n  /**\n   * Funcion para Obetenr carta de catalogo segun ID\n   * @param cardId Id de carta\n   * @param callback Funcion para retornar Objeto de Carta encontrada\n   */\n  getCard(cardId: number, callback: (result: CardItem) => void){\n    this.getAllCards().subscribe(\n      response => {\n        let resultCard:CardItem = response.find(card => card.Id === cardId ) || {} as CardItem;\n        callback(resultCard);\n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n        callback({} as CardItem);\n      }\n    );\n  }\n\n  /**\n   * Funcion para obtener listado de cartas filtratadas\n   * @param category filtro para categoria de cartas\n   * @param search filtro para nombre de cartas\n   * @returns Observable con listado de cartas filtradas\n   */\n  getCardListWithFiltersFetch(category: string, search: string): Observable {\n    return this.http.get(this.url).pipe(\n      map(data => data.filter(cardItem => {\n\n        if(category !== ''){\n          return cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n        }\n        \n        if(search !== ''){\n          return cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n        }\n        return false;\n\n      })\n    ));\n  }\n\n  /**\n   * Funcion para obtener listado de cartas filtratadas respondeiendo el resultado en una funcion callback\n   * @param category filtro para categoria de cartas\n   * @param search filtro para nombre de cartas\n   * @param callback funcion que restorna listado de cartas filtradas\n   */\n  getCardListWithFilters(category: string, search: string, callback: (result: CardItem[]) => void) {\n    this.getCardListWithFiltersFetch( category, search ).subscribe(\n      response => {\n        callback(response);\n      }\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de ingreso a la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:59\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * @description\n * Componente de formulario de ingreso a la aplicacion\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    this.authService.login(\n      this.loginForm.get('username')?.value,\n      this.loginForm.get('password')?.value,\n      result => {\n        if( result ){\n          alert('Se ha logueado');\n          this.router.navigate(['/']);\n        }else{\n          alert('Usuario o Contraseña incorretos');\n        }\n      }\n    )\n    \n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                    Recuperar Contraseña\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                    Recuperar Contraseña                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar detalle de un carrito de compras selecionado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con iniciacion de objeto de carrito de compras\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:23\n                            \n                        \n                \n                    \n                        Valor de entrada del carrito selecionado\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:27\n                            \n                        \n                \n                    \n                        Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion para calcular precio total de la compra\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Precio total del carrito de compras\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Precio total de compra del carro\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n/**\n * @description\n * Componente para mostrar detalle de un carrito de compras selecionado\n */\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  /**\n   * Valor de entrada del carrito selecionado\n   */\n  @Input() currentShoppingCart: ShoppingCart;\n  /**\n   * Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n   */\n  @Input() showImage: boolean = false;\n  /**\n   * Precio total de compra del carro\n   */\n  total: number = 0;\n\n  /**\n   * Constructor con iniciacion de objeto de carrito de compras\n   */\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  /**\n   * Funcion para calcular precio total de la compra\n   * @param cardList Listado de cartas del carrito selecionado\n   * @returns Precio total del carrito de compras\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar los carritos de compra realizados por el usuario logueado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, shoppingCartApiService: ShoppingCartApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartApiService\n                                                  \n                                                        \n                                                                        ShoppingCartApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para sumar el total de cartas de un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas de un carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                total de cartas del carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Funcion para aclcular el total de la compra del carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Valor total de la compra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Accion que setea carrito de compras seleccionado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:36\n                        \n                    \n\n            \n                \n                    Booleano para mostrar card con informacion del carrito de compras seleccionado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:28\n                        \n                    \n\n            \n                \n                    Listado de carritos de compra realizados por el usuario activo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:32\n                        \n                    \n\n            \n                \n                    Carrito de compras seleccionado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { ShoppingCartApiService } from '../core/services/api/shopping-cart-api.service';\n\n/**\n * @description\n * Componente para listar los carritos de compra realizados por el usuario logueado\n */\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n  /**\n   * Listado de carritos de compra realizados por el usuario activo\n   */\n  orderList: ShoppingCart[] = [];\n  /**\n   * Carrito de compras seleccionado\n   */\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Booleano para mostrar card con informacion del carrito de compras seleccionado\n   */\n  isSelected: boolean = false;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param shoppingCartService Manejo de carrito de compras \n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private authService: AuthService,\n    private shoppingCartApiService: ShoppingCartApiService\n  ){}\n\n  /**\n   * Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n   */\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    \n    this.shoppingCartApiService.getAllShopppingCartsByUser(\n      userId,\n      result => {\n        this.orderList = result\n      }\n    );\n    \n  }\n\n  /**\n   * Accion que setea carrito de compras seleccionado\n   * @param selected Carrito de compras selecionado\n   */\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  /**\n   * Funcion para aclcular el total de la compra del carrito de compras\n   * @param cardList Listado de cartas del carrito de compras\n   * @returns Valor total de la compra\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  /**\n   * Funcion para sumar el total de cartas de un carrito de compras\n   * @param cardList Listado de cartas de un carrito de compras\n   * @returns total de cartas del carrito de compras\n   */\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordRecoveryComponent.html":{"url":"components/PasswordRecoveryComponent.html","title":"component - PasswordRecoveryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordRecoveryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-recovery/password-recovery.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para iniciar recuperacion de contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-recovery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-recovery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-recovery.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                recoverPassForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userServie: UserService, userApiService: UserApiService, recoveryService: RecoveryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-recovery/password-recovery.component.ts:28\n                            \n                        \n\n                \n                    \n                            Contructor con dependencia a funciones de manejo de ususario\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userServie\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de informacion de ususario\n\n                                                        \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                        UserApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        recoveryService\n                                                  \n                                                        \n                                                                        RecoveryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de recuperacion de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario de recuperar contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        recoverPassForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-recovery/password-recovery.component.ts:28\n                        \n                    \n\n            \n                \n                    Fromulario para recuperar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-recovery/password-recovery.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\nimport { UserApiService } from '../core/services/api/user-api.service';\nimport { RecoveryService } from '../core/services/api/recovery.service';\n\n/**\n * @description\n * Componente para iniciar recuperacion de contrasena\n */\n@Component({\n  selector: 'app-password-recovery',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-recovery.component.html',\n  styleUrl: './password-recovery.component.css'\n})\nexport class PasswordRecoveryComponent {\n  /**\n   * Fromulario para recuperar contrasena\n   */\n  recoverPassForm!: FormGroup;\n\n  /**\n   * Contructor con dependencia a funciones de manejo de ususario\n   * @param router Manejo de redirecciones\n   * @param userServie Funciones de informacion de ususario\n   */\n  constructor(\n    private router: Router, \n    private userServie: UserService,\n    private userApiService: UserApiService,\n    private recoveryService: RecoveryService\n  ){}\n\n  /**\n   * Iniciacion de formulario de recuperacion de contrasena\n   */\n  ngOnInit(): void {\n    this.recoverPassForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get email(){\n    return this.recoverPassForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario de recuperar contrasena\n   */\n  onSubmit() {\n    alert('Se ha enviado Email de recuperacion');\n\n    this.userApiService.checkEmailApi(\n      this.email?.value,\n      result => {\n        if(result){\n          this.recoveryService.createRecovery(\n            this.email?.value,\n            result => {\n              this.router.navigate(['/actualizar-contrasena/'+result]);\n            }\n          );\n          \n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Email\n            \n              \n            \n                Email es obligatorio.\n                Email no tiene el formato correcto.\n              \n            \n          \n\n          \n            Recuperar Contrasena\n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Email                                                      Email es obligatorio.                Email no tiene el formato correcto.                                                          Recuperar Contrasena            Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordRecoveryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-reset/password-reset.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para recuperar contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-reset\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-reset.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-reset.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localToken\n                            \n                            \n                                updatePasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, recoveryService: RecoveryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-reset/password-reset.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de parametros de entrada\n\n                                                        \n                                                \n                                                \n                                                        recoveryService\n                                                  \n                                                        \n                                                                        RecoveryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-reset/password-reset.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Iniciacion y validacion de token\nIniciacion de formaulario de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-reset/password-reset.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        localToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/password-reset/password-reset.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable para manejar token\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-reset/password-reset.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para actualizar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-reset/password-reset.component.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-reset/password-reset.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { RecoveryService } from '../core/services/api/recovery.service';\n\n/**\n * @description\n * Componente para formulario para recuperar contrasena\n */\n@Component({\n  selector: 'app-password-reset',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n  /**\n   * Formulario para actualizar contrasena\n   */\n  updatePasswordForm!: FormGroup;\n  /**\n   * Variable para manejar token\n   */\n  localToken: string = '';\n\n  /**\n   * Constructor con dependencia a capa service\n   * @param userService Manejo de Usuarios\n   * @param router Manejo de redirecciones\n   * @param route Manejo de parametros de entrada\n   */\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private recoveryService: RecoveryService\n  ){}\n\n  /**\n   * Iniciacion y validacion de token\n   * Iniciacion de formaulario de contrasena\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const token = params.get('recovery') || '';\n      this.recoveryService.checkRecovery(\n        token,\n        result => {\n          if(result != ''){\n            alert(result);\n            this.router.navigate(['/']);\n          }\n        }\n      );\n      this.localToken = token;\n    });\n    this.updatePasswordForm = new FormGroup({\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get password(){\n    return this.updatePasswordForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.updatePasswordForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    this.recoveryService.updatePassword(\n      this.localToken,\n      this.password?.value,\n      result => {\n        if(result == ''){\n          alert('Se ha actualizado la Contraseña');\n          this.router.navigate(['/login']);\n        }else{\n          alert(result);\n          this.router.navigate(['/']);\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Debe tener entre 8 y 16 caracteres.\n              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n            \n            \n          \n    \n          \n            Confirmar Contraseña\n            \n              \n            \n              Confirmar Contraseña es obligatorio.\n              Debe tener entre 8 y 16 caracteres.\n              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n              Las contraseñas no coinciden.\n            \n            \n          \n          \n        \n    \n        Confirmar\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Contraseña                                                    Contraseña obligatorio.              Debe tener entre 8 y 16 caracteres.              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                                            Confirmar Contraseña                                                    Confirmar Contraseña es obligatorio.              Debe tener entre 8 y 16 caracteres.              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.              Las contraseñas no coinciden.                                                                Confirmar                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de Mock de proceso de pago\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:24\n                            \n                        \n\n                \n                    \n                            Contructor de componente con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\nTempo de espera de 4 segundos para simular proceso de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n            \n                \n                    Booleano para indicar si se ha realizado el pago\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente de pantalla de Mock de proceso de pago\n */\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  /**\n   * Booleano para indicar si se ha realizado el pago\n   */\n  isPaymentSuccess: boolean = false;\n\n  /**\n   * Contructor de componente con dependencias a funciones de sesion\n   * @param authService Manejo de informacion de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\n   * Tempo de espera de 4 segundos para simular proceso de pago.\n   */\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  /**\n   * Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n   */\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recovery.html":{"url":"interfaces/Recovery.html","title":"interface - Recovery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recovery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/Recovery.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Estructura con valores para la validacion de recuperacion de contrasena\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de intento de recuperacion\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token de intento de recuperacion de contrasena\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Recovery{\n    /**\n     * Identificador de usuario\n     */\n    UserId: number;\n    /**\n     * Token de intento de recuperacion de contrasena\n     */\n    token: string;\n    /**\n     * Fecha de intento de recuperacion\n     */\n    date: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RecoveryService.html":{"url":"injectables/RecoveryService.html","title":"injectable - RecoveryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RecoveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/recovery.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Clase con Funciones de API de recuperacion de contrasena\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkRecovery\n                            \n                            \n                                createRecovery\n                            \n                            \n                                editRecoveriesJson\n                            \n                            \n                                findRecovery\n                            \n                            \n                                generateRandomToken\n                            \n                            \n                                getRecoveries\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userApiService: UserApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/recovery.service.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor para recuperacion de contrasena\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Libreria HTTP\n\n                                                        \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                        UserApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Referencia Conservicio de Usuarios\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkRecovery\n                        \n                    \n                \n            \n            \n                \ncheckRecovery(token: string, callback: (result: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Funcion para checkear validez de token de recuperacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    funcion para retornar mensaje de error\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRecovery\n                        \n                    \n                \n            \n            \n                \ncreateRecovery(email: string, callback: (result: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion que genera y almacena un token para recuperacion de contrasena\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email de cliente\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna Token generado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRecoveriesJson\n                        \n                    \n                \n            \n            \n                \neditRecoveriesJson(recoveryList: Recovery[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo POST de API de recuperacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                recoveryList\n                                            \n                                                            Recovery[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Lista de Recovery con elementos modificados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Retorna Observable de llamado Post de API\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findRecovery\n                        \n                    \n                \n            \n            \n                \nfindRecovery(token: string, callback: (result: Recovery) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Funcion para encontrar item de recuperacion segun un token dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna Item de recuperacion de clave\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomToken\n                        \n                    \n                \n            \n            \n                \ngenerateRandomToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Funcion para generar token aleatorio\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRecoveries\n                        \n                    \n                \n            \n            \n                \ngetRecoveries()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo GET de API de recuperacion\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con listado de Items de recuperacion\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(token: string, password: string, callback: (result: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/recovery.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar contrasena dado un token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    token de recuperacion\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    nueva contrasena\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    funcion para retiornar mensaje de error\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 8c91f5c5-305e-4ac9-86b7-bd01e3634afe' \n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/recovery.service.ts:21\n                        \n                    \n\n            \n                \n                    Headers para invocacion de API POST\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/recovery.json?alt=media&token=3fa8f2c2-2089-4013-bfaf-237a30543693'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/recovery.service.ts:31\n                        \n                    \n\n            \n                \n                    Enpoint de API de recuperacion\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Recovery } from '../../models/Recovery.model';\nimport { UserApiService } from './user-api.service';\nimport { User } from '../../models/user.model';\nimport * as CryptoJS from 'crypto-js';\n\n/**\n * @description \n * Clase con Funciones de API de recuperacion de contrasena\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecoveryService {\n\n  /**\n   * Headers para invocacion de API POST\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 8c91f5c5-305e-4ac9-86b7-bd01e3634afe' \n    })\n  }\n\n  /**\n   * Enpoint de API de recuperacion\n   */\n  private url = 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/recovery.json?alt=media&token=3fa8f2c2-2089-4013-bfaf-237a30543693';\n\n  /**\n   * Constructor para recuperacion de contrasena\n   * @param http Libreria HTTP\n   * @param userApiService Referencia Conservicio de Usuarios\n   */\n  constructor(\n    private http: HttpClient,\n    private userApiService: UserApiService\n  ) { }\n\n  /**\n   * Funcion de Metodo GET de API de recuperacion\n   * @returns Observable con listado de Items de recuperacion\n   */\n  getRecoveries(): Observable{\n    return this.http.get(this.url);\n  }\n\n  /**\n   * Funcion de Metodo POST de API de recuperacion\n   * @param recoveryList Lista de Recovery con elementos modificados\n   * @returns Retorna Observable de llamado Post de API\n   */\n  editRecoveriesJson(recoveryList: Recovery[]): Observable{\n    return this.http.post(this.url,recoveryList,this.httpOptions);\n  }\n\n  /**\n   * Funcion que genera y almacena un token para recuperacion de contrasena\n   * @param email Email de cliente \n   * @param callback Funcion que retorna Token generado\n   */\n  createRecovery(email:string, callback: (result: string) => void){\n\n    this.getRecoveries().subscribe(\n      response => {\n        this.userApiService.getUsers().subscribe(\n          userResponse =>{\n\n            let findUser = userResponse.find(user => user.Email === email);\n            if(findUser == undefined){\n              callback('error');\n              return;\n            }\n\n            let recovery = {} as Recovery;\n            recovery.UserId = findUser.id;\n            recovery.date = new Date();\n            recovery.token = this.generateRandomToken();\n\n            response.push(recovery);\n            this.editRecoveriesJson(response).subscribe(\n              response =>{\n                callback(recovery.token);\n              },\n              error => {\n                callback('error');\n              }\n            );\n\n          },\n          error => {\n            callback('error');\n              return;\n          }\n        );\n      },\n      error => {\n        callback('');\n        return;\n      }\n    );\n\n  }\n\n  /**\n     * Funcion para generar token aleatorio\n     * @returns Token\n     */\n  generateRandomToken(): string {\n    const randomBytes = CryptoJS.lib.WordArray.random(16);\n    return randomBytes.toString(CryptoJS.enc.Hex);\n  }\n\n  /**\n   * Funcion para encontrar item de recuperacion segun un token dado\n   * @param token Token de recuperacion\n   * @param callback Funcion que retorna Item de recuperacion de clave\n   */\n  findRecovery(token: string, callback: (result: Recovery) => void) {\n\n    this.getRecoveries().subscribe(\n      response => {\n        callback(response.find(recovery => recovery.token === token) || {} as Recovery);\n      },\n      error => {\n        callback({} as Recovery);\n        return;\n      }\n    );\n    \n  }\n\n  /**\n   * Funcion para checkear validez de token de recuperacion\n   * @param token Token de recuperacion\n   * @param callback funcion para retornar mensaje de error\n   */\n  checkRecovery(token: string, callback: (result: string) => void) {\n\n    this.findRecovery(token, recovery => {\n      let currentDate = new Date();\n\n      if(recovery.UserId == undefined){\n        callback('error de recuperacion');\n        return;\n      }\n\n      const recoverytimestamp = new Date(recovery.date).getTime();\n      const currenttimestamp = currentDate.getTime();\n      const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n      const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n      if(differenceInHours > 1){\n        callback('token ha expirado');\n          return;\n      }\n\n      callback('');\n      return;\n    });\n\n  }\n\n  /**\n   * Funcion para actualizar contrasena dado un token \n   * @param token token de recuperacion\n   * @param password nueva contrasena\n   * @param callback funcion para retiornar mensaje de error\n   */\n  updatePassword(token: string, password: string, callback: (result: string) => void) {\n\n    this.findRecovery(token, recovery => {\n      let currentDate = new Date();\n\n      if(recovery.UserId == undefined){\n        callback('error de recuperacion');\n        return;\n      }\n\n      const recoverytimestamp = new Date(recovery.date).getTime();\n      const currenttimestamp = currentDate.getTime();\n      const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n      const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n      if(differenceInHours > 1){\n        callback('token ha expirado');\n        return;\n      }\n\n      this.userApiService.getUsers().subscribe(\n        response => {\n          let user: User = response.find(user => user.id === recovery.UserId ) || {} as User;\n\n          if(user.id == undefined){\n            callback('error de recuperacion');\n            return;\n          }\n\n          user.Password = password;\n    \n          this.userApiService.updateUser(user,\n            result => {\n              if (!result) {\n                callback('error al actualizar usuario');\n                return;\n              }\n              callback('');\n              return;\n            }\n          );\n    \n        },\n        error => {\n          callback('error de sistema, intentelo mas tarde');\n          return;\n        }\n      );\n\n    });\n    \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, userApiService: UserApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userApiService\n                                                  \n                                                        \n                                                                        UserApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserApiService } from '../core/services/api/user-api.service';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private userApiService: UserApiService\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      this.userApiService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value,\n        result => {\n          if(result){\n            alert('Se ha registrado con exito');\n            this.authService.login(\n              this.registrationForm.get('username')?.value,\n              this.registrationForm.get('password')?.value,\n              result => {\n                if (result) {\n                  this.router.navigate(['/']);\n                } else {\n                  alert('Error en el ingreso');\n                }\n              }\n            );\n            \n          }else{\n            alert('El nombre de usuario ya esta en uso');\n          }\n        }\n      );\n      \n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartApiService.html":{"url":"injectables/ShoppingCartApiService.html","title":"injectable - ShoppingCartApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/shopping-cart-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Clase con Funciones de API de manejo de carrito de compras\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardToShoppingCart\n                            \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                editShoppingCartJson\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                getShoppingCart\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cardsService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/shopping-cart-api.service.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a librerias de Catalogo de Cartas y HTTP\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Libreria HTTP\n\n                                                        \n                                                \n                                                \n                                                        cardsService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dependencia a API de Catalogo de Cartas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddCardToShoppingCart(shoppingCartIndex: number, shoppingCartList: ShoppingCart[], selectedShoppingCart: ShoppingCart, cardId: number, selectedCardItem: CardItem, callback: (result: [ShoppingCart, boolean]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Funcion auxiliar para anadir cartas al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                shoppingCartIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Index de carrito de compras\n\n                                            \n                                        \n                                        \n                                                shoppingCartList\n                                            \n                                                            ShoppingCart[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de carrito de compras\n\n                                            \n                                        \n                                        \n                                                selectedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de carta para agregar\n\n                                            \n                                        \n                                        \n                                                selectedCardItem\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta para agregar\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna Tupla con carrito de compras actualizado y booleano que indica si se ejecuto la accion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number, callback: (result: [ShoppingCart, boolean]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:138\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de carta\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de carrito e compras\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna carrito de compras actualizado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number, callback: (result: ShoppingCart) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para crear carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de usuario\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna carrito de compras creado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editShoppingCartJson\n                        \n                    \n                \n            \n            \n                \neditShoppingCartJson(shoppingCartList: ShoppingCart[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo POST de API de carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                shoppingCartList\n                                            \n                                                            ShoppingCart[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado modificado de carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Retorna Observable de llamado Post de API\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number, callback: (result: ShoppingCart[]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:195\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna todos los carritos de compra asociado a un usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id de usuario\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna listado de carrito de compras resultante\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo GET de API de carrito de compras\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con listado de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/shopping-cart-api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    carrito de compras modificado\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna booleano que indica si se realizo la accion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 4100aa98-8f1f-4d82-a10b-851addba1f2c' \n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/shopping-cart-api.service.ts:21\n                        \n                    \n\n            \n                \n                    Headers para invocacion de API POST\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/shopcart.json?alt=media&token=47fa4eaf-983c-4d26-9703-7869d0269d9c'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/shopping-cart-api.service.ts:31\n                        \n                    \n\n            \n                \n                    Enpoint de API de Informacion de Carrito de Compras\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../../models/shopping-cart.model';\nimport { Observable } from 'rxjs';\nimport { CartStatus } from '../../enum/cart-status.enum';\nimport { CardsService } from './cards.service';\nimport { CardItem } from '../../models/carditem.model';\n\n/**\n * @description\n * Clase con Funciones de API de manejo de carrito de compras\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartApiService {\n\n  /**\n   * Headers para invocacion de API POST\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 4100aa98-8f1f-4d82-a10b-851addba1f2c' \n    })\n  }\n\n  /**\n   * Enpoint de API de Informacion de Carrito de Compras\n   */\n  private url = 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/shopcart.json?alt=media&token=47fa4eaf-983c-4d26-9703-7869d0269d9c';\n\n  /**\n   * Constructor con dependencia a librerias de Catalogo de Cartas y HTTP\n   * @param http Libreria HTTP\n   * @param cardsService Dependencia a API de Catalogo de Cartas\n   */\n  constructor(\n    private http: HttpClient,\n    private cardsService: CardsService\n  ) { }\n\n  /**\n   * Funcion de Metodo GET de API de carrito de compras\n   * @returns Observable con listado de carrito de compras\n   */\n  getShoppingCart(): Observable{\n    return this.http.get(this.url);\n  }\n\n  /**\n   * Funcion de Metodo POST de API de carrito de compras\n   * @param shoppingCartList Listado modificado de carrito de compras\n   * @returns Retorna Observable de llamado Post de API\n   */\n  editShoppingCartJson(shoppingCartList: ShoppingCart[]): Observable{\n    return this.http.post(this.url,shoppingCartList,this.httpOptions);\n  }\n\n  /**\n   * Funcion para crear carrito de compras\n   * @param userId Id de usuario\n   * @param callback Funcion que retorna carrito de compras creado\n   */\n  createShoppingcar(userId: number, callback: (result: ShoppingCart) => void) {\n    let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n    this.getShoppingCart().subscribe(\n      response => {\n\n        const newId = response.reduce((maxId, user) => {\n          return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        response.push(newShoppingCart);\n\n        this.editShoppingCartJson(response).subscribe(\n          response =>{\n            callback(newShoppingCart)\n          },\n          error => {\n            callback({} as ShoppingCart)\n          }\n        );\n\n      },\n      error => {\n        callback({} as ShoppingCart)\n      }\n    );\n    \n  }\n\n  /**\n   * Funcion para actualizar un carrito de compras\n   * @param updatedShoppingCart carrito de compras modificado\n   * @param callback Funcion que retorna booleano que indica si se realizo la accion\n   */\n  updateShoppingCart(updatedShoppingCart: ShoppingCart, callback: (result: boolean) => void){\n\n    this.getShoppingCart().subscribe(\n      response => {\n\n        const index = response.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            response[index] = updatedShoppingCart;\n            this.editShoppingCartJson(response).subscribe(\n              response =>{\n                callback(true)\n              },\n              error => {\n                callback(false)\n              }\n            )\n        }\n        callback(false)\n        return;\n\n      },\n      error => {\n        callback(false)\n      }\n    );\n\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras\n   * @param userId Id de usuario\n   * @param cardId Id de carta\n   * @param shoppingCartId Id de carrito e compras\n   * @param callback Funcion que retorna carrito de compras actualizado\n   */\n  addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number, callback: (result: [ShoppingCart,boolean]) => void) {\n    \n    let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n    this.getShoppingCart().subscribe(\n      response => {\n        const index = response.findIndex(shoppingCart => \n          shoppingCart.id === shoppingCartId &&\n          shoppingCart.Status === CartStatus.Abierto);\n\n\n        this.cardsService.getCard(cardId, result => {\n          const selectedCardItem = result;\n          \n          if(index !== -1){\n              selectedShoppingCart = response[index];\n              this.addCardToShoppingCart(\n                index, \n                response,\n                selectedShoppingCart, \n                cardId, \n                selectedCardItem, \n                ([ShoppingCart,hasStock]) => {\n                  callback([ShoppingCart,hasStock]);\n                }\n              )\n          }else{\n              this.createShoppingcar(userId, \n                shoppingCartResult => {\n                  this.addCardToShoppingCart(\n                    index, \n                    response,\n                    shoppingCartResult, \n                    cardId, \n                    selectedCardItem, \n                    ([ShoppingCart,hasStock]) => {\n                      callback([ShoppingCart,hasStock]);\n                    }\n                  )\n                }\n              );\n          }\n  \n        });\n      },\n      error => {\n        callback([selectedShoppingCart,false]);\n      }\n    );\n    \n  }\n\n  /**\n   * Funcion que retorna todos los carritos de compra asociado a un usuario\n   * @param userId Id de usuario\n   * @param callback Funcion que retorna listado de carrito de compras resultante\n   */\n  getAllShopppingCartsByUser(userId: number, callback: (result: ShoppingCart[]) => void) {\n\n    this.getShoppingCart().subscribe(\n      response => {\n        callback(response.filter(shoppinCart => shoppinCart.UserId === userId) || [] as ShoppingCart[])\n      },\n      error => {\n        callback([]);\n      }\n    );\n\n  }\n\n  /**\n   * Funcion auxiliar para anadir cartas al carrito de compras\n   * @param shoppingCartIndex Index de carrito de compras\n   * @param shoppingCartList Listado de carrito de compras\n   * @param selectedShoppingCart Carrito de compras\n   * @param cardId Id de carta para agregar\n   * @param selectedCardItem Carta para agregar\n   * @param callback Funcion que retorna Tupla con carrito de compras actualizado y booleano que indica si se ejecuto la accion\n   */\n  addCardToShoppingCart(shoppingCartIndex: number, shoppingCartList: ShoppingCart[],selectedShoppingCart: ShoppingCart, cardId: number, selectedCardItem: CardItem, callback: (result: [ShoppingCart,boolean]) => void){\n\n    let cardIndex = -1;\n    let hasStock = false;\n              \n    if(selectedShoppingCart.CardList !== undefined){\n      cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n    }else{\n      selectedShoppingCart.CardList = [];\n    }\n                  \n    if(cardIndex !== -1){\n      hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n      if(hasStock){\n        selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n        if(shoppingCartIndex == -1){\n          shoppingCartList.push(selectedShoppingCart);\n        }else{\n          shoppingCartList[shoppingCartIndex] = selectedShoppingCart;\n        }\n        this.editShoppingCartJson(shoppingCartList).subscribe();\n      }\n    }else{\n      hasStock = selectedCardItem.Quantity > 1;\n      if(hasStock){\n        let cardCopy = {...selectedCardItem};\n        cardCopy.Quantity = 1;\n        selectedShoppingCart.CardList.push(cardCopy);\n        if(shoppingCartIndex == -1){\n          shoppingCartList.push(selectedShoppingCart);\n        }else{\n          shoppingCartList[shoppingCartIndex] = selectedShoppingCart;\n        }\n        this.editShoppingCartJson(shoppingCartList).subscribe();\n      }\n    }\n\n    callback([selectedShoppingCart,hasStock]);\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar contenido de carrito de compras\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor dcon dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para simular pago, redirige a mock pasarela de pago\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras actual del cliente logueado.\nse calcula el precio del total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:24\n                        \n                    \n\n            \n                \n                    Varieble que contiene el carrito de compras actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                        \n                    \n\n            \n                \n                    Booleano que indica si el carrito tine items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:28\n                        \n                    \n\n            \n                \n                    Valor de precio total del carro de compras\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para mostrar contenido de carrito de compras\n */\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n  /**\n   * Varieble que contiene el carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Valor de precio total del carro de compras\n   */\n  total: number = 0;\n  /**\n   * Booleano que indica si el carrito tine items\n   */\n  hasItems: boolean = false;\n\n  /**\n   * Constructor dcon dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras actual del cliente logueado.\n   * se calcula el precio del total del carrito\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  /**\n   * Funcion para simular pago, redirige a mock pasarela de pago\n   */\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardsService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardsService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number, callback: (result: [ShoppingCart, boolean]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                tupla de item de carrito actualizado y booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardsService } from './api/cards.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(\n        private cardsService: CardsService\n    ){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number,callback: (result: [ShoppingCart,boolean]) => void) {\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n        this.cardsService.getCard(cardId, result => {\n            const selectedCardItem = result;\n            let hasStock = false;\n            \n            if(index !== -1){\n                selectedShoppingCart = this.shoppingCartList[index];\n            }else{\n                selectedShoppingCart = this.createShoppingcar(userId);\n            }\n\n            let cardIndex = -1;\n                \n            if(selectedShoppingCart.CardList !== undefined){\n                cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n            }else{\n                selectedShoppingCart.CardList = [];\n            }\n                \n            \n            if(cardIndex !== -1){\n                hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n                if(hasStock){\n                    selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n                }\n                \n            }else{\n                hasStock = selectedCardItem.Quantity > 1;\n                if(hasStock){\n                    let cardCopy = {...selectedCardItem};\n                    cardCopy.Quantity = 1;\n                    selectedShoppingCart.CardList.push(cardCopy);\n                }\n            }\n            \n            callback([selectedShoppingCart,hasStock]);\n\n        });\n        \n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserApiService.html":{"url":"injectables/UserApiService.html","title":"injectable - UserApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/user-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Clase con Funciones de API de manipulacion de usuarios\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkEmailApi\n                            \n                            \n                                createUser\n                            \n                            \n                                editUsersJson\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                getUsers\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/user-api.service.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a libreria HTTP\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Libreria HTTP\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string, userList: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Funcion para buscar email en el listado de usuarios\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email para buscar\n\n                                            \n                                        \n                                        \n                                                userList\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de Usuarios\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se encontro el email\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmailApi\n                        \n                    \n                \n            \n            \n                \ncheckEmailApi(email: string, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Funcion que busca email en API de Usuarios\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Email a buscar\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna booleano que indica si se encontro el email\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion para crear Usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de Usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion para retornar resultado booleano\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUsersJson\n                        \n                    \n                \n            \n            \n                \neditUsersJson(userList: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo POST de API de Usuarios\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userList\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado modificado de usuarios\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Retorna Observable de llamado Post de API\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string, callback: (result: User) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Funcion que entrega usuario segun el nombre de usuario y contrasena\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de ususario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna objeto Ususario resultante\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Funcion de Metodo GET de API de usuarios\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con listado de usuarios\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/user-api.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar la informacion de usuario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Usuario modificado\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcion que retorna booleano indicando si se logro ejecutar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer a8db4a92-87b9-4210-86e5-4a56a84e17d5' \n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/user-api.service.ts:18\n                        \n                    \n\n            \n                \n                    Headers para invocacion de API POST\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/users.json?alt=media&token=41e3ea2d-98dd-400d-a6b2-1c4649bc7596'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/user-api.service.ts:28\n                        \n                    \n\n            \n                \n                    Enpoint de API de Informacion de usuario\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { Observable } from 'rxjs';\n\n/**\n * @description\n * Clase con Funciones de API de manipulacion de usuarios\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserApiService {\n\n  /**\n   * Headers para invocacion de API POST\n   */\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer a8db4a92-87b9-4210-86e5-4a56a84e17d5' \n    })\n  }\n\n  /**\n   * Enpoint de API de Informacion de usuario\n   */\n  private url = 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/users.json?alt=media&token=41e3ea2d-98dd-400d-a6b2-1c4649bc7596';\n\n  /**\n   * Constructor con dependencias a libreria HTTP\n   * @param http Libreria HTTP\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funcion de Metodo GET de API de usuarios\n   * @returns Observable con listado de usuarios\n   */\n  getUsers(): Observable{\n    return this.http.get(this.url);\n  }\n\n  /**\n   * Funcion para crear Usuario\n   * @param userName Nombre de Usuario\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param password contrasena\n   * @param email Correo Electronico\n   * @param callback Funcion para retornar resultado booleano\n   */\n  createUser(\n    userName: string, \n    firstName: string, \n    lastName: string, \n    password: string, \n    email: string,\n    callback: (result: boolean) => void){\n\n      this.getUsers().subscribe(\n        response => {\n          if(response.find(user => user.UserName === userName) !== undefined){\n            callback(false)\n            return\n          }\n      \n          if(this.checkEmail(email,response)){\n            callback(false)\n            return\n          }\n      \n          let newUser: User = {} as User;\n          const newId = response.reduce((maxId, user) => {\n              return Math.max(maxId, user.id);\n          }, 0) + 1;\n      \n          newUser.id = newId;\n          newUser.UserName = userName;\n          newUser.FirstName = firstName;\n          newUser.LastName = lastName;\n          newUser.Password = password;\n          newUser.Email = email;\n          newUser.Role = 'user';\n          newUser.IsActive = true;\n      \n          response.push(newUser);\n          this.editUsersJson(response).subscribe(\n            result => {\n              console.log('usuario creado')\n              callback(true)\n            },\n            error => {\n              console.error('error al crear usuarios',error)\n              callback(false)\n            }\n          )\n\n        },\n        error => {\n          console.error('error al obtener usuarios',error)\n          callback(false)\n        }\n      );\n\n  }\n\n  /**\n   * Funcion para buscar email en el listado de usuarios\n   * @param email Email para buscar\n   * @param userList Listado de Usuarios\n   * @returns booleano que indica si se encontro el email\n   */\n  checkEmail(email: string, userList: User[]): boolean{\n    return (userList.find(user => user.Email === email) !== undefined)\n  }\n\n  /**\n   * Funcion que busca email en API de Usuarios\n   * @param email Email a buscar\n   * @param callback Funcion que retorna booleano que indica si se encontro el email\n   */\n  checkEmailApi(email: string, callback: (result: boolean) => void){\n    this.getUsers().subscribe(\n      response => {\n        callback(this.checkEmail(email,response))\n      },\n      error => {\n        callback(false);\n      }\n    )\n  }\n\n  /**\n   * Funcion que entrega usuario segun el nombre de usuario y contrasena\n   * @param userName Nombre de ususario\n   * @param password Contrasena\n   * @param callback Funcion que retorna objeto Ususario resultante\n   */\n  getUserAuth(\n    userName: string, \n    password: string,\n    callback: (result: User) => void) {\n      this.getUsers().subscribe(\n        response => {\n          callback(response.find(user => user.UserName === userName && user.Password === password) || {} as User)\n        },\n        error => {\n          console.error('error al obtener usuarios',error)\n        }\n      );\n  }\n\n  /**\n   * Funcion para actualizar la informacion de usuario\n   * @param updatedUser Usuario modificado\n   * @param callback Funcion que retorna booleano indicando si se logro ejecutar \n   */\n  updateUser(updatedUser: User, callback: (result: boolean) => void) {\n    this.getUsers().subscribe(\n      response => {\n        const index = response.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n          response[index] = updatedUser;\n\n          this.editUsersJson(response).subscribe(\n            response => {\n              callback(true)\n            },\n            error => {\n              callback(false)\n            }\n          );\n          \n        }else{\n          callback(false)\n          return;\n        }\n      },\n      error => {\n        console.error('error al obtener usuarios',error)\n        callback(false)\n        return;\n      }\n    );\n  }\n\n  /**\n   * Funcion de Metodo POST de API de Usuarios\n   * @param userList Listado modificado de usuarios\n   * @returns Retorna Observable de llamado Post de API\n   */\n  editUsersJson(userList: User[]): Observable{\n    return this.http.post(this.url,userList,this.httpOptions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con formulario de edicion de usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Iniciacion de informacion de usuario.\nIniciacion de formulario de edicion de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable con informacion de usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de edicion de usuario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente con formulario de edicion de usuario\n */\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n  /**\n   * Formulario de edicion de usuario\n   */\n  updateForm!: FormGroup;\n  /**\n   * Variable con informacion de usuario\n   */\n  currentUser: User = {} as User;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de informacion de usuario.\n   * Iniciacion de formulario de edicion de usuario\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(){\n    this.authService.updateBasicInfo(\n      this.updateForm.get('firstName')?.value,\n      this.updateForm.get('lastName')?.value,\n      this.updateForm.get('email')?.value,\n      result => {\n        if(result){\n          alert('Se han actualizado los datos.');\n        }else{\n          alert('Error al actualizar los datos');\n        }\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                            \n                                userRecoveryTry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkRecovery\n                            \n                            \n                                createRecovery\n                            \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                findRecovery\n                            \n                            \n                                generateRandomToken\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Funcion para validar si email ya se encuentra en uso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email para validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si email se encuentra en uso\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRecovery\n                        \n                    \n                \n            \n            \n                \ncheckRecovery(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Funcion para checkear validez de token de recuperacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                mensaje de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRecovery\n                        \n                    \n                \n            \n            \n                \ncreateRecovery(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un registro de recuperar contrasena\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email para recuperar contrasena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Token generado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nValida si email ya se encuentra en uso.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findRecovery\n                        \n                    \n                \n            \n            \n                \nfindRecovery(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para encontrar item de recuperacion segun un token dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Recovery\n\n                        \n                            \n                                Item de recuperacion de clave\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomToken\n                        \n                    \n                \n            \n            \n                \ngenerateRandomToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Funcion para generar token aleatorio\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(token: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar contrasena dado un token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    token de recuperacion\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    nueva contrasena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                mensaje de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRecoveryTry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recovery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:45\n                        \n                    \n\n            \n                \n                    Listado de intentos de recuperacion de contrasena\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { Recovery } from '../models/Recovery.model';\nimport * as CryptoJS from 'crypto-js';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Listado de intentos de recuperacion de contrasena\n     */\n    userRecoveryTry: Recovery[] = [];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Valida si email ya se encuentra en uso.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        if(this.checkEmail(email)){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n    /**\n     * Funcion para validar si email ya se encuentra en uso\n     * @param email email para validar\n     * @returns booleano si email se encuentra en uso\n     */\n    checkEmail(email: string): boolean{\n        return (this.userList.find(user => user.Email === email) !== undefined)\n    }\n\n    /**\n     * Funcion para crear un registro de recuperar contrasena\n     * @param email email para recuperar contrasena\n     * @returns Token generado\n     */\n    createRecovery(email:string): string{\n        let findUser = this.userList.find(user => user.Email === email);\n\n        if(findUser == undefined){\n            return '';\n        }\n\n        let recovery = {} as Recovery;\n        recovery.UserId = findUser.id;\n        recovery.date = new Date();\n        recovery.token = this.generateRandomToken();\n\n        this.userRecoveryTry.push(recovery);\n\n        return recovery.token;\n    }\n\n    /**\n     * Funcion para generar token aleatorio\n     * @returns Token\n     */\n    generateRandomToken(): string {\n        const randomBytes = CryptoJS.lib.WordArray.random(16);\n        return randomBytes.toString(CryptoJS.enc.Hex);\n    }\n\n    /**\n     * Funcion para encontrar item de recuperacion segun un token dado\n     * @param token Token de recuperacion\n     * @returns Item de recuperacion de clave\n     */\n    findRecovery(token: string): Recovery{\n        return this.userRecoveryTry.find(recovery => recovery.token === token) || {} as Recovery;\n    }\n\n    /**\n     * Funcion para checkear validez de token de recuperacion\n     * @param token Token de recuperacion\n     * @returns mensaje de error\n     */\n    checkRecovery(token: string): string{\n        let recovery = this.findRecovery(token);\n        let currentDate = new Date();\n\n        if(recovery.UserId == undefined){\n            return 'error de recuperacion'\n        }\n\n        const recoverytimestamp = recovery.date.getTime();\n        const currenttimestamp = currentDate.getTime();\n        const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n        const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n        if(differenceInHours > 1){\n            return 'token ha expirado'\n        }\n\n        return '';\n    }\n\n    /**\n     * Funcion para actualizar contrasena dado un token \n     * @param token token de recuperacion\n     * @param password nueva contrasena\n     * @returns mensaje de error\n     */\n    updatePassword(token: string, password: string): string{\n        let recovery = this.findRecovery(token);\n        let currentDate = new Date();\n\n        if(recovery.UserId == undefined){\n            return 'error de recuperacion';\n        }\n\n        const recoverytimestamp = recovery.date.getTime();\n        const currenttimestamp = currentDate.getTime();\n        const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n        const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n        if(differenceInHours > 1){\n            return 'token ha expirado';\n        }\n\n        let user: User = this.userList.find(user => user.id === recovery.UserId ) || {} as User\n\n        if(user.id == undefined){\n            return 'error de recuperacion';\n        }\n\n        console.log(user.id);\n        user.Password = password;\n\n        let result = this.updateUser(user);\n\n        if (!result) {\n            return 'error al actualizar usuario';\n        }\n\n        return '';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/Recovery.model.ts\n            \n            interface\n            Recovery\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/api/address-api.service.ts\n            \n            injectable\n            AddressApiService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/services/api/cards.service.ts\n            \n            injectable\n            CardsService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/services/api/recovery.service.ts\n            \n            injectable\n            RecoveryService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/services/api/shopping-cart-api.service.ts\n            \n            injectable\n            ShoppingCartApiService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/services/api/user-api.service.ts\n            \n            injectable\n            UserApiService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/password-recovery/password-recovery.component.ts\n            \n            component\n            PasswordRecoveryComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            crypto-js : ^4.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes),provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
