var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.015,1,0.659]],["body/components/AccountManagementComponent.html",[0,0.023,1,1.108,2,0.995,3,0.338,4,0.297,5,0.802,6,0.802,7,0.802,8,0.297,9,4.586,10,4.586,11,2.187,12,1.221,13,3.216,14,3.79,15,0.995,16,4.524,17,0.879,18,4.524,19,3.307,20,0.802,21,1.562,22,1.562,23,1.436,24,1.221,25,1.08,26,0.7,27,1.08,28,1.108,29,1.108,30,1.108,31,1.108,32,1.431,33,1.08,34,3.307,35,1.08,36,3.307,37,0.182,38,0.346,39,5.116,40,0.768,41,1.531,42,1.205,43,1.283,44,1.218,45,0.791,46,4.524,47,1.479,48,2.658,49,2.092,50,2.677,51,0.519,52,0.031,53,0.579,54,0.295,55,0.519,56,3.358,57,1.479,58,4.524,59,1.656,60,3.307,61,3.565,62,1.266,63,1.656,64,2.658,65,0.519,66,0.995,67,1.479,68,0.624,69,0.57,70,0.844,71,0.471,72,0.512,73,2.455,74,4.524,75,0.791,76,2.455,77,1.205,78,2.455,79,3.358,80,1.126,81,2.455,82,3.358,83,0.868,84,0.939,85,0.338,86,0.519,87,1.187,88,1.098,89,3.358,90,3.358,91,3.79,92,4.586,93,5.474,94,2.946,95,5.474,96,4.524,97,2.658,98,0.802,99,1.08,100,1.08,101,0.802,102,1.205,103,0.802,104,1.08,105,0.68,106,0.802,107,0.68,108,0.802,109,0.68,110,1.08,111,0.68,112,0.471,113,1.08,114,0.802,115,0.68,116,0.802,117,0.68,118,0.802,119,0.68,120,0.68,121,0.802,122,0.68,123,0.802,124,0.68,125,0.802,126,0.802,127,0.68,128,0.739,129,0.802,130,0.802,131,0.802,132,0.021,133,0.021]],["title/interfaces/Address.html",[75,0.504,134,1.349]],["body/interfaces/Address.html",[3,0.429,4,0.377,8,0.377,12,1.019,15,1.162,17,0.924,37,0.232,38,0.404,52,0.031,53,0.679,54,0.409,57,1.726,62,1.477,67,2.118,72,0.598,75,0.817,85,0.429,132,0.024,133,0.024,134,1.766,135,2.506,136,3.574,137,2.55,138,3.119,139,2.186,140,2.778,141,2.506,142,2.778,143,2.086,144,2.778,145,3.904,146,2.599,147,2,148,4.087,149,3.522,150,3.103,151,4.186,152,2.373,153,1.597,154,3.103,155,3.103,156,5.281,157,1.726,158,2.186,159,5.281]],["title/components/AddressCreateComponent.html",[0,0.015,105,0.659]],["body/components/AddressCreateComponent.html",[0,0.023,1,0.66,2,0.975,3,0.328,4,0.288,5,0.778,6,0.778,7,0.778,8,0.288,20,0.778,21,1.557,22,1.557,23,0.778,24,0.778,25,1.058,26,0.686,27,1.058,28,0.66,29,0.66,30,0.66,31,0.66,32,1.409,33,1.058,35,1.058,37,0.177,38,0.339,40,0.753,41,1.513,42,0.717,43,1.246,44,1.181,45,0.94,51,0.504,52,0.031,53,0.676,54,0.289,55,0.504,65,0.686,66,1.109,70,0.793,71,0.457,72,0.369,75,0.94,77,1.109,80,0.975,83,0.843,84,0.912,85,0.328,86,0.504,98,0.778,99,1.058,100,1.058,101,0.778,102,1.19,103,0.778,104,1.058,105,1.094,106,0.778,107,0.66,108,0.778,109,0.66,110,1.058,111,0.66,112,0.457,113,1.058,114,0.778,115,0.66,116,0.778,117,0.66,118,0.778,119,0.66,120,0.66,121,0.778,122,0.66,123,0.778,124,0.66,125,0.778,126,0.778,127,0.66,128,0.717,129,0.778,130,0.778,131,0.778,132,0.02,133,0.02,145,3.521,147,1.635,148,3.521,150,3.177,160,4.502,161,4.502,162,2.73,163,3.714,164,2.693,165,3.683,166,4.433,167,4.433,168,5.038,169,3.177,170,2.604,171,4.433,172,3.259,173,3.259,174,2.89,175,3.259,176,3.259,177,3.259,178,3.259,179,3.259,180,3.259,181,3.259,182,3.259,183,2.766,184,1.915,185,2.382,186,2.382,187,2.122,188,1.594,189,2.96,190,2.887,191,2.122,192,1.742,193,3.259,194,2.341,195,3.177,196,1.635,197,3.259,198,3.259,199,3.259,200,3.259,201,3.259,202,3.259,203,3.259,204,3.714,205,5.089,206,2.971,207,3.569,208,4.53,209,3.428,210,2.853,211,3.799,212,3.521,213,3.521,214,3.714,215,2.168]],["title/components/AddressManagementComponent.html",[0,0.015,29,0.659]],["body/components/AddressManagementComponent.html",[0,0.024,1,0.696,2,1.011,3,0.346,4,0.304,5,0.821,6,0.821,7,0.821,8,0.304,11,2.239,12,1.097,13,2.7,15,1.011,17,0.896,20,0.821,21,1.566,22,1.566,23,0.821,24,1.236,25,1.097,26,0.711,27,1.097,28,0.696,29,1.119,30,0.696,31,0.696,32,1.448,33,1.097,34,3.36,35,1.097,36,3.36,37,0.187,38,0.352,40,0.781,41,1.546,42,1.139,43,1.314,44,1.225,45,0.801,47,1.502,49,1.757,50,2.703,51,0.532,52,0.031,53,0.586,54,0.3,55,0.532,62,1.658,63,1.671,65,0.532,66,1.011,68,0.638,69,0.584,70,0.808,71,0.482,72,0.389,75,1,76,4.04,77,1.139,80,1.011,83,0.889,84,0.962,85,0.346,86,0.532,87,1.215,94,3.86,98,0.821,99,1.097,100,1.097,101,0.821,102,1.216,103,0.821,104,1.097,105,1.119,106,0.821,107,0.696,108,0.821,109,0.696,110,1.097,111,0.696,112,0.482,113,1.097,114,0.821,115,0.696,116,0.821,117,0.696,118,0.821,119,0.696,120,0.696,121,0.821,122,0.696,123,0.821,124,0.696,125,0.821,126,0.821,127,0.696,128,0.757,129,0.821,130,0.821,131,0.821,132,0.021,133,0.021,150,2.7,160,4.04,161,2.513,192,1.838,205,3.851,208,3.851,213,2.993,216,4.596,217,2.248,218,4.596,219,5.177,220,4.596,221,4.596,222,2.703,223,3.438,224,3.851,225,2.7,226,2.483,227,3.438,228,3.438,229,3.438,230,3.438,231,2.881,232,4.596,233,4.596,234,4.596,235,4.596]],["title/injectables/AddressService.html",[236,1.151,237,2.122]],["body/injectables/AddressService.html",[3,0.3,4,0.264,8,0.264,12,1.309,15,1.25,17,0.936,37,0.162,38,0.32,40,0.709,45,0.806,47,1.365,49,1.596,51,0.745,52,0.031,53,0.707,54,0.34,55,0.745,59,1.718,60,3.053,62,1.458,63,1.852,65,0.848,66,0.658,67,1.976,68,0.555,69,0.507,70,0.586,71,0.419,72,0.338,75,0.957,85,0.3,86,0.462,87,2.06,94,3.874,132,0.019,133,0.019,137,2.158,139,2.158,141,2.453,142,3.394,143,2.778,144,2.719,145,3.936,146,2.463,147,1.953,148,4.03,149,3.597,150,2.453,151,4.066,152,1.876,153,1.263,154,2.453,157,1.703,158,1.729,196,1.456,206,2.042,217,2.042,226,2.553,231,4.594,236,1.476,237,2.719,238,1.597,239,2.504,240,3.7,241,3.499,242,3.499,243,4.176,244,5.211,245,4.176,246,2.988,247,2.778,248,2.719,249,4.176,250,3.499,251,2.719,252,4.176,253,4.176,254,4.176,255,2.988,256,4.176,257,3.499,258,2.342,259,4.176,260,2.988,261,4.176,262,3.053,263,2.719,264,1.056,265,2.232,266,2.232,267,2.042,268,2.719,269,2.719,270,4.176,271,3.571,272,5.211,273,3.499,274,5.211,275,4.176,276,4.176,277,3.81,278,4.176,279,5.211,280,2.988,281,4.176,282,4.176,283,1.876,284,2.504,285,1.756,286,1.597,287,2.988,288,1.056,289,1.946,290,2.988,291,1.946,292,2.184,293,1.056,294,2.988,295,2.988,296,2.988,297,2.988,298,2.988,299,2.988,300,2.988,301,2.988,302,1.056,303,2.988,304,2.988]],["title/components/AppComponent.html",[0,0.015,107,0.659]],["body/components/AppComponent.html",[0,0.026,1,0.836,2,1.139,3,0.415,4,0.365,5,0.986,6,0.986,7,0.986,8,0.365,20,0.986,21,1.594,22,1.594,23,0.986,24,0.986,25,1.235,26,0.8,27,1.235,28,0.836,29,0.836,30,0.836,31,0.836,33,1.235,35,1.235,37,0.224,38,0.396,45,0.639,52,0.031,53,0.586,54,0.269,67,1.349,68,0.767,69,0.701,70,0.793,71,0.579,72,0.467,75,0.8,77,1.244,80,1.139,85,0.415,86,0.639,98,0.986,99,1.235,100,1.235,101,0.986,102,1.304,103,0.986,104,1.235,105,0.836,106,0.986,107,1.199,108,0.986,109,0.836,110,1.235,111,0.836,112,0.579,113,1.235,114,0.986,115,0.836,116,0.986,117,1.199,118,0.986,119,0.836,120,0.836,121,0.986,122,0.836,123,0.986,124,0.836,125,0.986,126,0.986,127,0.836,128,0.908,129,0.986,130,0.986,131,0.986,132,0.024,133,0.024,286,2.765,305,3.459,306,5.651,307,5.174,308,5.174,309,5.651,310,4.335,311,4.128,312,1.349,313,4.128]],["title/injectables/AuthService.html",[44,0.659,236,1.151]],["body/injectables/AuthService.html",[3,0.17,4,0.15,8,0.15,12,1.232,14,2.283,15,1.416,17,0.931,19,2.859,26,0.262,37,0.092,38,0.209,40,0.463,42,0.861,44,0.551,45,0.935,47,0.891,48,1.601,49,1.911,50,2.59,51,0.744,52,0.031,53,0.584,54,0.337,55,0.744,57,1.731,59,1.667,60,1.992,61,2.547,62,1.542,63,1.9,64,3.111,65,0.954,66,0.943,67,2.025,68,0.796,69,0.728,70,0.759,71,0.238,72,0.584,75,0.528,85,0.17,86,0.262,87,2.053,88,1.949,94,3.256,112,0.743,128,0.373,132,0.012,133,0.012,137,1.128,139,2.542,141,2.298,142,1.774,145,2.547,146,1.619,147,1.601,148,2.98,150,1.601,151,3.256,152,1.224,153,1.512,154,1.601,155,1.601,157,1.496,158,2.351,194,1.894,196,1.637,210,1.332,215,1.913,217,1.913,222,2.696,225,3.111,226,1.224,236,0.963,237,3.256,238,0.906,242,2.283,247,3.029,248,2.547,258,2.379,263,1.774,264,1.699,265,2.673,266,2.09,267,2.777,268,1.774,283,1.757,284,1.421,285,0.996,286,0.906,288,0.599,293,0.963,302,0.599,312,0.554,314,1.421,315,2.725,316,2.725,317,2.283,318,2.283,319,2.224,320,3.415,321,3.415,322,2.861,323,3.415,324,2.283,325,3.911,326,3.911,327,3.911,328,3.911,329,3.911,330,3.911,331,3.277,332,2.283,333,3.277,334,2.725,335,3.911,336,2.725,337,2.725,338,1.421,339,1.838,340,2.938,341,2.938,342,2.725,343,1.992,344,1.992,345,1.601,346,2.936,347,2.725,348,1.696,349,2.547,350,2.61,351,2.83,352,2.298,353,2.725,354,2.725,355,1.774,356,2.725,357,2.283,358,1.774,359,2.725,360,1.696,361,3.277,362,4.151,363,2.725,364,1.696,365,2.859,366,1.696,367,1.696,368,1.696,369,2.725,370,2.725,371,3.911,372,3.911,373,1.696,374,2.725,375,1.696,376,2.283,377,1.696,378,3.277,379,2.298,380,2.725,381,2.298,382,1.696,383,3.911,384,1.456,385,1.774,386,2.283,387,1.696,388,2.725,389,2.725,390,1.992,391,2.725,392,1.696,393,2.725,394,2.861,395,2.725,396,1.696,397,2.725,398,2.725,399,2.725,400,2.725,401,2.725,402,2.725,403,2.517,404,2.517,405,1.696,406,2.283,407,2.298,408,1.332,409,2.859,410,2.859,411,2.007,412,3.834,413,2.725,414,2.298,415,1.696,416,2.725,417,2.547,418,2.497,419,4.285,420,1.414,421,1.696,422,4.576,423,3.911,424,1.696,425,2.725,426,1.696,427,2.725,428,1.774,429,1.696,430,2.725,431,1.696,432,1.421,433,1.421,434,1.696,435,1.421,436,0.906,437,1.421,438,1.239,439,1.104,440,1.421,441,3.415,442,1.696,443,1.696,444,1.617,445,3.911,446,3.415,447,2.725,448,1.696,449,2.725,450,1.696,451,1.696,452,1.696,453,1.696,454,1.696,455,1.696,456,1.696,457,0.996,458,3.415,459,2.725,460,1.239,461,1.696,462,1.696,463,1.696,464,1.696,465,1.696,466,2.725,467,1.696,468,1.696,469,1.696,470,1.696,471,2.283]],["title/components/CardDetailComponent.html",[0,0.015,109,0.659]],["body/components/CardDetailComponent.html",[0,0.019,1,0.469,2,0.764,3,0.233,4,0.205,5,0.553,6,0.553,7,0.553,8,0.205,17,0.915,20,0.553,21,1.49,22,1.49,23,0.553,24,0.553,25,0.829,26,0.537,27,0.829,28,0.469,29,0.469,30,0.469,31,0.469,32,1.165,33,0.829,35,0.829,37,0.126,38,0.266,40,0.59,41,1.294,42,0.764,43,0.886,44,1.053,45,0.96,47,1.135,51,0.358,52,0.031,53,0.472,54,0.302,55,0.358,65,0.537,66,1.018,67,1.135,68,0.645,69,0.59,70,0.778,71,0.325,72,0.262,75,0.537,77,0.917,80,1.221,83,0.599,84,0.648,85,0.233,86,0.358,88,1.362,98,0.553,99,0.829,100,0.829,101,0.553,102,1.018,103,0.553,104,0.829,105,0.469,106,0.553,107,0.469,108,0.553,109,0.937,110,0.829,111,0.469,112,0.73,113,0.829,114,0.553,115,0.469,116,0.553,117,0.469,118,0.553,119,0.469,120,0.469,121,0.553,122,0.469,123,0.553,124,0.469,125,0.553,126,0.553,127,0.469,128,0.51,129,0.553,130,0.553,131,0.553,132,0.016,133,0.016,153,1.678,155,2.718,164,2.226,169,2.718,170,2.04,174,2.473,183,2.907,184,1.361,188,1.133,190,3.013,191,1.509,194,2.461,195,3.447,196,1.775,206,3.108,207,3.734,209,3.057,210,2.545,211,3.389,213,3.013,214,4.36,215,1.133,288,0.819,312,0.757,322,3.49,339,2.062,350,2.855,444,0.819,471,1.941,472,4.561,473,5.228,474,1.694,475,2.539,476,2.713,477,2.91,478,2.91,479,4.166,480,4.956,481,3.013,482,3.382,483,3.382,484,3.382,485,3.382,486,3.382,487,3.013,488,3.382,489,3.382,490,3.382,491,3.382,492,2.639,493,3.473,494,2.317,495,2.317,496,2.317,497,1.941,498,2.317,499,2.317,500,2.317,501,2.317,502,2.317,503,2.317,504,2.317,505,2.317,506,2.317,507,2.317,508,2.317,509,2.317,510,2.317,511,2.317,512,2.317,513,2.317,514,2.317,515,2.317,516,2.317,517,2.317,518,2.317,519,2.317,520,1.361,521,1.694,522,2.317,523,2.317,524,3.473,525,1.509,526,2.317,527,3.473,528,3.473,529,3.473,530,3.473,531,3.473,532,3.473,533,3.473,534,3.473,535,3.473,536,3.473,537,3.473,538,2.317,539,2.317,540,2.317,541,2.317,542,2.317,543,2.317,544,2.317,545,2.317,546,2.317,547,2.317,548,2.317,549,4.166,550,1.941,551,2.317,552,2.317,553,2.317,554,2.317,555,2.317,556,2.317,557,2.317,558,2.317,559,2.317,560,2.317,561,2.317,562,1.509,563,2.317,564,1.694,565,3.473,566,2.317,567,1.694,568,4.056,569,3.877,570,3.877,571,2.718,572,2.718,573,3.877,574,3.382,575,3.382,576,4.627,577,3.473]],["title/interfaces/CardItem.html",[112,0.457,134,1.349]],["body/interfaces/CardItem.html",[3,0.349,4,0.307,8,0.307,12,0.829,15,1.145,17,0.947,37,0.189,38,0.354,52,0.031,54,0.42,57,1.513,59,1.051,62,0.972,67,2.175,85,0.349,112,0.649,132,0.021,133,0.021,134,1.438,135,2.041,137,2.155,138,2.54,139,2.767,140,2.262,146,2.461,147,1.966,152,2.079,153,1.678,154,2.719,157,1.513,283,2.079,350,2.99,408,1.699,412,3.878,417,3.014,481,3.614,482,4.057,483,4.057,484,4.057,485,4.057,486,4.057,487,3.614,488,4.057,489,4.057,490,4.057,491,4.057,571,2.719,573,3.878,574,3.383,578,2.911,579,1.699,580,3.764,581,2.041,582,4.65,583,5.944,584,4.628,585,5.55,586,4.628,587,4.628,588,4.628,589,4.628,590,4.628,591,4.628]],["title/injectables/CardItemService.html",[236,1.151,492,1.593]],["body/injectables/CardItemService.html",[3,0.088,4,0.186,8,0.078,12,0.697,15,1.067,17,0.835,26,0.242,37,0.085,38,0.12,40,0.265,45,0.5,49,0.597,51,0.394,52,0.031,53,0.289,54,0.228,55,0.394,57,0.511,59,0.472,62,0.713,65,0.608,67,1.056,68,0.163,69,0.358,70,0.219,71,0.123,77,0.561,80,1.196,85,0.088,86,0.136,87,0.901,88,0.688,97,3.64,102,0.194,112,0.68,132,0.007,133,0.007,137,1.337,146,2.481,147,1.127,152,1.145,153,0.771,157,0.511,158,1.055,163,4.424,196,1.242,215,0.764,226,1.675,236,0.552,238,0.47,240,1.66,247,2.008,251,1.017,264,0.901,265,0.835,266,0.835,267,1.247,271,2.427,277,3.398,285,0.517,286,0.47,288,0.552,289,1.017,291,0.573,293,2.136,302,0.311,350,2.253,352,0.918,355,1.9,358,1.66,365,2.361,376,1.309,428,1.017,440,0.737,444,0.311,481,3.878,482,4.353,483,4.353,484,4.353,485,4.353,486,4.353,487,3.878,488,4.353,489,4.353,490,4.353,491,4.353,492,0.764,562,1.9,568,1.863,574,1.863,575,3.77,579,2.371,580,3.027,582,4.989,592,0.737,593,1.764,594,1.562,595,1.562,596,1.562,597,1.562,598,2.549,599,1.562,600,0.88,601,1.017,602,1.562,603,0.88,604,1.562,605,0.88,606,2.427,607,1.309,608,1.562,609,2.556,610,0.88,611,1.562,612,1.562,613,2.136,614,2.136,615,1.562,616,1.309,617,1.309,618,0.88,619,2.549,620,1.562,621,1.562,622,4.648,623,4.648,624,4.648,625,1.562,626,5.955,627,1.562,628,5.387,629,3.23,630,5.564,631,3.727,632,1.562,633,5.28,634,4.648,635,6.276,636,1.562,637,1.562,638,3.23,639,3.727,640,2.549,641,1.562,642,3.727,643,1.562,644,1.562,645,1.562,646,5.28,647,4.406,648,3.23,649,3.727,650,1.562,651,1.562,652,1.562,653,1.562,654,1.562,655,3.23,656,1.562,657,1.562,658,1.562,659,3.727,660,3.727,661,3.727,662,3.727,663,1.562,664,3.123,665,3.23,666,1.562,667,5.157,668,5.387,669,3.727,670,1.562,671,1.562,672,4.107,673,3.727,674,2.549,675,3.23,676,5.28,677,4.648,678,3.23,679,3.23,680,1.562,681,4.107,682,2.549,683,4.406,684,1.562,685,1.562,686,1.562,687,1.562,688,1.562,689,1.562,690,2.549,691,2.549,692,1.562,693,3.23,694,4.847,695,2.549,696,2.549,697,1.562,698,1.562,699,3.441,700,2.549,701,1.562,702,1.562,703,1.562,704,1.562,705,1.562,706,1.562,707,3.691,708,2.549,709,1.562,710,3.727,711,1.562,712,4.107,713,1.562,714,3.727,715,3.23,716,3.727,717,4.648,718,2.549,719,1.562,720,1.562,721,1.562,722,1.562,723,3.23,724,1.562,725,1.562,726,1.562,727,1.562,728,1.562,729,1.562,730,1.562,731,1.562,732,1.562,733,1.562,734,1.562,735,1.142,736,2.549,737,4.648,738,1.562,739,3.727,740,1.562,741,3.441,742,1.562,743,1.562,744,1.562,745,2.549,746,2.549,747,1.562,748,1.562,749,1.562,750,1.562,751,1.562,752,2.549,753,2.549,754,1.562,755,1.562,756,1.562,757,1.562,758,1.562,759,4.648,760,3.23,761,1.562,762,1.562,763,1.562,764,1.562,765,1.562,766,2.549,767,1.562,768,1.562,769,2.549,770,3.727,771,3.727,772,3.23,773,1.562,774,1.562,775,2.549,776,1.562,777,1.562,778,1.562,779,1.562,780,1.562,781,2.549,782,1.562,783,3.23,784,2.136,785,2.549,786,1.562,787,1.562,788,1.562,789,1.562,790,1.562,791,2.706,792,2.549,793,2.549,794,1.562,795,3.727,796,1.562,797,1.562,798,2.549,799,3.727,800,3.23,801,1.562,802,2.549,803,2.549,804,2.549,805,1.562,806,1.562,807,1.562,808,1.562,809,1.562,810,1.562,811,1.562,812,1.562,813,1.562,814,2.549,815,1.562,816,1.562,817,2.549,818,1.562,819,2.549,820,1.562,821,1.562,822,1.562,823,1.562,824,1.562,825,1.562,826,1.562,827,1.562,828,1.562,829,2.549,830,4.406,831,1.562,832,2.549,833,1.562,834,1.562,835,3.23,836,1.562,837,1.562,838,4.107,839,1.562,840,1.562,841,3.23,842,1.562,843,1.562,844,4.648,845,1.562,846,1.562,847,1.562,848,1.562,849,1.562,850,1.562,851,1.562,852,1.562,853,2.549,854,2.549,855,2.549,856,1.562,857,1.562,858,4.648,859,1.562,860,3.23,861,1.562,862,1.562,863,2.549,864,1.562,865,1.562,866,1.562,867,3.727,868,2.549,869,3.23,870,3.23,871,3.23,872,3.23,873,1.562,874,3.23,875,1.562,876,2.549,877,4.406,878,3.727,879,1.562,880,1.562,881,1.562,882,1.562,883,1.562,884,1.562,885,1.562,886,1.562,887,1.562,888,1.562,889,1.562,890,1.562,891,1.562,892,1.562,893,3.23,894,1.562,895,1.562,896,2.549,897,1.562,898,1.562,899,1.562,900,1.562,901,1.562,902,1.562,903,1.562,904,2.549,905,1.562,906,1.562,907,1.562,908,1.562,909,2.549,910,1.562,911,1.562,912,1.562,913,1.562,914,1.562,915,1.562,916,1.562,917,1.562,918,1.562,919,2.549,920,2.549,921,1.562,922,1.562,923,1.562,924,1.562,925,2.549,926,1.562,927,1.309,928,2.549,929,3.23,930,1.562,931,1.562,932,1.562,933,1.562,934,1.562,935,1.142,936,2.549,937,3.23,938,3.727,939,3.727,940,1.562,941,1.562,942,1.562,943,1.562,944,2.549,945,1.562,946,1.562,947,1.562,948,1.562,949,1.562,950,1.562,951,4.107,952,1.562,953,3.727,954,2.549,955,2.549,956,1.562,957,1.562,958,1.562,959,1.562,960,1.562,961,1.562,962,2.549,963,1.562,964,1.562,965,1.562,966,3.23,967,1.562,968,1.562,969,1.562,970,1.562,971,1.562,972,1.562,973,1.562,974,1.562,975,1.562,976,1.562,977,3.23,978,3.23,979,1.562,980,1.562,981,1.562,982,1.562,983,1.562,984,1.562,985,1.562,986,1.562,987,1.562,988,1.562,989,1.562,990,1.562,991,1.562,992,1.562,993,1.562,994,1.562,995,1.562,996,1.562,997,1.562,998,3.727,999,1.562,1000,2.549,1001,2.549,1002,1.562,1003,1.562,1004,1.562,1005,1.562,1006,1.562,1007,1.562,1008,1.562,1009,1.562,1010,1.562,1011,1.562,1012,2.549,1013,1.562,1014,1.562,1015,1.562,1016,1.562,1017,1.562,1018,1.562,1019,1.562,1020,1.562,1021,1.562,1022,1.562,1023,1.562,1024,1.562,1025,1.562,1026,1.562,1027,1.562,1028,1.562,1029,1.562,1030,1.562,1031,1.562,1032,1.562,1033,1.562,1034,1.562,1035,1.562,1036,1.562,1037,1.562,1038,1.562,1039,1.562,1040,1.562,1041,1.562,1042,1.562,1043,1.562,1044,1.562,1045,1.562,1046,1.562,1047,1.562,1048,0.88,1049,1.309,1050,1.562,1051,0.88,1052,0.88,1053,0.737,1054,0.88,1055,0.88,1056,0.88,1057,2.133,1058,0.88,1059,0.88,1060,0.88,1061,0.88,1062,0.643,1063,0.88,1064,0.88,1065,0.88]],["title/components/CardManageComponent.html",[0,0.015,31,0.659]],["body/components/CardManageComponent.html",[0,0.024,1,0.689,2,1.005,3,0.342,4,0.301,5,0.813,6,0.813,7,0.813,8,0.301,17,0.772,20,0.813,21,1.564,22,1.564,23,0.813,24,0.813,25,1.09,26,0.707,27,1.09,28,0.689,29,0.689,30,0.689,31,1.114,32,1.442,33,1.09,35,1.09,37,0.185,38,0.35,40,0.776,41,1.54,42,1.005,43,1.302,44,1.196,45,0.888,51,0.707,52,0.031,53,0.623,54,0.336,55,0.707,65,0.797,66,1.212,68,0.633,69,0.578,70,0.829,71,0.478,72,0.386,75,0.707,77,1.134,80,1.368,81,4.321,83,0.881,84,0.953,85,0.342,86,0.527,88,1.684,98,0.813,99,1.09,100,1.09,101,0.813,102,1.212,103,0.813,104,1.09,105,0.689,106,0.813,107,0.689,108,0.813,109,0.689,110,1.09,111,0.689,112,0.847,113,1.09,114,0.813,115,0.689,116,0.813,117,0.689,118,0.813,119,0.689,120,0.689,121,0.813,122,0.689,123,0.813,124,0.689,125,0.813,126,0.813,127,0.689,128,0.75,129,0.813,130,0.813,131,0.813,132,0.021,133,0.021,146,1.891,153,1.381,210,1.666,215,2.234,226,2.052,247,1.666,312,1.113,339,2.308,350,2.052,406,3.827,444,1.204,472,4.321,475,2.49,492,2.953,520,2.001,521,2.49,568,3.339,569,3.827,570,3.827,571,2.683,572,2.683,579,2.234,1057,3.339,1066,2.854,1067,4.567,1068,4.567,1069,4.567,1070,3.356,1071,5.506,1072,4.567,1073,4.567,1074,3.406,1075,3.406,1076,4.567,1077,3.406,1078,3.406,1079,2.854,1080,3.406,1081,3.406,1082,2.854,1083,3.406,1084,2.854,1085,2.854,1086,2.218,1087,2.854,1088,2.854,1089,3.406,1090,3.339,1091,4.567,1092,4.567,1093,2.974,1094,2.974,1095,2.683]],["title/components/CarditemListComponent.html",[0,0.015,111,0.659]],["body/components/CarditemListComponent.html",[0,0.023,1,0.685,2,1,3,0.34,4,0.299,5,0.807,6,0.807,7,0.807,8,0.299,15,0.744,20,0.807,21,1.563,22,1.563,23,0.807,24,0.807,25,1.085,26,0.703,27,1.085,28,0.685,29,0.685,30,0.685,31,0.685,32,1.436,33,1.085,35,1.085,37,0.184,38,0.348,40,0.772,41,1.536,42,1,44,1.22,45,0.849,51,0.703,52,0.031,53,0.622,54,0.335,55,0.703,57,1.678,65,0.703,66,1.13,67,1.678,68,0.628,69,0.574,70,0.827,71,0.474,72,0.383,75,0.703,77,1.13,80,1,83,0.875,84,0.946,85,0.34,86,0.523,88,1.678,98,0.807,99,1.085,100,1.085,101,0.807,102,1.208,103,0.807,104,1.085,105,0.685,106,0.807,107,0.685,108,0.807,109,0.685,110,1.085,111,1.111,112,0.88,113,1.085,114,0.807,115,0.685,116,0.807,117,0.685,118,0.807,119,0.685,120,0.685,121,0.807,122,0.685,123,0.807,124,0.685,125,0.807,126,0.807,127,0.685,128,0.744,129,0.807,130,0.807,131,0.807,132,0.021,133,0.021,147,1.553,215,2.223,288,1.814,312,1.105,346,1.654,352,1.987,355,2.202,358,2.202,379,1.987,481,3.73,492,2.947,520,1.987,521,2.472,562,2.202,564,2.472,593,4.302,609,3.323,1049,3.808,1079,2.833,1085,2.833,1095,2.671,1096,4.799,1097,4.799,1098,2.472,1099,3.808,1100,3.808,1101,3.808,1102,4.546,1103,3.382,1104,5.49,1105,4.546,1106,3.808,1107,4.546,1108,3.382,1109,3.382,1110,3.382,1111,4.546,1112,3.382,1113,3.382,1114,3.382,1115,3.382,1116,1.987,1117,3.382,1118,3.382,1119,4.546,1120,4.546,1121,4.546,1122,4.546]],["title/components/LoginComponent.html",[0,0.015,115,0.659]],["body/components/LoginComponent.html",[0,0.023,1,0.632,2,0.948,3,0.314,4,0.276,5,0.746,6,0.746,7,0.746,8,0.276,12,0.746,15,0.948,17,0.929,20,0.746,21,1.549,22,1.549,23,0.746,24,0.746,25,1.028,26,0.666,27,1.028,28,0.632,29,0.632,30,0.632,31,0.632,32,1.379,33,1.028,35,1.028,37,0.17,38,0.33,40,0.731,41,1.486,42,1.084,43,1.194,44,1.166,45,0.891,47,1.408,48,2.53,49,2.03,50,2.598,51,0.483,52,0.031,53,0.558,54,0.281,55,0.483,59,1.606,62,1.486,63,1.742,65,0.666,66,1.169,70,0.782,71,0.438,72,0.354,75,0.666,77,1.084,80,0.948,83,0.808,84,0.874,85,0.314,86,0.483,87,1.522,98,0.746,99,1.028,100,1.028,101,0.746,102,1.169,103,0.746,104,1.028,105,0.632,106,0.746,107,0.632,108,0.746,109,0.632,110,1.028,111,0.632,112,0.438,113,1.028,114,0.746,115,1.075,116,0.746,117,0.632,118,0.746,119,0.632,120,0.632,121,0.746,122,0.632,123,0.746,124,0.632,125,0.746,126,0.746,127,0.632,128,0.687,129,0.746,130,0.746,131,0.746,132,0.02,133,0.02,153,1.742,155,3.121,164,2.634,169,3.121,170,2.53,174,2.839,183,2.41,184,1.835,188,1.528,192,1.669,194,2.04,195,2.53,196,1.302,206,2.106,207,3.121,222,2.106,312,1.021,332,4.826,339,2.299,345,2.53,357,4.45,362,2.283,379,1.835,381,3.384,384,3.079,457,1.835,476,3.209,1086,2.804,1116,1.835,1123,2.617,1124,4.306,1125,4.306,1126,4.928,1127,4.306,1128,3.124,1129,3.148,1130,4.515,1131,3.124,1132,3.148,1133,3.608,1134,3.148,1135,2.283,1136,3.124,1137,2.617,1138,3.124,1139,3.124,1140,3.124,1141,3.124,1142,3.124,1143,3.124,1144,3.124,1145,3.124,1146,4.945,1147,3.124,1148,3.459,1149,5.312,1150,3.148]],["title/components/NavbarComponent.html",[0,0.015,117,0.659]],["body/components/NavbarComponent.html",[0,0.021,1,0.579,2,0.891,3,0.287,4,0.253,5,0.683,6,0.683,7,0.683,8,0.253,12,1.122,13,3.003,15,1.4,17,0.918,20,0.683,21,1.533,22,1.533,23,0.683,24,0.683,25,0.966,26,0.626,27,0.966,28,0.579,29,0.579,30,0.579,31,0.579,32,1.315,33,0.966,35,0.966,37,0.155,38,0.31,40,0.687,41,1.43,42,1.034,44,1.191,45,0.866,47,1.323,48,2.378,49,1.547,50,1.98,51,0.442,52,0.031,53,0.532,54,0.307,55,0.442,59,1.779,63,1.779,64,2.378,65,0.727,66,1.125,68,0.531,69,0.486,70,0.757,71,0.401,72,0.324,75,0.626,77,1.034,80,0.891,83,0.739,84,0.8,85,0.287,86,0.442,87,1.43,88,0.935,91,3.392,98,0.683,99,0.966,100,0.966,101,0.683,102,1.125,103,0.683,104,0.966,105,0.579,106,0.683,107,0.579,108,0.683,109,0.579,110,0.966,111,0.579,112,0.401,113,0.966,114,0.683,115,0.579,116,0.683,117,1.034,118,0.683,119,0.579,120,0.579,121,0.683,122,0.579,123,0.683,124,0.579,125,0.683,126,0.683,127,0.579,128,0.629,129,0.683,130,0.683,131,0.683,132,0.018,133,0.018,139,2.116,143,1.98,153,1.224,157,1.671,158,1.676,164,2.512,174,2.732,183,1.98,188,1.398,192,1.528,194,1.676,222,2.739,225,2.378,241,3.392,251,2.636,264,1.43,265,2.164,266,2.164,267,2.499,269,2.636,283,1.819,288,1.01,302,1.43,312,0.935,317,3.392,318,3.392,331,3.937,333,4.282,338,2.396,339,2.201,343,2.959,344,2.959,345,2.378,346,1.98,351,2.164,352,2.378,362,3.736,378,3.392,379,1.68,418,2.09,428,2.636,476,3.061,575,3.736,579,1.98,580,2.636,606,2.636,609,2.959,613,3.392,614,3.392,616,4.929,617,4.282,1053,2.396,1086,2.636,1116,1.68,1129,3.736,1130,3.736,1132,4.094,1150,2.959,1151,2.396,1152,5.111,1153,3.392,1154,4.048,1155,4.048,1156,4.7,1157,5.111,1158,4.048,1159,2.859,1160,5.111,1161,4.048,1162,2.859,1163,4.048,1164,2.859,1165,2.859,1166,2.859,1167,2.859,1168,2.859,1169,2.859,1170,2.859,1171,2.859,1172,2.859,1173,4.7,1174,5.111,1175,4.048,1176,4.048,1177,4.048,1178,4.048,1179,4.048,1180,4.048]],["title/components/OrderDetailComponent.html",[0,0.015,119,0.659]],["body/components/OrderDetailComponent.html",[0,0.024,1,0.712,2,1.027,3,0.354,4,0.311,5,0.84,6,0.84,7,0.84,8,0.311,20,0.84,21,1.57,22,1.57,23,0.84,24,0.84,25,1.114,26,0.722,27,1.114,28,0.712,29,0.712,30,0.712,31,0.712,32,1.465,33,1.114,35,1.114,37,0.191,38,0.357,40,0.793,42,1.152,45,0.898,51,0.544,52,0.031,53,0.593,54,0.364,55,0.544,65,0.544,68,0.867,69,0.793,70,0.782,71,0.494,72,0.398,75,0.722,77,1.377,80,1.027,83,0.91,85,0.354,86,0.544,98,0.84,99,1.114,100,1.114,101,0.84,102,1.227,103,0.84,104,1.114,105,0.712,106,0.84,107,0.712,108,0.84,109,0.712,110,1.114,111,0.712,112,0.814,113,1.114,114,0.84,115,0.712,116,0.84,117,0.712,118,0.84,119,1.129,120,0.712,121,0.84,122,0.712,123,0.84,124,0.712,125,0.84,126,0.84,127,0.712,128,0.774,129,0.84,130,0.84,131,0.84,132,0.021,133,0.021,147,1.687,196,1.064,264,1.649,293,1.851,302,1.649,319,3.411,350,2.097,420,2.309,436,1.881,444,1.243,474,2.572,475,3.412,477,3.91,478,3.91,497,2.948,520,2.067,571,2.742,572,2.742,1070,2.291,1090,3.412,1093,3.78,1094,3.78,1095,3.505,1181,3.885,1182,3.885,1183,3.78,1184,4.243,1185,4.667,1186,5.237,1187,4.667,1188,3.518,1189,3.518,1190,3.91,1191,5.237,1192,2.291,1193,2.572,1194,2.948,1195,2.948,1196,3.91,1197,4.667]],["title/components/OrderFinishComponent.html",[0,0.015,120,0.659]],["body/components/OrderFinishComponent.html",[0,0.023,1,0.648,2,0.963,3,0.322,4,0.283,5,0.764,6,0.764,7,0.764,8,0.283,12,1.045,13,2.572,15,0.963,17,0.93,20,0.764,21,1.554,22,1.554,23,0.764,24,0.764,25,1.045,26,0.677,27,1.045,28,0.648,29,0.648,30,0.648,31,0.648,33,1.045,35,1.045,37,0.174,38,0.335,40,0.743,41,1.501,42,1.181,43,1.223,44,1.202,45,0.772,47,1.431,49,1.673,50,2.624,51,0.495,52,0.031,53,0.565,54,0.285,55,0.495,57,1.431,62,1.225,64,2.572,65,0.495,66,0.704,68,0.594,69,0.543,70,0.814,71,0.449,72,0.362,75,0.677,77,1.366,80,0.963,84,0.895,85,0.322,86,0.495,87,1.547,88,1.431,92,3.667,98,0.764,99,1.045,100,1.045,101,0.764,102,1.181,103,0.764,104,1.045,105,0.648,106,0.764,107,0.648,108,0.764,109,0.648,110,1.045,111,0.648,112,0.449,113,1.045,114,0.764,115,0.648,116,0.764,117,0.648,118,0.764,119,1.086,120,1.086,121,0.764,122,0.648,123,0.764,124,0.648,125,0.764,126,0.764,127,0.648,128,0.704,129,0.764,130,0.764,131,0.764,132,0.02,133,0.02,157,1.431,222,2.837,225,3.152,258,2.242,293,1.13,312,1.046,319,3.25,339,2.312,345,2.572,346,2.837,351,3.101,390,3.2,414,1.879,420,2.402,436,1.71,439,2.083,444,1.13,457,1.879,460,2.338,476,3.25,567,2.338,1129,3.2,1181,3.494,1182,2.083,1192,2.083,1193,2.338,1198,4.495,1199,2.68,1200,4.377,1201,3.922,1202,4.377,1203,4.377,1204,4.377,1205,4.377,1206,4.377,1207,3.199,1208,4.377,1209,4.377,1210,4.377,1211,3.667,1212,4.377,1213,4.377,1214,2.68,1215,3.199,1216,2.338,1217,3.199,1218,3.199,1219,2.68,1220,2.68,1221,3.199,1222,3.199,1223,3.667,1224,4.377,1225,4.377,1226,4.377,1227,3.667,1228,4.377]],["title/components/OrderListComponent.html",[0,0.015,30,0.659]],["body/components/OrderListComponent.html",[0,0.023,1,0.633,2,0.948,3,0.314,4,0.276,5,0.746,6,0.746,7,0.746,8,0.276,17,0.604,20,0.746,21,1.55,22,1.55,23,0.746,24,0.746,25,1.029,26,0.763,27,1.029,28,0.633,29,0.633,30,1.076,31,0.633,32,1.379,33,1.029,35,1.029,37,0.17,38,0.33,40,0.732,41,1.487,42,0.948,44,1.195,45,0.931,51,0.822,52,0.031,53,0.652,54,0.385,55,0.822,65,0.822,66,1.085,68,0.916,69,0.837,70,0.828,71,0.439,72,0.354,75,0.667,77,1.36,78,4.463,80,0.948,83,0.808,84,0.875,85,0.314,86,0.484,88,1.408,98,0.746,99,1.029,100,1.029,101,0.746,102,1.169,103,0.746,104,1.029,105,0.633,106,0.746,107,0.633,108,0.746,109,0.633,110,1.029,111,0.633,112,0.844,113,1.029,114,0.746,115,0.633,116,0.746,117,0.633,118,0.746,119,1.076,120,0.633,121,0.746,122,0.633,123,0.746,124,0.633,125,0.746,126,0.746,127,0.633,128,0.688,129,0.746,130,0.746,131,0.746,132,0.02,133,0.02,147,1.607,149,1.837,196,1.303,264,1.523,288,1.105,293,1.523,302,1.742,341,3.385,394,3.61,417,2.806,420,2.558,436,1.671,437,2.619,444,1.523,520,1.837,550,2.619,572,2.532,579,2.107,1070,2.806,1093,2.806,1094,2.036,1095,2.532,1098,2.286,1099,3.61,1100,3.61,1101,3.61,1181,3.975,1182,2.036,1183,2.806,1184,4.074,1190,3.61,1192,2.036,1194,3.61,1195,3.61,1214,2.619,1223,3.61,1227,3.61,1229,4.931,1230,4.931,1231,4.931,1232,5.574,1233,4.309,1234,3.127,1235,4.309,1236,4.309,1237,3.127,1238,3.127,1239,3.127,1240,4.309,1241,3.127,1242,3.127,1243,3.127,1244,3.127,1245,4.309,1246,3.127,1247,3.127,1248,3.127,1249,4.309,1250,4.309,1251,4.309,1252,4.309,1253,4.309]],["title/components/PaymentComponent.html",[0,0.015,122,0.659]],["body/components/PaymentComponent.html",[0,0.024,1,0.74,2,1.053,3,0.367,4,0.323,5,0.872,6,0.872,7,0.872,8,0.323,20,0.872,21,1.576,22,1.576,23,0.872,24,0.872,25,1.142,26,0.825,27,1.142,28,0.74,29,0.74,30,0.74,31,0.74,32,1.493,33,1.142,35,1.142,37,0.198,38,0.366,40,0.813,41,1.584,42,1.053,43,1.397,44,1.22,45,0.876,51,0.565,52,0.031,53,0.604,54,0.312,55,0.565,57,1.564,65,0.74,66,1.053,68,0.679,69,0.621,70,0.794,71,0.513,72,0.414,75,0.74,77,1.174,80,1.053,83,0.945,84,1.022,85,0.367,86,0.565,88,1.564,98,0.872,99,1.142,100,1.142,101,0.872,102,1.246,103,0.872,104,1.142,105,0.74,106,0.872,107,0.74,108,0.872,109,0.74,110,1.142,111,0.74,112,0.513,113,1.142,114,0.872,115,0.74,116,0.872,117,0.74,118,0.872,119,0.74,120,0.74,121,0.872,122,1.146,123,0.872,124,0.74,125,0.872,126,0.872,127,0.74,128,0.804,129,0.872,130,0.872,131,0.872,132,0.022,133,0.022,258,1.642,264,1.691,293,1.291,302,1.691,312,1.195,339,2.348,444,1.291,457,2.147,567,2.671,1216,2.671,1219,3.062,1220,3.062,1254,3.062,1255,4.785,1256,4.785,1257,4.785,1258,5.336,1259,5.661,1260,4.785,1261,3.654,1262,3.654,1263,3.654,1264,3.062,1265,4.785,1266,3.654,1267,3.654,1268,4.785,1269,3.654,1270,3.654,1271,4.785,1272,5.661,1273,5.661,1274,4.785,1275,4.785,1276,4.785]],["title/components/RegistrationFormComponent.html",[0,0.015,124,0.659]],["body/components/RegistrationFormComponent.html",[0,0.019,1,0.478,2,0.776,3,0.238,4,0.209,5,0.564,6,0.564,7,0.564,8,0.209,12,1.006,13,2.071,17,0.911,20,0.564,21,1.494,22,1.494,23,0.564,24,0.564,25,0.841,26,0.545,27,0.841,28,0.478,29,0.478,30,0.478,31,0.478,32,1.179,33,0.841,35,0.841,37,0.128,38,0.27,40,0.599,41,1.307,42,1.028,44,1.13,45,0.898,47,1.634,48,2.071,50,1.724,51,0.366,52,0.031,53,0.477,54,0.23,55,0.366,62,0.661,63,1.643,65,0.545,66,1.028,70,0.762,71,0.332,72,0.268,75,0.545,77,0.928,80,0.776,83,0.611,84,0.661,85,0.238,86,0.366,87,1.489,88,1.378,97,3.08,98,0.564,99,0.841,100,0.841,101,0.564,102,1.028,103,0.564,104,0.841,105,0.478,106,0.564,107,0.478,108,0.564,109,0.478,110,0.841,111,0.478,112,0.332,113,0.841,114,0.564,115,0.478,116,0.564,117,0.478,118,0.564,119,0.478,120,0.478,121,0.564,122,0.478,123,0.564,124,0.946,125,1.297,126,0.564,127,0.478,128,0.52,129,0.564,130,0.564,131,0.564,132,0.016,133,0.016,139,1.935,141,2.071,143,1.156,153,1.725,164,2.253,165,3.081,169,2.745,170,2.071,174,2.498,183,2.656,184,2.071,185,1.728,186,1.728,187,1.539,188,1.156,189,2.745,191,1.539,194,2.248,195,3.08,196,1.585,206,2.84,207,3.507,209,3.08,210,2.564,211,3.782,212,3.414,213,3.043,217,1.724,222,2.564,224,2.953,258,2.508,283,1.062,288,0.835,312,0.773,339,2.133,340,3.191,343,2.577,344,2.577,345,2.071,349,3.635,379,1.389,381,2.745,384,2.498,390,2.577,403,2.745,404,3.412,407,2.745,408,2.978,411,2.745,457,1.389,562,1.539,564,1.728,664,2.953,735,3.416,791,3.915,935,3.416,1087,1.98,1116,1.389,1130,4.17,1132,2.577,1133,2.953,1135,1.728,1137,1.98,1146,5.001,1148,2.295,1150,2.577,1211,3.915,1277,4.939,1278,4.939,1279,1.98,1280,5.242,1281,3.525,1282,3.525,1283,3.525,1284,4.215,1285,4.673,1286,2.363,1287,3.525,1288,2.363,1289,3.525,1290,3.525,1291,3.525,1292,2.953,1293,2.363,1294,1.98,1295,2.363,1296,1.98,1297,2.363,1298,2.363,1299,1.98,1300,2.363,1301,2.363,1302,2.363,1303,2.363,1304,2.363,1305,3.081,1306,1.728,1307,2.363,1308,3.532,1309,2.953,1310,2.363,1311,1.98,1312,3.525,1313,3.525,1314,2.363,1315,2.363,1316,2.363,1317,2.363,1318,2.363,1319,2.363,1320,2.363,1321,2.363,1322,2.363,1323,2.363,1324,2.363,1325,2.363,1326,2.363,1327,2.363,1328,2.363,1329,2.363,1330,2.363,1331,2.363,1332,1.98,1333,1.98,1334,2.363,1335,2.363,1336,2.363,1337,5.102,1338,4.866,1339,4.866,1340,4.866,1341,3.915,1342,4.673,1343,4.673,1344,4.673,1345,4.673,1346,3.525,1347,3.525,1348,2.953]],["title/interfaces/ShoppingCart.html",[134,1.349,420,1.349]],["body/interfaces/ShoppingCart.html",[3,0.405,4,0.356,8,0.356,12,1.216,17,0.917,37,0.219,38,0.39,52,0.031,54,0.404,59,1.541,62,1.808,63,1.541,70,0.715,85,0.405,112,0.824,132,0.023,133,0.023,134,1.667,135,2.366,137,2.431,139,2.109,140,3.318,142,3.318,146,2.431,147,1.977,149,3.45,151,3.318,152,2.289,155,2.993,157,2.022,217,2.491,226,2.289,283,2.289,346,3.026,351,3.398,414,3.635,417,3.318,418,4.292,420,2.109,438,2.944,439,2.623,487,3.824,579,2.491,581,2.993,1070,3.824,1153,4.268,1183,3.318,1349,3.374,1350,3.374,1351,4.268,1352,5.872,1353,5.094,1354,4.268,1355,5.094,1356,5.094,1357,5.094,1358,4.028]],["title/components/ShoppingCartComponent.html",[0,0.015,127,0.659]],["body/components/ShoppingCartComponent.html",[0,0.023,1,0.671,2,0.987,3,0.333,4,0.293,5,0.791,6,0.791,7,0.791,8,0.293,15,0.729,17,0.629,20,0.791,21,1.56,22,1.56,23,0.791,24,0.791,25,1.07,26,0.786,27,1.07,28,0.671,29,0.671,30,0.671,31,0.671,32,1.422,33,1.07,35,1.07,37,0.18,38,0.343,40,0.761,41,1.523,42,0.987,43,1.267,44,1.187,45,0.907,51,0.513,52,0.031,53,0.575,54,0.355,55,0.513,57,1.083,65,0.694,66,1.118,68,0.944,69,0.863,70,0.798,71,0.465,72,0.375,75,0.694,77,1.118,80,0.987,83,0.857,84,0.927,85,0.333,86,0.513,88,1.466,98,0.791,99,1.07,100,1.07,101,0.791,102,1.198,103,0.791,104,1.07,105,0.671,106,0.791,107,0.671,108,0.791,109,0.671,110,1.07,111,0.671,112,0.465,113,1.07,114,0.791,115,0.671,116,0.791,117,0.671,118,0.791,119,0.671,120,0.671,121,0.791,122,0.671,123,0.791,124,0.671,125,0.791,126,0.791,127,1.102,128,1.319,129,0.791,130,0.791,131,0.791,132,0.02,133,0.02,139,1.372,147,1.356,264,1.584,269,2.158,293,1.796,302,1.584,312,1.083,319,3.309,339,2.292,346,2.193,350,2.015,351,2.397,420,2.428,436,1.771,444,1.584,571,2.634,572,2.634,581,1.947,1082,2.777,1086,2.158,1088,2.777,1090,3.278,1093,3.705,1094,3.705,1095,3.445,1183,3.904,1184,3.715,1192,2.158,1193,2.423,1196,3.757,1201,2.423,1216,2.423,1354,3.757,1359,5.023,1360,5.023,1361,2.777,1362,4.484,1363,4.484,1364,4.484,1365,5.082,1366,5.445,1367,4.484,1368,3.314,1369,3.314,1370,3.314,1371,3.314,1372,3.314,1373,3.314,1374,3.314,1375,3.314,1376,3.314,1377,3.314]],["title/injectables/ShoppingCartService.html",[236,1.151,341,1.914]],["body/injectables/ShoppingCartService.html",[3,0.266,4,0.234,8,0.234,12,1.344,15,1.385,17,0.939,26,0.409,37,0.244,38,0.293,40,0.651,42,0.991,45,0.844,47,1.252,49,1.886,51,0.81,52,0.031,53,0.593,54,0.356,55,0.81,57,1.613,59,1.492,62,1.38,63,1.847,64,2.25,65,0.871,68,0.492,69,0.449,70,0.692,71,0.371,72,0.3,85,0.266,86,0.409,87,1.989,132,0.017,133,0.017,137,1.586,143,2.413,147,1.892,149,3.386,152,2.68,157,1.471,158,1.586,192,1.415,196,1.651,215,2.413,222,2.669,226,1.721,236,1.354,238,1.415,240,3.213,247,2.819,248,2.495,257,4.134,258,2.452,262,2.8,263,1.724,264,1.354,265,2.406,266,1.415,267,2.202,268,2.495,271,3.754,285,1.555,286,1.415,288,1.743,289,2.495,291,1.724,292,1.935,293,0.935,302,1.354,324,3.209,341,2.25,346,3.094,349,2.495,350,2.217,351,3.364,352,1.555,355,3.409,358,1.724,365,2.8,386,3.209,408,1.294,414,1.555,420,2.59,435,2.218,436,1.415,438,1.935,439,1.724,444,0.935,460,2.8,492,2.753,525,3.213,579,1.873,580,3.213,581,2.25,606,2.495,1057,1.935,1062,2.8,1201,3.99,1264,3.209,1378,4.716,1379,2.218,1380,3.831,1381,4.502,1382,3.831,1383,3.831,1384,3.831,1385,2.647,1386,3.831,1387,3.831,1388,3.831,1389,3.831,1390,5.235,1391,2.647,1392,3.831,1393,2.647,1394,4.934,1395,3.831,1396,2.647,1397,5.458,1398,3.831,1399,3.831,1400,3.831,1401,2.647,1402,4.502,1403,3.209,1404,3.831,1405,2.647,1406,3.831,1407,2.647,1408,2.647,1409,2.647,1410,2.647,1411,2.647,1412,3.831,1413,2.647,1414,3.831,1415,2.647,1416,2.647,1417,2.647,1418,2.647,1419,4.502,1420,3.831,1421,2.647,1422,4.502,1423,2.647,1424,3.831,1425,2.647,1426,2.647,1427,2.647,1428,2.647,1429,3.831,1430,3.831,1431,3.831,1432,2.647,1433,2.647,1434,2.647,1435,2.647,1436,2.647,1437,2.647]],["title/interfaces/User.html",[72,0.369,134,1.349]],["body/interfaces/User.html",[3,0.404,4,0.355,8,0.355,12,0.96,15,1.229,17,0.783,37,0.218,38,0.39,52,0.031,54,0.415,59,1.54,61,3.315,62,1.837,63,1.993,67,2.178,72,0.576,85,0.404,132,0.023,133,0.023,134,1.665,135,2.363,137,2.312,138,2.941,140,2.62,144,2.62,146,2.43,147,1.689,152,2.287,153,1.775,157,2.022,158,2.107,210,2.489,217,2.489,264,1.973,269,3.315,381,3.448,384,3.137,385,3.315,403,3.448,404,3.448,407,2.991,409,3.721,410,3.721,411,3.448,1351,4.265,1438,3.37,1439,4.023,1440,4.918,1441,4.918,1442,5.09,1443,5.09,1444,4.265,1445,5.09,1446,5.09,1447,5.09]],["title/components/UserManagementComponent.html",[0,0.015,28,0.659]],["body/components/UserManagementComponent.html",[0,0.022,1,0.625,2,0.94,3,0.31,4,0.273,5,0.737,6,0.737,7,0.737,8,0.273,11,2.01,17,0.741,20,0.737,21,1.547,22,1.547,23,0.737,24,1.169,25,1.019,26,0.661,27,1.019,28,1.07,29,0.625,30,0.625,31,0.625,32,1.37,33,1.019,34,3.121,35,1.019,36,3.121,37,0.167,38,0.327,40,0.725,41,1.478,42,0.679,43,1.179,44,1.162,45,0.942,51,0.477,52,0.031,53,0.554,54,0.319,55,0.477,57,1.009,63,1.291,65,0.661,66,1.078,68,0.573,69,0.524,70,0.805,71,0.433,72,0.711,73,4.505,75,0.661,77,1.078,80,0.94,83,0.798,84,0.863,85,0.31,86,0.477,97,3.104,98,0.737,99,1.019,100,1.019,101,0.737,102,1.163,103,0.737,104,1.019,105,0.625,106,0.737,107,0.625,108,0.737,109,0.625,110,1.019,111,0.625,112,0.433,113,1.019,114,0.737,115,0.625,116,0.737,117,0.625,118,0.737,119,0.625,120,0.625,121,0.737,122,0.625,123,0.737,124,0.625,125,0.737,126,0.737,127,0.625,128,0.679,129,0.737,130,0.737,131,0.737,132,0.02,133,0.02,143,2.088,153,1.736,164,2.617,165,3.579,169,3.104,170,2.509,174,2.824,183,1.509,184,1.813,185,2.256,186,2.256,187,2.01,188,1.509,189,2.877,191,2.01,192,1.649,194,2.188,195,2.877,196,1.598,206,2.806,207,3.371,209,3.104,210,2.584,211,3.441,212,3.441,263,2.01,384,2.617,403,3.104,404,3.62,407,3.104,408,2.584,411,3.104,525,3.189,735,3.863,1116,1.813,1135,2.256,1148,2.781,1294,2.585,1296,2.585,1299,2.585,1308,3.578,1309,3.578,1311,2.585,1337,4.427,1338,4.427,1339,4.427,1340,4.427,1348,3.578,1448,5.163,1449,4.897,1450,4.897,1451,4.27,1452,3.086,1453,3.086,1454,3.086,1455,3.086,1456,3.086,1457,3.086,1458,3.086,1459,3.086,1460,3.086,1461,3.086,1462,3.086,1463,3.086,1464,3.086,1465,3.086,1466,3.086,1467,3.086,1468,3.086,1469,3.086,1470,3.086,1471,3.086,1472,5.284,1473,3.086]],["title/injectables/UserService.html",[236,1.151,340,1.914]],["body/injectables/UserService.html",[3,0.259,4,0.228,8,0.228,12,1.237,15,1.305,17,0.879,19,2.748,26,0.864,37,0.204,38,0.288,40,0.638,45,0.802,47,1.871,49,1.437,51,0.686,52,0.031,53,0.502,54,0.318,55,0.686,59,1.731,61,2.448,62,1.513,63,1.968,65,0.864,66,0.567,67,2.097,68,0.479,69,0.438,70,0.527,71,0.362,72,0.726,85,0.259,86,0.399,87,2.022,132,0.017,133,0.017,137,2.369,139,2.018,141,2.863,143,2.384,144,3.174,146,2.455,153,1.793,157,1.871,158,2.56,196,1.636,204,3.149,206,1.838,226,2.43,236,1.328,238,1.378,240,3.957,247,2.799,248,3.174,250,3.149,251,2.448,258,2.571,262,2.748,264,1.722,265,2.009,266,2.009,267,2.645,268,3.174,271,3.174,277,2.748,283,1.689,285,1.515,286,1.378,288,1.328,289,2.448,291,1.679,292,2.748,293,0.911,302,1.328,340,2.208,361,3.149,381,3.633,384,3.211,385,3.174,403,3.429,404,3.429,407,2.208,408,1.838,409,2.748,410,2.748,411,3.429,428,2.448,432,2.161,444,0.911,525,3.174,601,2.448,606,2.448,607,3.149,1062,1.885,1084,4.532,1332,3.149,1341,3.149,1403,3.149,1440,4.084,1441,4.084,1444,3.149,1474,2.161,1475,3.759,1476,4.435,1477,3.759,1478,4.874,1479,3.759,1480,3.759,1481,3.759,1482,2.579,1483,4.874,1484,3.759,1485,4.874,1486,3.759,1487,4.874,1488,3.759,1489,3.759,1490,3.759,1491,3.759,1492,3.759,1493,2.579,1494,3.759,1495,3.759,1496,2.579,1497,3.759,1498,3.759,1499,3.759,1500,3.759,1501,2.579,1502,3.759,1503,3.759,1504,4.435,1505,3.149,1506,3.759,1507,3.759,1508,3.759,1509,4.874,1510,3.759,1511,3.759,1512,2.579,1513,2.579,1514,4.435,1515,2.579,1516,2.579,1517,2.579,1518,2.579,1519,2.579,1520,2.579,1521,2.579,1522,2.579,1523,2.579,1524,2.579,1525,2.579,1526,2.579,1527,2.579,1528,2.579,1529,2.579,1530,2.579,1531,2.579]],["title/coverage.html",[1532,3.713]],["body/coverage.html",[0,0.03,1,0.789,8,0.344,9,3.267,10,3.267,11,3.584,28,0.789,29,0.789,30,0.789,31,0.789,44,0.789,52,0.031,54,0.254,72,0.442,73,2.851,75,0.603,76,2.851,78,2.851,81,2.851,105,0.789,107,0.789,109,0.789,111,0.789,112,0.547,115,0.789,117,0.789,119,0.789,120,0.789,122,0.789,124,0.789,127,0.789,132,0.023,133,0.023,134,2.402,136,3.267,160,3.648,161,2.851,162,3.267,189,2.291,190,2.539,194,1.614,225,2.932,236,2.119,237,2.539,239,3.267,293,2.272,305,3.267,314,3.267,340,2.291,341,2.291,420,1.614,472,3.648,473,3.267,474,3.648,492,1.907,578,3.267,592,3.267,927,5.14,1066,3.267,1096,3.267,1097,3.267,1098,3.648,1123,3.267,1151,3.267,1181,3.584,1182,2.539,1198,3.267,1199,3.267,1254,3.267,1277,3.267,1278,3.267,1279,3.267,1305,2.851,1306,2.851,1349,3.267,1350,3.267,1359,3.267,1360,3.267,1361,3.267,1378,3.267,1379,3.267,1438,3.267,1448,3.267,1474,3.267,1532,3.267,1533,3.9,1534,3.9,1535,3.9,1536,6.671,1537,5.504,1538,5.504,1539,3.9,1540,3.267,1541,3.267,1542,3.267,1543,3.267,1544,3.267,1545,4.991,1546,5.504,1547,5.998,1548,3.9,1549,3.9,1550,4.991,1551,3.9,1552,3.9,1553,4.862,1554,5.803,1555,3.9,1556,3.9,1557,3.9,1558,3.9,1559,3.9]],["title/dependencies.html",[1560,1.994,1561,3.28]],["body/dependencies.html",[52,0.031,71,0.696,83,1.283,132,0.026,133,0.026,188,2.427,312,1.622,433,4.158,1561,4.158,1562,4.963,1563,6.603,1564,4.963,1565,5.784,1566,5.784,1567,4.963,1568,4.963,1569,4.963,1570,4.963,1571,4.963,1572,4.963,1573,4.963,1574,4.963]],["title/miscellaneous/enumerations.html",[1575,1.458,1576,3.28]],["body/miscellaneous/enumerations.html",[37,0.274,52,0.03,69,1.095,132,0.027,133,0.027,414,3.431,1575,2.697,1576,4.228,1577,5.046,1578,5.84,1579,5.046,1580,5.84,1581,5.84,1582,5.84,1583,5.84,1584,5.84]],["title/miscellaneous/functions.html",[1575,1.458,1585,3.28]],["body/miscellaneous/functions.html",[12,1.075,15,1.344,17,0.632,37,0.244,47,1.472,51,0.697,52,0.029,53,0.51,54,0.294,55,0.697,59,1.362,65,0.945,67,1.996,132,0.025,133,0.025,154,2.646,157,1.996,183,2.987,187,3.977,189,3.452,190,3.826,209,3.208,212,2.933,217,2.203,247,2.987,258,2.453,283,2.744,349,3.555,385,3.826,408,2.203,601,3.977,1148,2.933,1292,4.574,1305,4.295,1306,3.991,1553,3.774,1575,2.407,1585,3.774,1586,6.107,1587,5.46,1588,4.504,1589,4.504,1590,4.504,1591,4.504,1592,4.504,1593,4.504,1594,4.504,1595,4.504,1596,4.504,1597,4.504,1598,4.504,1599,4.504,1600,5.46,1601,4.504,1602,4.504,1603,4.504,1604,4.504,1605,4.504,1606,4.504,1607,4.504,1608,4.504]],["title/index.html",[37,0.148,1609,2.728,1610,2.728]],["body/index.html",[0,0.027,4,0.401,52,0.025,53,0.514,132,0.025,133,0.025,194,1.88,273,3.805,310,3.805,699,3.805,741,3.805,784,5.338,1505,3.805,1560,3.32,1611,5.487,1612,4.541,1613,5.896,1614,5.896,1615,3.805,1616,4.541,1617,4.541,1618,5.487,1619,6.27,1620,6.445,1621,4.541,1622,4.541,1623,4.541,1624,4.541,1625,4.541,1626,4.541,1627,4.541,1628,4.541,1629,4.541,1630,4.541,1631,4.541,1632,5.896,1633,5.896,1634,4.541,1635,6.124,1636,4.541,1637,4.541,1638,4.541,1639,4.541,1640,5.487,1641,5.487,1642,6.124,1643,4.541,1644,5.487,1645,5.487,1646,4.541,1647,4.541,1648,4.541,1649,4.541,1650,5.487,1651,4.541,1652,4.541,1653,4.541,1654,4.541,1655,5.896,1656,4.541,1657,4.541,1658,4.541,1659,3.32,1660,4.541,1661,4.541]],["title/modules.html",[1662,3.713]],["body/modules.html",[52,0.027,132,0.027,133,0.027,1662,4.416]],["title/overview.html",[1659,3.24]],["body/overview.html",[2,1.149,52,0.027,97,3.068,132,0.027,133,0.027,135,3.068,238,2.791,707,4.375,935,3.817,1659,3.817]],["title/properties.html",[38,0.3,1560,1.994]],["body/properties.html",[38,0.402,52,0.029,132,0.027,133,0.027,1615,4.395,1663,5.246]],["title/miscellaneous/variables.html",[1134,2.862,1575,1.458]],["body/miscellaneous/variables.html",[15,1.044,17,0.79,26,0.871,37,0.257,44,0.96,52,0.031,54,0.367,57,1.55,59,1.434,63,1.434,68,1.046,69,0.956,132,0.026,133,0.026,158,1.964,196,1.703,267,2.319,288,1.99,302,1.676,339,1.813,581,2.786,601,3.089,1106,3.974,1134,3.467,1333,3.974,1540,3.974,1541,5.032,1542,3.974,1543,4.718,1544,4.718,1575,2.535,1664,4.743,1665,4.743,1666,4.743,1667,4.743,1668,4.743,1669,4.743,1670,4.743,1671,4.743,1672,5.631,1673,4.743,1674,4.743,1675,4.743,1676,4.743,1677,4.743,1678,4.743]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":293,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1663,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["0665",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0d24",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["100960c55891.jpg?1650599698",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"overview.html":{}}}],["160",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18.0.0",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1616,"title":{},"body":{"index.html":{}}}],["19",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1f9c",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["20",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["23d3",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3213",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3835",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["4/4",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1268,"title":{},"body":{"components/PaymentComponent.html":{}}}],["4138",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4350",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a64",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d25",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d71",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4df2",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7e73",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["80",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["8c01",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8cbf",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f2b",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9475",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9798",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["99e9",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9eb7",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a23f",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a70e",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1475,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["acciones",{"_index":1446,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":1104,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["activo",{"_index":1213,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1403,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":525,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["additem",{"_index":1102,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1107,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1389,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":301,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":235,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":232,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":233,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":234,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":304,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1352,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":231,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":237,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1084,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1483,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":203,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1117,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":215,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":586,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('dirección",{"_index":202,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1331,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1473,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1219,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1376,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1085,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1116,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1334,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(this.submittext",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacenar",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":1601,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1613,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["apellido",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1625,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1636,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["attach",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1626,"title":{},"body":{"index.html":{}}}],["av",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b45f",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["base",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1502,"title":{},"body":{"injectables/UserService.html":{}}}],["beast",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfe9",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boolean",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1492,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1160,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1635,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1366,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1291,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1232,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1236,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1251,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1184,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1190,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1197,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1252,"title":{},"body":{"components/OrderListComponent.html":{}}}],["cambiar",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1292,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1336,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":1653,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1340,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1090,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1092,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1094,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1093,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1091,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1432,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1433,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":479,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1424,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":1119,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.id",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1358,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1121,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1120,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":593,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":492,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1070,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":1195,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":481,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":485,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":491,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":489,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1355,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1397,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1122,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carros",{"_index":1380,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1362,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":129,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1364,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1363,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1361,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:18",{"_index":1370,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:19",{"_index":1371,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:20",{"_index":1367,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:27",{"_index":1369,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:41",{"_index":1368,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1350,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1379,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:115",{"_index":1396,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1386,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":1393,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:51",{"_index":1401,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:67",{"_index":1391,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1360,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":579,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["cartitem.service",{"_index":1405,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":580,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1111,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":590,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cerrado",{"_index":1172,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1628,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1657,"title":{},"body":{"index.html":{}}}],["checkstock",{"_index":594,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":599,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1649,"title":{},"body":{"index.html":{}}}],["choose",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1614,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":1490,"title":{},"body":{"injectables/UserService.html":{}}}],["code",{"_index":1630,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1347,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1650,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1201,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1354,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1335,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":486,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1200,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1211,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1285,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["const",{"_index":288,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1385,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1103,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1234,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":1286,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contega",{"_index":1591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":211,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contiene",{"_index":1153,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["contrario",{"_index":1499,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasenas",{"_index":1602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1346,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["copy",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1215,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":228,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":520,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1192,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1459,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":521,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":1244,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1304,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["core/validators/validators",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["correlativo",{"_index":250,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":159,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":588,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1532,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["creado",{"_index":249,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":248,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":163,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":227,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":162,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:21",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:25",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:45",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:49",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:53",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:57",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:61",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":161,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":242,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":245,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":582,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":595,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createorupdatecarditem(card",{"_index":602,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1382,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1392,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1477,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1481,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1497,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1357,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1095,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1449,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{}}}],["damage",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1472,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1478,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1337,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1488,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1351,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definido",{"_index":1356,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1289,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":138,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1206,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":221,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["dependencies",{"_index":1561,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1494,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":475,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1214,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":478,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":477,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":474,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:103",{"_index":509,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:107",{"_index":511,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:111",{"_index":513,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:115",{"_index":515,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:119",{"_index":517,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":519,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:127",{"_index":495,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:16",{"_index":1188,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:17",{"_index":1189,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":1187,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":496,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":497,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":493,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":494,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:83",{"_index":499,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:87",{"_index":501,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:91",{"_index":503,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:95",{"_index":505,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:99",{"_index":507,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":473,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1182,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1253,"title":{},"body":{"components/OrderListComponent.html":{}}}],["dev",{"_index":1622,"title":{},"body":{"index.html":{}}}],["development",{"_index":1617,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direccion",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":205,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1634,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1639,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1447,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1638,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["double",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":1647,"title":{},"body":{"index.html":{}}}],["each",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":583,"title":{},"body":{"interfaces/CardItem.html":{}}}],["editar",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1498,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1444,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entre",{"_index":1339,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1576,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":206,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1394,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["esta",{"_index":1087,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1644,"title":{},"body":{"index.html":{}}}],["exile",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1212,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["existentes",{"_index":1487,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1329,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fabled",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":302,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["field1",{"_index":1606,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1629,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1156,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["finalizada",{"_index":1224,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":1202,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1204,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1203,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1199,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1205,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1207,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1198,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1505,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1210,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1281,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1283,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1282,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1279,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1301,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1303,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1293,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1287,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1288,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1295,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1297,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1298,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1300,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1278,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1465,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1463,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1464,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["four",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{}}}],["fucion",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":247,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1388,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1585,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1654,"title":{},"body":{"index.html":{}}}],["gain",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1632,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1612,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":243,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1383,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1395,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":596,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":604,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":597,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":608,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardname",{"_index":498,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":506,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":598,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":518,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":514,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":508,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1302,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1299,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1294,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":512,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1296,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":516,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":510,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":500,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getregion",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":502,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":504,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getting",{"_index":1609,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1479,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1495,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1656,"title":{},"body":{"index.html":{}}}],["god",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1071,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["habilidad",{"_index":584,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1445,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1225,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1471,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1365,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1422,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["heliod",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1655,"title":{},"body":{"index.html":{}}}],["henge",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1624,"title":{},"body":{"index.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["human",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(cardindex",{"_index":1428,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1194,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1431,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["if(search",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1425,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1263,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(this.authservice.getuser().id",{"_index":1082,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1470,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1372,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1217,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1221,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":523,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1513,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":488,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["implements",{"_index":1652,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":224,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1442,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":1603,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":1590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1086,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["inicio",{"_index":1209,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":236,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1191,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1185,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":134,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":135,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1440,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1258,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1229,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":1416,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["items",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{}}}],["jegantha",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["juego",{"_index":585,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":589,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1646,"title":{},"body":{"index.html":{}}}],["khm",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":139,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":217,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":1594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":212,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1099,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1101,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1100,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1098,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":1105,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:21",{"_index":1242,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:22",{"_index":1243,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:23",{"_index":1235,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:27",{"_index":1109,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:30",{"_index":1239,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:36",{"_index":1241,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:39",{"_index":1108,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:41",{"_index":1238,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:51",{"_index":1237,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1097,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":226,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":216,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["lo",{"_index":1341,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1273,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["loguear",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1511,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1507,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1067,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1069,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1068,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1066,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:19",{"_index":1073,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:27",{"_index":1075,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:31",{"_index":1077,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:36",{"_index":1074,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:21",{"_index":1454,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:22",{"_index":1451,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:24",{"_index":220,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:26",{"_index":1452,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:35",{"_index":223,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:48",{"_index":1455,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:52",{"_index":1456,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:56",{"_index":1457,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:60",{"_index":1458,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:64",{"_index":1453,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":490,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":241,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{}}}],["manejo",{"_index":222,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["many",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":291,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":1595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1343,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1404,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1342,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["merfolk",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":1596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1344,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1575,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":1605,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":240,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{}}}],["modules",{"_index":1662,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["much",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1152,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1155,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1154,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1623,"title":{},"body":{"index.html":{}}}],["need",{"_index":1651,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":287,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":299,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":294,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":296,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":297,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":298,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":295,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":289,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1406,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1408,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1410,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1409,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1620,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1491,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":204,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":156,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":1592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":213,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":214,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["obetener",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["objeto",{"_index":137,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":207,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["obteener",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["ocurrido",{"_index":1220,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":1588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":1593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1157,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1223,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1228,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1249,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1250,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1230,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1226,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1658,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1659,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1560,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1661,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1272,"title":{},"body":{"components/PaymentComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params.get('categoria",{"_index":1112,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":1113,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["passage",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordvalidator",{"_index":1305,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1255,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1257,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1256,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":122,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1353,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1503,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1648,"title":{},"body":{"index.html":{}}}],["play",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":606,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1276,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":487,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":1271,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1611,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1509,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":210,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":482,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1510,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":164,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1270,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1399,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1274,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1398,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["redirecciones",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["redirect",{"_index":1259,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirigiendo",{"_index":1275,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1660,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1387,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":1589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":218,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1328,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":125,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1284,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":124,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1280,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["región",{"_index":208,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1627,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":1607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1486,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1489,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1443,"title":{},"body":{"interfaces/User.html":{}}}],["rest",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["result.filter(carditem",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["results",{"_index":132,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1441,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1106,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":476,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{}}}],["routeroutlet",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1619,"title":{},"body":{"index.html":{}}}],["running",{"_index":1640,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1161,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1306,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1314,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1631,"title":{},"body":{"index.html":{}}}],["scute",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":1604,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":609,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1506,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["seleccionada",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["seleccionado",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["selecionada",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["selected",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1420,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1429,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1231,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1419,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1435,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1427,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1426,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1434,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1430,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1233,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1240,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1621,"title":{},"body":{"index.html":{}}}],["server",{"_index":1618,"title":{},"body":{"index.html":{}}}],["service",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesión",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":483,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setear",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":484,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1072,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1076,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1265,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1437,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":420,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1417,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":1264,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1418,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":127,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1390,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1381,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":341,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1186,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":591,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":1597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sistema",{"_index":1439,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":581,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":209,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":1586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":160,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":472,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1096,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":136,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":578,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1349,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1438,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":239,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":246,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:107",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:124",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:134",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:143",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:156",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:167",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:178",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:186",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:194",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:202",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:210",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":592,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":610,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":603,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":605,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":600,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1378,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1474,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1493,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1512,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:53",{"_index":1482,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:83",{"_index":1496,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:94",{"_index":1501,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:25",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:58",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1151,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1165,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1158,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1162,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1164,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1159,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1181,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1254,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:17",{"_index":1260,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1261,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1262,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1277,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1359,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1448,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1610,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1637,"title":{},"body":{"index.html":{}}}],["strike",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["submittext",{"_index":480,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subtotal",{"_index":1196,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1118,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sun",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["suscribible",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1163,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1345,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tener",{"_index":1338,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":1587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":1643,"title":{},"body":{"index.html":{}}}],["testing",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1642,"title":{},"body":{"index.html":{}}}],["texto",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":200,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":198,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":199,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":303,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":300,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":290,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":1115,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":201,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1216,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":229,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":522,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1461,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":550,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1083,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1166,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.registrationform.get('username')?.value,this.registrationform.get('password')?.value",{"_index":1330,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1171,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1080,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1222,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":526,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":538,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":551,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":542,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":555,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":548,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":546,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":543,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":556,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":545,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":558,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":547,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":544,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":557,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":539,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":552,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":540,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":553,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":541,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":554,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.createorupdatecarditem(this.selectedcard",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1421,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":1114,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":1079,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["this.cardlist",{"_index":1078,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.createshoppingcar(userid",{"_index":1423,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1193,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1373,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1218,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1460,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1466,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":1168,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1169,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.gotodetail",{"_index":1081,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1374,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":1167,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1266,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1245,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":1246,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.redirect",{"_index":1267,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1307,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1320,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1318,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1327,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1315,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1324,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1316,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1325,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1319,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1326,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1317,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1323,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1321,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1110,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1170,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1089,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1088,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1269,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1377,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":527,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":531,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":537,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":535,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":532,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":549,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":534,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":536,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":533,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":528,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":529,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":530,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1248,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1436,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1412,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1411,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1407,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1414,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":1247,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.submittext",{"_index":524,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1375,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1462,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1469,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1467,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1468,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":230,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.userservice.createuser",{"_index":1322,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tipo",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["titan",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1183,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1415,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1641,"title":{},"body":{"index.html":{}}}],["unless",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":244,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1402,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1413,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1504,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1450,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1384,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1400,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1480,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1500,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":587,"title":{},"body":{"interfaces/CardItem.html":{}}}],["uro",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1484,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1633,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":292,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1514,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1508,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":219,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1476,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":340,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uso",{"_index":1333,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{}}}],["vacio",{"_index":607,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1485,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1208,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["validaciones",{"_index":1290,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":601,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1311,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1313,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1310,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1309,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1308,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1312,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["valores",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":225,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1134,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1227,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["version",{"_index":1615,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1645,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1348,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1332,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:57\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  addressForm!: FormGroup;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de usuario\n\n                                                        \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de direcciones\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:178\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:210\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n        this.loggedIn.next(false);\n        return false;\n    }\n\n    this.setUserIdToShoppingCart();\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:111\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:115\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:119\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:123\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardItemService } from '../core/services/cartitem.service';\n\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n\n  cardForm!: FormGroup;\n  submitText: string = '';\n  selectedCard: CardItem = {} as CardItem;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService,\n  ){}\n\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    const result = this.cardItemService.createOrUpdateCardItem(this.selectedCard);\n    if(result){\n      alert(this.submitText + ' con éxito');\n    }else{\n      alert(this.submitText + ' con error');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n\n  cardList: CardItem[] = [];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService\n  ){}\n\n  ngOnInit(): void {\n    this.cardList = this.cardItemService.getCardsList();\n  }\n\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n\n  carditemList: CardItem[] = [];\n\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:25\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:51\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:58\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * \n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  @Input() currentShoppingCart: ShoppingCart;\n  @Input() showImage: boolean = false;\n  total: number = 0;\n\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n\n  orderList: ShoppingCart[] = [];\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  isSelected: boolean = false;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  isPaymentSuccess: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de usuario\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      const result = this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n      if(result){\n        alert('Se ha registrado con exito');\n        this.authService.login(this.registrationForm.get('username')?.value,this.registrationForm.get('password')?.value);\n        this.router.navigate(['/']);\n      }else{\n        alert('El nombre de usuario ya esta en uso');\n      }\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  total: number = 0;\n  hasItems: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(private cardItemService: CardItemService){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:60\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n\n  updateForm!: FormGroup;\n  currentUser: User = {} as User;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
