var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.082,1,0.718]],["body/components/AccountManagementComponent.html",[0,0.137,1,1.275,2,1.195,3,0.419,4,0.368,5,1.015,6,1.015,7,1.015,8,0.368,9,3.184,10,3.184,11,2.211,12,1.015,13,1.725,14,1.725,15,1.627,16,1.435,17,1.3,18,0.915,19,1.3,20,1.275,21,1.275,22,1.275,23,1.3,24,3.548,25,1.3,26,3.548,27,0.876,28,0.032,29,0.587,30,0.606,31,2.459,32,4.887,33,0.918,34,2.769,35,1.39,36,2.769,37,3.814,38,0.419,39,0.649,40,4.08,41,4.747,42,5.687,43,3.548,44,5.687,45,4.887,46,3.548,47,2.833,48,1.015,49,1.3,50,1.3,51,1.015,52,1.39,53,1.015,54,0.606,55,1.3,56,0.855,57,1.015,58,0.855,59,1.015,60,0.855,61,0.649,62,1.3,63,0.855,64,1.015,65,0.855,66,1.015,67,0.855,68,1.015,69,0.855,70,1.015,71,0.855,72,1.015,73,0.855,74,1.015,75,1.015,76,0.855,77,0.933,78,1.015,79,1.015,80,1.015,81,0.024,82,0.024]],["title/interfaces/Address.html",[33,0.545,83,1.29]],["body/interfaces/Address.html",[3,0.445,4,0.39,8,0.39,28,0.033,30,0.629,33,0.864,38,0.445,54,0.72,81,0.025,82,0.025,83,1.633,84,2.349,85,3.383,86,1.633,87,2.628,88,1.882,89,2.942,90,2.434,91,2.612,92,2.612,93,1.443,94,2.942,95,2.13,96,2.612,97,0.288,98,0.489,99,3.748,100,2.929,101,1.869,102,3.938,103,3.371,104,2.157,105,0.51,106,3.274,107,4.551,108,2.229,109,2.046,110,3.687,111,3.687,112,5.079,113,2.046,114,2.229,115,5.079,116,2.046,117,1.882]],["title/components/AddressCreateComponent.html",[0,0.082,56,0.718]],["body/components/AddressCreateComponent.html",[0,0.119,1,0.647,2,0.99,3,0.317,4,0.278,5,0.767,6,0.767,7,0.767,8,0.278,12,0.767,13,1.668,14,1.668,15,0.767,16,0.767,17,1.077,18,0.758,19,1.077,20,0.647,21,0.647,22,0.647,23,1.077,25,1.077,27,0.782,28,0.033,29,0.444,30,0.357,33,0.989,35,1.144,38,0.514,39,0.491,48,0.767,49,1.077,50,1.077,51,0.767,52,1.241,53,0.767,54,0.706,55,1.077,56,1.138,57,0.767,58,0.647,59,0.767,60,0.647,61,0.491,62,1.077,63,0.647,64,0.767,65,0.647,66,0.767,67,0.647,68,0.767,69,0.647,70,0.767,71,0.647,72,0.767,73,0.647,74,0.767,75,0.767,76,0.647,77,0.705,78,0.767,79,0.767,80,0.767,81,0.02,82,0.02,97,0.205,98,0.39,99,3.272,101,1.468,102,3.272,105,0.338,106,3.272,118,3.809,119,3.809,120,2.093,121,3.381,122,2.713,123,3.398,124,1.596,125,4.05,126,4.05,127,4.681,128,0.831,129,1.731,130,3.272,131,2.61,132,0.767,133,1.382,134,1.475,135,1.088,136,4.05,137,0.54,138,0.54,139,2.884,140,0.758,141,1.144,142,2.884,143,2.943,144,2.884,145,2.884,146,2.884,147,2.884,148,2.884,149,2.884,150,2.884,151,2.884,152,0.906,153,3.1,154,1.859,155,3.398,156,3.398,157,3.017,158,1.516,159,1.068,160,1.382,161,2.884,162,2.347,163,3.272,164,2.94,165,3.398,166,1.826,167,2.884,168,2.884,169,2.884,170,2.884,171,2.884,172,2.884,173,2.884,174,2.61,175,2.61,176,3.685,177,1.381,178,3.685,179,2.093,180,2.093,181,2.884,182,0.689,183,2.94,184,2.884,185,2.884,186,3.381,187,4.853,188,3.056,189,3.747,190,4.238,191,4.025,192,3.574,193,4.025,194,3.685,195,3.685,196,4.05,197,2.348]],["title/components/AddressManagementComponent.html",[0,0.082,21,0.718]],["body/components/AddressManagementComponent.html",[0,0.133,1,0.796,2,1.14,3,0.39,4,0.342,5,0.944,6,0.944,7,0.944,8,0.342,11,2.056,12,0.944,13,1.711,14,1.711,15,0.944,16,1.386,17,1.24,18,0.873,19,1.24,20,0.796,21,1.241,22,0.796,23,1.24,24,3.385,25,1.24,26,3.385,27,0.885,28,0.033,29,0.546,30,0.44,33,1.086,34,4.016,35,1.273,38,0.39,39,0.604,48,0.944,49,1.24,50,1.24,51,0.944,52,1.352,53,0.944,54,0.645,55,1.24,56,1.241,57,0.944,58,0.796,59,0.944,60,0.796,61,0.604,62,1.24,63,0.796,64,0.944,65,0.796,66,0.944,67,0.796,68,0.944,69,0.796,70,0.944,71,0.796,72,0.944,73,0.796,74,0.944,75,0.944,76,0.796,77,0.867,78,0.944,79,0.944,80,0.944,81,0.023,82,0.023,97,0.252,98,0.449,105,0.389,106,3.005,118,3.566,119,2.287,124,1.776,128,0.957,129,1.887,132,0.944,133,1.7,134,1.569,135,0.975,137,0.664,138,0.664,140,0.664,141,1.14,152,1.114,159,1.314,160,1.7,182,0.604,187,3.892,190,3.892,195,3.385,198,5.208,199,4.663,200,3.548,201,0.796,202,3.548,203,3.548,204,3.548,205,3.548,206,2.961,207,4.663,208,4.663,209,4.663,210,4.663]],["title/injectables/AddressService.html",[211,1.092,212,2.065]],["body/injectables/AddressService.html",[3,0.3,4,0.263,8,0.263,27,0.601,28,0.033,29,0.421,30,0.339,33,1.02,38,0.3,39,0.465,43,4.162,54,0.75,81,0.019,82,0.019,86,2.111,87,2.175,88,2.019,90,2.376,92,2.514,93,1.461,94,3.598,95,2.864,96,2.514,97,0.194,98,0.376,99,3.762,100,2.748,101,1.816,102,3.861,103,3.431,104,1.99,105,0.413,106,2.514,107,4.392,108,1.711,109,1.571,110,2.831,113,1.997,114,1.711,117,1.836,128,0.8,135,0.928,137,0.851,138,0.851,140,0.981,141,0.668,166,1.428,177,0.932,182,0.465,188,2.05,201,0.613,206,4.375,211,1.33,212,2.514,213,1.437,214,2.282,215,2.261,216,3.513,217,3.9,218,3.255,219,3.9,220,4.957,221,3.9,222,2.734,223,3.159,224,2.831,225,2.019,226,3.9,227,3.255,228,2.831,229,3.9,230,2.864,231,3.9,232,2.019,233,3.9,234,2.734,235,3.9,236,2.261,237,3.9,238,3.255,239,2.376,240,3.9,241,2.734,242,3.9,243,2.514,244,2.831,245,2.831,246,1.013,247,2.261,248,2.261,249,2.05,250,2.831,251,3.255,252,3.9,253,3.378,254,4.957,255,3.255,256,4.957,257,3.9,258,3.9,259,3.598,260,3.9,261,4.957,262,2.734,263,3.9,264,3.9,265,2.261,266,2.282,267,1.585,268,1.437,269,3.251,270,2.734,271,1.984,272,2.734,273,1.984,274,1.984,275,0.932,276,2.734,277,2.734,278,2.734,279,2.734,280,2.734,281,2.734,282,2.734,283,2.734,284,1.101,285,2.734,286,2.734]],["title/components/AppComponent.html",[0,0.082,58,0.718]],["body/components/AppComponent.html",[0,0.14,1,0.888,2,1.224,3,0.435,4,0.382,5,1.054,6,1.054,7,1.054,8,0.382,12,1.054,13,1.732,14,1.732,15,1.054,16,1.054,17,1.332,18,0.937,19,1.332,20,0.888,21,0.888,22,0.888,23,1.332,25,1.332,27,0.845,28,0.033,29,0.61,30,0.491,33,0.852,35,1.342,38,0.435,39,0.674,48,1.054,49,1.332,50,1.332,51,1.054,52,1.41,53,1.054,54,0.62,55,1.332,56,0.888,57,1.054,58,1.293,59,1.054,60,0.888,61,0.674,62,1.332,63,0.888,64,1.054,65,1.293,66,1.054,67,0.888,68,1.054,69,0.888,70,1.054,71,0.888,72,1.054,73,0.888,74,1.054,75,1.054,76,0.888,77,0.968,78,1.054,79,1.054,80,1.054,81,0.025,82,0.025,97,0.281,98,0.482,104,1.351,105,0.33,135,0.742,182,0.674,201,0.888,268,2.631,287,3.306,288,5.489,289,5.006,290,5.006,291,5.489,292,4.179,293,3.961,294,1.596,295,3.961]],["title/injectables/AuthService.html",[134,0.852,211,1.092]],["body/injectables/AuthService.html",[3,0.227,4,0.199,8,0.199,18,0.387,27,0.852,28,0.033,29,0.318,30,0.635,33,0.656,38,0.227,39,0.352,43,3.138,54,0.655,77,0.505,81,0.016,82,0.016,86,1.742,88,2.115,90,2.737,92,2.042,93,1.392,97,0.147,98,0.305,99,2.787,101,1.6,102,2.787,104,2.131,105,0.427,108,1.391,111,2.3,113,1.982,114,1.897,116,1.982,117,1.823,128,0.65,132,0.843,134,0.843,135,1.122,137,0.921,138,0.921,140,1.148,141,0.942,162,2.159,166,1.737,177,0.704,182,0.736,197,1.837,201,0.969,211,1.081,212,3.302,213,1.086,215,1.837,218,2.645,223,3.31,225,1.174,230,1.666,232,1.803,236,1.837,239,2.359,246,1.898,247,2.852,248,2.506,249,2.908,265,1.837,266,1.724,267,1.197,268,1.086,269,3.262,275,1.081,284,0.832,294,0.832,296,1.724,297,2.645,298,3.169,299,3.169,300,3.169,301,3.169,302,2.61,303,2.485,304,3.855,305,3.855,306,3.855,307,2.645,308,4.323,309,4.323,310,4.323,311,4.323,312,4.323,313,3.609,314,2.645,315,3.609,316,3.169,317,3.169,318,1.724,319,2.359,320,2.969,321,2.969,322,3.169,323,3.169,324,2.066,325,2.3,326,2.586,327,2.908,328,3.064,329,2.787,330,5.532,331,4.412,332,3.169,333,3.169,334,2.042,335,3.169,336,2.645,337,2.042,338,3.169,339,2.066,340,2.066,341,3.138,342,2.066,343,2.066,344,2.066,345,2.066,346,2.645,347,2.066,348,3.169,349,2.506,350,3.609,351,2.645,352,3.169,353,2.506,354,2.066,355,1.666,356,2.066,357,3.169,358,2.703,359,2.703,360,2.066,361,2.235,362,3.169,363,2.506,364,2.066,365,3.169,366,2.787,367,2.798,368,4.663,369,1.553,370,2.066,371,3.169,372,2.066,373,2.066,374,2.066,375,1.724,376,1.724,377,2.066,378,1.724,379,1.086,380,1.724,381,1.499,382,1.331,383,3.855,384,2.066,385,2.066,386,3.855,387,3.169,388,3.169,389,2.066,390,2.066,391,2.066,392,2.066,393,2.066,394,2.066,395,2.066,396,1.331,397,3.169,398,1.897,399,3.169,400,2.066,401,2.066,402,2.066,403,2.066,404,2.066,405,2.066,406,2.066,407,2.066,408,2.066,409,2.066]],["title/interfaces/CardItem.html",[61,0.545,83,1.29]],["body/interfaces/CardItem.html",[3,0.354,4,0.311,8,0.311,28,0.033,38,0.354,61,0.744,81,0.022,82,0.022,83,1.299,84,1.869,86,1.299,87,2.178,88,1.839,89,2.34,90,3.131,91,2.078,93,1.481,97,0.229,98,0.421,100,2.751,101,1.831,104,2.217,105,0.523,108,1.919,109,2.145,110,3.175,113,1.762,116,1.762,117,1.194,225,1.194,265,2.535,326,3.416,366,2.819,410,2.691,411,2.078,412,4.646,413,1.869,414,2.078,415,3.864,416,4.444,417,4.444,418,4.444,419,4.444,420,4.444,421,4.444,422,4.444,423,3.864,424,4.444,425,4.444,426,4.444,427,5.739,428,4.374,429,5.324,430,3.651,431,4.374,432,4.374,433,4.374,434,4.374,435,4.374,436,4.374,437,3.175,438,4.374,439,4.374]],["title/injectables/CardItemService.html",[211,1.092,440,1.857]],["body/injectables/CardItemService.html",[3,0.089,4,0.189,8,0.078,27,0.223,28,0.033,29,0.124,35,0.583,38,0.089,39,0.138,46,3.051,47,3.495,52,0.198,54,0.243,61,0.737,81,0.007,82,0.007,86,1.103,87,1.335,88,1.722,93,1.296,97,0.057,98,0.139,100,2.79,101,1.021,104,1.037,105,0.254,108,1.046,109,0.96,113,0.582,114,1.046,116,0.582,117,0.883,121,4.246,128,0.297,135,0.57,137,0.367,138,0.367,140,0.698,141,0.198,166,0.955,175,3.279,182,0.333,197,0.838,201,0.181,211,0.493,213,0.425,215,0.838,216,1.536,223,2.264,225,0.535,228,1.049,230,1.855,246,0.535,247,0.838,248,0.838,249,1.253,253,1.961,259,3.227,267,0.469,268,0.425,269,1.382,275,1.991,302,0.86,326,2.532,329,0.931,334,1.766,337,1.536,341,2.208,346,1.206,411,2.996,412,3.711,415,4.196,416,4.825,417,4.825,418,4.825,419,4.825,420,4.825,421,4.825,422,4.825,423,4.196,424,4.825,425,4.825,426,4.825,430,1.99,440,0.838,441,0.675,442,1.635,443,2.383,444,1.445,445,1.445,446,1.445,447,2.383,448,0.808,449,1.445,450,0.808,451,1.049,452,1.445,453,0.808,454,2.562,455,1.206,456,1.206,457,1.445,458,2.397,459,0.808,460,1.445,461,1.445,462,2.383,463,1.99,464,1.445,465,1.445,466,1.445,467,0.808,468,2.383,469,1.445,470,1.445,471,4.446,472,4.446,473,4.446,474,1.445,475,5.78,476,1.445,477,5.196,478,3.042,479,5.377,480,3.53,481,1.445,482,5.086,483,4.446,484,6.114,485,1.445,486,1.445,487,3.042,488,3.53,489,2.383,490,1.445,491,3.53,492,1.445,493,1.445,494,1.445,495,4.204,496,3.042,497,3.53,498,3.042,499,1.445,500,1.445,501,1.445,502,3.53,503,3.53,504,3.53,505,3.53,506,1.445,507,2.946,508,3.042,509,1.445,510,4.961,511,5.196,512,3.53,513,1.445,514,1.445,515,3.905,516,3.53,517,2.383,518,3.042,519,5.086,520,5.086,521,4.446,522,3.042,523,3.042,524,1.445,525,3.905,526,2.383,527,4.204,528,1.445,529,2.383,530,2.383,531,1.445,532,3.042,533,4.647,534,2.383,535,2.383,536,1.445,537,1.445,538,3.26,539,2.383,540,1.445,541,2.383,542,1.445,543,3.53,544,1.445,545,3.905,546,1.445,547,3.53,548,3.042,549,3.53,550,4.446,551,2.383,552,1.445,553,1.445,554,1.445,555,1.445,556,3.042,557,1.445,558,1.445,559,1.445,560,1.445,561,1.445,562,1.445,563,1.049,564,2.383,565,4.446,566,1.445,567,3.53,568,1.445,569,3.26,570,1.445,571,1.445,572,1.445,573,2.383,574,2.383,575,2.383,576,2.383,577,1.445,578,1.445,579,1.445,580,1.445,581,1.445,582,4.446,583,4.141,584,3.042,585,2.383,586,1.445,587,1.445,588,2.383,589,3.53,590,3.53,591,3.042,592,1.445,593,1.445,594,2.383,595,1.445,596,1.445,597,1.445,598,1.445,599,1.445,600,2.383,601,1.445,602,3.042,603,1.99,604,2.383,605,2.539,606,2.383,607,2.383,608,1.445,609,3.53,610,1.445,611,1.445,612,2.383,613,3.53,614,3.042,615,1.445,616,2.383,617,2.383,618,2.383,619,1.445,620,1.445,621,1.445,622,1.445,623,2.383,624,1.445,625,1.445,626,2.383,627,1.445,628,2.383,629,1.445,630,1.445,631,1.445,632,1.445,633,2.383,634,4.204,635,1.445,636,2.383,637,1.445,638,1.445,639,3.042,640,1.445,641,1.445,642,3.905,643,1.445,644,1.445,645,3.042,646,1.445,647,1.445,648,4.446,649,1.445,650,1.445,651,1.445,652,2.383,653,2.383,654,2.383,655,2.383,656,1.445,657,1.445,658,4.446,659,1.445,660,3.042,661,1.445,662,3.53,663,2.383,664,3.042,665,3.042,666,3.042,667,3.042,668,1.445,669,3.042,670,1.445,671,2.383,672,4.204,673,3.53,674,1.445,675,1.445,676,1.445,677,1.445,678,1.445,679,1.445,680,1.445,681,1.445,682,1.445,683,3.042,684,1.445,685,1.445,686,2.383,687,1.445,688,1.206,689,2.383,690,1.445,691,1.445,692,1.445,693,1.445,694,2.383,695,1.445,696,1.445,697,1.445,698,1.445,699,2.383,700,2.383,701,1.445,702,1.445,703,1.445,704,1.445,705,2.383,706,1.445,707,1.206,708,2.383,709,3.042,710,1.206,711,2.383,712,3.042,713,3.53,714,3.53,715,1.445,716,1.445,717,1.445,718,1.445,719,2.383,720,1.445,721,3.905,722,1.445,723,3.53,724,2.383,725,2.383,726,1.445,727,1.445,728,1.445,729,1.445,730,1.445,731,1.445,732,2.383,733,1.445,734,1.445,735,1.445,736,3.042,737,1.445,738,1.445,739,1.445,740,1.445,741,1.445,742,1.445,743,3.042,744,3.042,745,1.445,746,1.445,747,1.445,748,1.445,749,1.445,750,1.445,751,1.445,752,1.445,753,1.445,754,1.445,755,1.445,756,1.445,757,1.445,758,1.445,759,3.53,760,1.445,761,2.383,762,2.383,763,1.445,764,1.445,765,1.445,766,1.445,767,1.445,768,2.383,769,1.445,770,1.445,771,1.445,772,1.445,773,1.445,774,1.445,775,1.445,776,1.445,777,1.445,778,1.445,779,1.445,780,1.445,781,1.445,782,1.445,783,1.445,784,1.445,785,1.445,786,1.445,787,1.445,788,1.445,789,1.445,790,1.445,791,1.445,792,1.445,793,1.445,794,0.808,795,0.808,796,1.206,797,2.287,798,1.445,799,0.808,800,0.808,801,0.675,802,0.808,803,0.808,804,0.808,805,0.675,806,0.808]],["title/components/CarditemListComponent.html",[0,0.082,60,0.718]],["body/components/CarditemListComponent.html",[0,0.125,1,0.71,2,1.056,3,0.348,4,0.305,5,0.842,6,0.842,7,0.842,8,0.305,12,0.842,13,1.688,14,1.688,15,0.842,16,0.842,17,1.149,18,0.809,19,1.149,20,0.71,21,0.71,22,0.71,23,1.149,25,1.149,27,0.879,28,0.033,29,0.487,30,0.392,33,0.735,35,1.202,38,0.348,39,0.539,48,0.842,49,1.149,50,1.149,51,0.842,52,1.292,53,0.842,54,0.655,55,1.149,56,0.71,57,0.842,58,0.71,59,0.842,60,1.185,61,1.038,62,1.149,63,0.71,64,0.842,65,0.71,66,0.842,67,0.71,68,0.842,69,0.71,70,0.842,71,0.71,72,0.842,73,0.71,74,0.842,75,0.842,76,0.71,77,0.774,78,0.842,79,0.842,80,0.842,81,0.021,82,0.021,88,1.173,97,0.225,98,0.416,101,1.422,104,1.677,105,0.41,116,1.981,124,1.677,128,0.886,129,1.802,132,1.149,134,1.554,135,0.989,137,0.809,138,0.809,140,0.809,141,1.202,152,0.994,159,1.173,177,1.677,182,0.539,197,2.504,201,0.71,294,1.275,302,2.158,327,1.664,329,2.04,334,2.04,337,2.04,349,1.835,415,4.014,440,3.386,442,4.105,458,3.136,796,3.606,797,2.642,807,4.616,808,4.616,809,2.297,810,3.606,811,3.606,812,3.606,813,4.32,814,3.165,815,5.283,816,4.32,817,3.606,818,4.32,819,3.165,820,3.165,821,2.297,822,3.165,823,3.165,824,4.32,825,3.165,826,3.165,827,3.165,828,3.165,829,3.165,830,3.165,831,1.835,832,3.165,833,3.165,834,3.165,835,4.32,836,4.32,837,4.32,838,2.784,839,4.32]],["title/components/LoginComponent.html",[0,0.082,63,0.718]],["body/components/LoginComponent.html",[0,0.127,1,0.731,2,1.078,3,0.358,4,0.314,5,0.868,6,0.868,7,0.868,8,0.314,12,0.868,13,1.694,14,1.694,15,0.868,16,0.868,17,1.173,18,0.825,19,1.173,20,0.731,21,0.731,22,0.731,23,1.173,25,1.173,27,0.861,28,0.033,29,0.502,30,0.404,33,0.75,35,1.221,38,0.358,39,0.555,48,0.868,49,1.173,50,1.173,51,0.868,52,1.308,53,0.868,54,0.619,55,1.173,56,0.731,57,0.868,58,0.731,59,0.868,60,0.731,61,0.555,62,1.173,63,1.2,64,0.868,65,0.731,66,0.868,67,0.731,68,0.868,69,0.731,70,0.868,71,0.731,72,0.868,73,0.731,74,0.868,75,0.868,76,0.731,77,0.797,78,0.868,79,0.868,80,0.868,81,0.022,82,0.022,93,1.291,97,0.231,98,0.425,105,0.368,109,2.32,122,2.895,124,1.703,128,0.905,129,1.824,130,3.448,131,2.842,132,0.868,133,1.563,134,1.487,135,1.078,137,0.611,138,0.611,140,0.825,141,1.308,143,3.101,152,1.024,153,2.895,154,2.102,158,1.714,159,1.208,160,1.563,162,2.191,163,2.842,166,1.385,188,2.317,189,3.448,225,1.982,232,1.964,294,1.314,314,3.68,319,2.822,336,4.465,349,1.89,350,2.722,353,3.101,355,2.812,396,2.102,831,1.89,840,2.722,841,4.408,842,4.408,843,4.994,844,4.408,845,3.261,846,3.261,847,2.367,848,3.261,849,2.722,850,3.261,851,3.261,852,3.261,853,3.261,854,3.261,855,3.261,856,3.261,857,3.261,858,4.915,859,3.261,860,3.883,861,5.349,862,3.68]],["title/components/NavbarComponent.html",[0,0.082,65,0.718]],["body/components/NavbarComponent.html",[0,0.127,1,0.731,2,1.078,3,0.358,4,0.314,5,0.868,6,0.868,7,0.868,8,0.314,12,0.868,13,1.694,14,1.694,15,0.868,16,0.868,17,1.173,18,0.825,19,1.173,20,0.731,21,0.731,22,0.731,23,1.173,25,1.173,27,0.861,28,0.033,29,0.502,30,0.404,33,0.75,35,1.221,38,0.358,39,0.555,40,3.68,48,0.868,49,1.173,50,1.173,51,0.868,52,1.308,53,0.868,54,0.619,55,1.173,56,0.731,57,0.868,58,0.731,59,0.868,60,0.731,61,0.555,62,1.173,63,0.731,64,0.868,65,1.2,66,0.868,67,0.731,68,0.868,69,0.731,70,0.868,71,0.731,72,0.868,73,0.731,74,0.868,75,0.868,76,0.731,77,0.797,78,0.868,79,0.868,80,0.868,81,0.022,82,0.022,93,0.989,97,0.231,98,0.425,105,0.417,122,2.895,124,1.703,128,0.905,129,1.824,132,0.868,134,1.566,135,1.078,137,0.611,138,0.611,140,0.935,141,1.308,143,3.101,152,1.024,153,2.555,158,1.714,159,1.208,160,1.563,162,1.935,177,1.112,182,0.555,201,0.731,232,1.503,246,1.633,284,1.776,294,1.314,302,1.431,313,4.169,315,4.465,318,2.722,319,2.76,327,2.317,328,2.555,349,1.89,367,2.367,458,3.2,463,3.68,583,4.465,801,2.722,831,1.89,862,3.68,863,2.722,864,4.408,865,4.994,866,4.408,867,4.408,868,4.994,869,5.349,870,4.408,871,3.261,872,3.261,873,3.261,874,3.261,875,3.261,876,3.261,877,3.261,878,3.261,879,3.261,880,3.261,881,3.261,882,4.994,883,5.349,884,4.408,885,4.408,886,4.408,887,4.408,888,4.408,889,3.68,890,4.408]],["title/components/OrderDetailComponent.html",[0,0.082,67,0.718]],["body/components/OrderDetailComponent.html",[0,0.13,1,0.758,2,1.104,3,0.371,4,0.326,5,0.899,6,0.899,7,0.899,8,0.326,12,0.899,13,1.702,14,1.702,15,0.899,16,0.899,17,1.201,18,0.845,19,1.201,20,0.758,21,0.758,22,0.758,23,1.201,25,1.201,27,0.836,28,0.033,29,0.521,30,0.419,33,0.769,35,1.494,38,0.371,39,0.575,48,0.899,49,1.201,50,1.201,51,0.899,52,1.327,53,0.899,54,0.63,55,1.201,56,0.758,57,0.899,58,0.758,59,0.899,60,0.758,61,0.963,62,1.201,63,0.758,64,0.899,65,0.758,66,0.899,67,1.217,68,0.899,69,0.758,70,0.899,71,0.758,72,0.899,73,0.758,74,0.899,75,0.899,76,0.758,77,0.826,78,0.899,79,0.899,80,0.899,81,0.022,82,0.022,97,0.24,98,0.435,101,1.569,105,0.424,124,1.734,128,0.927,132,1.353,135,1.016,137,0.633,138,0.633,140,0.633,152,1.061,166,1.061,182,0.575,201,0.758,275,1.734,303,3.278,326,2.373,369,2.186,379,1.777,398,1.483,437,3.278,821,2.453,838,3.751,891,3.645,892,3.645,893,2.821,894,4.515,895,4.515,896,4.515,897,3.645,898,4.105,899,4.515,900,4.515,901,3.38,902,3.769,903,3.38,904,2.453,905,4.515,906,2.179,907,2.453,908,2.821,909,2.821,910,4.105,911,4.105,912,3.278,913,3.769,914,3.769,915,4.515]],["title/components/OrderFinishComponent.html",[0,0.082,69,0.718]],["body/components/OrderFinishComponent.html",[0,0.13,1,0.765,2,1.111,3,0.375,4,0.329,5,0.908,6,0.908,7,0.908,8,0.329,12,0.908,13,1.704,14,1.704,15,0.908,16,0.908,17,1.209,18,0.851,19,1.209,20,0.765,21,0.765,22,0.765,23,1.209,25,1.209,27,0.899,28,0.033,29,0.526,30,0.423,33,0.774,35,1.512,38,0.375,39,0.581,41,3.794,48,0.908,49,1.209,50,1.209,51,0.908,52,1.332,53,0.908,54,0.633,55,1.209,56,0.765,57,0.908,58,0.765,59,0.908,60,0.765,61,0.581,62,1.209,63,0.765,64,0.908,65,0.765,66,0.908,67,1.222,68,0.908,69,1.222,70,0.908,71,0.765,72,0.908,73,0.765,74,0.908,75,0.908,76,0.765,77,0.834,78,0.908,79,0.908,80,0.908,81,0.022,82,0.022,97,0.242,98,0.438,105,0.379,128,0.933,129,1.858,132,1.209,133,1.636,134,1.552,135,0.957,137,0.639,138,0.639,140,0.639,141,0.834,159,1.264,182,0.581,201,0.765,239,1.636,275,1.164,294,1.375,302,1.994,303,3.294,319,2.855,363,1.978,369,2.351,379,1.794,382,2.2,396,2.2,398,1.498,891,3.512,892,2.2,906,2.2,907,2.477,916,4.548,917,2.849,918,4.545,919,4.545,920,4.545,921,4.545,922,3.413,923,2.849,924,3.413,925,2.477,926,2.849,927,2.477,928,2.849,929,2.849,930,2.849,931,3.413,932,2.849,933,3.413,934,3.794,935,4.545,936,4.545,937,4.545,938,3.794,939,3.794,940,4.545]],["title/components/OrderListComponent.html",[0,0.082,22,0.718]],["body/components/OrderListComponent.html",[0,0.122,1,0.677,2,1.023,3,0.332,4,0.291,5,0.804,6,0.804,7,0.804,8,0.291,12,0.804,13,1.678,14,1.678,15,0.804,16,0.804,17,1.113,18,0.899,19,1.113,20,0.677,21,0.677,22,1.162,23,1.113,25,1.113,27,0.889,28,0.033,29,0.465,30,0.374,33,0.712,35,1.478,36,4.269,38,0.332,39,0.514,48,0.804,49,1.113,50,1.113,51,0.804,52,1.266,53,0.804,54,0.674,55,1.113,56,0.677,57,0.804,58,0.677,59,0.804,60,0.677,61,0.926,62,1.113,63,0.677,64,0.804,65,0.677,66,0.804,67,1.162,68,0.804,69,0.677,70,0.804,71,0.677,72,0.804,73,0.677,74,0.804,75,0.804,76,0.677,77,0.739,78,0.804,79,0.804,80,0.804,81,0.021,82,0.021,93,0.938,97,0.214,98,0.403,101,1.21,103,1.751,105,0.469,124,1.637,128,0.858,129,1.767,132,1.113,134,1.535,135,1.08,137,0.899,138,0.899,140,0.899,141,1.173,152,0.949,159,1.119,166,0.949,177,1.03,182,0.817,201,1.076,246,1.55,275,1.03,284,1.933,302,1.836,321,3.262,366,2.697,369,2.435,379,1.588,380,2.522,398,1.326,411,2.697,809,2.193,810,3.492,811,3.492,812,3.492,821,2.193,838,2.697,891,3.791,892,1.947,897,2.697,898,3.948,902,3.492,904,2.193,906,1.947,908,2.522,909,2.522,910,2.193,911,2.193,912,3.037,923,2.522,934,3.492,939,3.492,941,4.799,942,4.799,943,4.799,944,4.184,945,3.021,946,4.184,947,3.021,948,3.021,949,4.184,950,3.021,951,4.184,952,3.021,953,3.021,954,3.021,955,4.184,956,3.021,957,3.021,958,3.021,959,3.021,960,4.184,961,4.184,962,4.184,963,4.184,964,4.184]],["title/components/PaymentComponent.html",[0,0.082,71,0.718]],["body/components/PaymentComponent.html",[0,0.131,1,0.774,2,1.119,3,0.379,4,0.333,5,0.918,6,0.918,7,0.918,8,0.333,12,0.918,13,1.706,14,1.706,15,0.918,16,0.918,17,1.218,18,0.962,19,1.218,20,0.774,21,0.774,22,0.774,23,1.218,25,1.218,27,0.843,28,0.033,29,0.532,30,0.428,33,0.779,35,1.256,38,0.379,39,0.587,48,0.918,49,1.218,50,1.218,51,0.918,52,1.338,53,0.918,54,0.637,55,1.218,56,0.774,57,0.918,58,0.774,59,0.918,60,0.774,61,0.587,62,1.218,63,0.774,64,0.918,65,0.774,66,0.918,67,0.774,68,0.918,69,0.774,70,0.918,71,1.227,72,0.918,73,0.774,74,0.918,75,0.918,76,0.774,77,0.844,78,0.918,79,0.918,80,0.918,81,0.023,82,0.023,97,0.245,98,0.441,105,0.382,116,1.844,124,1.752,128,0.94,129,1.866,132,1.218,133,1.654,134,1.557,135,1.025,137,0.646,138,0.646,140,0.857,141,1.119,152,1.084,159,1.278,182,0.587,201,0.774,239,1.654,246,1.696,275,1.177,284,1.844,294,1.39,302,2.009,319,2.863,396,2.224,398,1.514,925,2.505,926,2.881,927,2.505,928,2.881,929,2.881,930,2.881,965,2.881,966,4.578,967,4.578,968,4.578,969,5.138,970,5.472,971,4.578,972,3.451,973,3.451,974,4.578,975,3.451,976,3.451,977,4.578,978,3.451,979,3.451,980,4.578,981,5.472,982,5.472,983,4.578,984,4.578,985,4.578]],["title/components/RegistrationFormComponent.html",[0,0.082,73,0.718]],["body/components/RegistrationFormComponent.html",[0,0.103,1,0.497,2,0.817,3,0.243,4,0.214,5,0.59,6,0.59,7,0.59,8,0.214,12,0.59,13,1.602,14,1.602,15,0.59,16,0.59,17,0.89,18,0.626,19,0.89,20,0.497,21,0.497,22,0.497,23,0.89,25,0.89,27,0.69,28,0.033,29,0.341,30,0.275,33,0.569,35,0.984,38,0.492,39,0.377,47,2.932,48,0.59,49,0.89,50,0.89,51,0.59,52,1.096,53,0.59,54,0.499,55,0.89,56,0.497,57,0.59,58,0.497,59,0.59,60,0.497,61,0.377,62,0.89,63,0.497,64,0.59,65,0.497,66,0.59,67,0.497,68,0.59,69,0.497,70,0.59,71,0.497,72,0.59,73,1.005,74,1.397,75,0.59,76,0.497,77,0.542,78,0.59,79,0.59,80,0.59,81,0.017,82,0.017,90,2.149,93,1.134,95,1.165,97,0.157,98,0.322,104,1.14,105,0.279,109,2.177,117,0.821,122,2.333,123,2.922,124,1.373,128,0.686,129,1.529,130,2.89,131,2.155,132,0.59,135,1.055,137,0.415,138,0.415,140,0.626,141,1.096,143,2.599,152,0.696,153,3.043,154,2.155,155,3.254,156,3.254,157,2.89,158,1.165,160,1.062,162,2.304,163,3.26,166,1.822,174,2.595,175,2.595,176,3.671,177,1.641,178,3.671,179,1.609,180,1.609,182,0.685,183,2.427,188,2.962,189,3.739,191,3.671,192,3.26,193,4.09,194,3.671,195,3.254,232,1.529,236,1.938,239,2.59,243,1.429,320,2.932,325,3.922,349,1.285,353,3.132,355,2.356,358,2.599,359,3.266,361,2.599,413,3.435,507,2.791,563,3.254,605,3.742,710,3.742,831,1.285,847,1.609,849,1.85,858,4.842,860,2.427,889,2.791,986,4.155,987,4.155,988,1.609,989,3.343,990,3.343,991,3.343,992,4.026,993,5.53,994,2.217,995,3.343,996,2.217,997,2.217,998,1.85,999,2.217,1000,1.85,1001,2.217,1002,2.217,1003,1.85,1004,2.217,1005,2.217,1006,2.217,1007,2.217,1008,2.217,1009,2.217,1010,2.89,1011,3.36,1012,2.791,1013,2.217,1014,1.85,1015,2.922,1016,3.343,1017,3.343,1018,2.217,1019,2.217,1020,2.217,1021,2.217,1022,2.217,1023,2.217,1024,2.217,1025,2.217,1026,2.217,1027,2.217,1028,2.217,1029,2.217,1030,2.217,1031,2.217,1032,2.217,1033,2.217,1034,2.217,1035,2.217,1036,2.217,1037,2.217,1038,2.217,1039,1.85,1040,2.217,1041,2.217,1042,2.217,1043,2.217,1044,2.217,1045,1.85,1046,1.85,1047,2.217,1048,2.217,1049,2.217,1050,2.217,1051,4.946,1052,4.704,1053,4.704,1054,4.704,1055,3.742,1056,4.483,1057,4.483,1058,4.483,1059,4.483,1060,4.483,1061,3.343,1062,3.343,1063,2.89,1064,2.791]],["title/interfaces/ShoppingCart.html",[83,1.29,369,1.29]],["body/interfaces/ShoppingCart.html",[3,0.417,4,0.366,8,0.366,27,0.751,28,0.033,38,0.417,61,0.966,81,0.024,82,0.024,83,1.53,84,2.202,86,1.964,87,2.492,90,2.336,91,3.142,93,1.431,94,3.538,97,0.27,98,0.47,100,2.722,101,1.845,103,3.292,105,0.501,107,3.538,108,2.139,111,3.538,113,2.421,117,2.335,225,1.806,230,2.562,232,1.662,236,2.826,265,2.826,327,3.158,328,3.588,363,3.483,366,3.142,367,4.122,369,1.964,381,2.757,382,2.449,411,3.142,414,3.142,423,4.122,897,3.142,904,4.122,1065,3.171,1066,3.171,1067,4.069,1068,5.679,1069,4.875,1070,4.875,1071,4.069,1072,4.875,1073,4.875,1074,4.875,1075,3.799]],["title/components/ShoppingCartComponent.html",[0,0.082,76,0.718]],["body/components/ShoppingCartComponent.html",[0,0.125,1,0.704,2,1.05,3,0.345,4,0.303,5,0.835,6,0.835,7,0.835,8,0.303,12,0.835,13,1.686,14,1.686,15,0.835,16,0.835,17,1.143,18,0.917,19,1.143,20,0.704,21,0.704,22,0.704,23,1.143,25,1.143,27,0.849,28,0.033,29,0.484,30,0.389,33,0.731,35,1.197,38,0.345,39,0.534,48,0.835,49,1.143,50,1.143,51,0.835,52,1.287,53,0.835,54,0.607,55,1.143,56,0.704,57,0.835,58,0.704,59,0.835,60,0.704,61,0.534,62,1.143,63,0.704,64,0.835,65,0.704,66,0.835,67,0.704,68,0.835,69,0.704,70,0.835,71,0.704,72,0.835,73,0.704,74,0.835,75,0.835,76,1.181,77,1.425,78,0.835,79,0.835,80,0.835,81,0.021,82,0.021,93,0.963,97,0.223,98,0.414,101,1.242,105,0.439,124,1.67,128,0.882,129,1.796,132,1.143,133,1.505,134,1.515,135,1.066,137,0.588,138,0.588,140,0.804,141,1.197,152,0.986,159,1.163,182,0.834,201,1.098,246,1.592,275,1.67,284,1.731,294,1.265,302,1.885,303,3.157,319,2.794,326,2.258,327,2.258,328,2.49,369,2.294,379,1.65,398,1.378,437,3.119,838,3.67,897,3.758,898,3.555,906,2.024,907,2.279,910,4.003,911,4.003,912,3.119,913,3.586,914,3.586,925,2.279,1071,3.586,1076,4.866,1077,4.866,1078,2.621,1079,4.296,1080,4.296,1081,4.296,1082,4.897,1083,5.266,1084,4.296,1085,3.14,1086,3.14,1087,3.14,1088,3.14,1089,3.14,1090,3.14,1091,3.14,1092,3.14,1093,3.14]],["title/injectables/ShoppingCartService.html",[211,1.092,321,1.857]],["body/injectables/ShoppingCartService.html",[3,0.272,4,0.238,8,0.238,18,0.463,27,0.729,28,0.033,29,0.381,30,0.306,38,0.272,39,0.421,54,0.624,81,0.018,82,0.018,86,2.121,87,1.591,88,2.199,93,1.464,95,2.486,97,0.305,98,0.349,101,1.761,103,3.234,105,0.439,108,2.54,113,0.996,114,1.591,116,1.905,117,1.343,128,0.744,132,0.658,135,0.986,137,0.943,138,0.943,140,1.018,160,1.185,166,1.653,177,1.613,182,0.421,197,2.742,201,0.554,211,1.237,213,1.299,215,2.102,216,3.049,223,3.234,224,2.632,225,1.752,230,1.906,232,2.024,238,3.948,239,2.523,243,2.337,244,2.632,245,1.794,246,1.343,247,2.489,248,1.433,249,2.257,250,2.632,253,3.596,267,1.433,268,1.299,269,3.051,271,2.632,273,1.794,274,1.794,275,0.843,284,1.461,297,3.027,307,3.027,321,2.102,325,2.632,326,2.486,327,3.241,328,3.553,329,1.593,331,3.027,334,3.247,337,1.593,341,2.632,363,1.433,369,2.453,378,2.064,379,1.299,381,1.794,382,1.593,398,1.085,413,1.433,414,2.337,440,3.051,454,2.632,805,2.064,927,2.632,932,3.027,938,4.394,1094,4.541,1095,2.064,1096,3.626,1097,4.294,1098,3.626,1099,3.626,1100,3.626,1101,2.472,1102,3.626,1103,3.626,1104,5.037,1105,2.472,1106,3.626,1107,2.472,1108,4.73,1109,3.626,1110,2.472,1111,5.264,1112,3.626,1113,3.626,1114,3.626,1115,2.472,1116,3.433,1117,4.294,1118,3.027,1119,3.626,1120,3.626,1121,2.472,1122,3.626,1123,2.472,1124,2.472,1125,2.472,1126,2.472,1127,2.472,1128,3.626,1129,2.472,1130,3.027,1131,3.626,1132,2.472,1133,2.472,1134,2.472,1135,2.472,1136,4.294,1137,3.626,1138,2.472,1139,4.294,1140,2.472,1141,3.626,1142,2.472,1143,2.472,1144,2.472,1145,2.472,1146,2.472,1147,2.472,1148,3.626,1149,3.626,1150,3.626,1151,2.472,1152,2.472,1153,2.472,1154,2.472,1155,2.472,1156,2.472]],["title/interfaces/User.html",[30,0.397,83,1.29]],["body/interfaces/User.html",[3,0.417,4,0.366,8,0.366,28,0.033,30,0.603,38,0.417,81,0.024,82,0.024,83,1.528,84,2.199,86,1.528,87,2.361,88,1.993,89,2.754,91,2.445,93,1.206,96,2.445,97,0.269,98,0.469,100,2.72,101,1.555,104,2.221,105,0.516,108,2.137,109,2.286,113,2.42,114,2.137,117,2.375,192,3.139,225,1.804,232,2.195,236,2.823,246,1.993,251,4.065,353,3.29,355,2.983,358,3.29,359,3.29,361,3.29,1063,3.139,1067,4.065,1157,3.167,1158,3.794,1159,4.738,1160,4.738,1161,4.065,1162,4.065,1163,4.87,1164,4.87,1165,4.065,1166,4.87,1167,4.065,1168,4.065,1169,4.87,1170,4.87]],["title/components/UserManagementComponent.html",[0,0.082,20,0.718]],["body/components/UserManagementComponent.html",[0,0.117,1,0.627,2,0.968,3,0.307,4,0.269,5,0.743,6,0.743,7,0.743,8,0.269,11,1.62,12,0.743,13,1.66,14,1.66,15,0.743,16,1.224,17,1.054,18,0.742,19,1.054,20,1.123,21,0.627,22,0.627,23,1.054,24,2.875,25,1.054,26,2.875,27,0.814,28,0.033,29,0.43,30,0.753,31,3.834,33,0.674,35,1.125,38,0.435,39,0.476,47,2.902,48,0.743,49,1.054,50,1.054,51,0.743,52,1.224,53,0.743,54,0.57,55,1.054,56,0.627,57,0.743,58,0.627,59,0.743,60,0.627,61,0.476,62,1.054,63,0.627,64,0.743,65,0.627,66,0.743,67,0.627,68,0.743,69,0.627,70,0.743,71,0.627,72,0.743,73,0.627,74,0.743,75,0.743,76,0.627,77,0.683,78,0.743,79,0.743,80,0.743,81,0.02,82,0.02,93,1.123,95,2.082,97,0.198,98,0.382,105,0.384,109,2.211,116,1.126,122,2.667,123,3.34,124,1.569,128,0.813,129,1.707,130,3.227,131,2.553,132,0.743,133,1.339,134,1.46,135,1.098,137,0.523,138,0.523,140,0.742,141,1.125,143,2.902,152,0.878,153,1.62,154,1.801,155,2.875,156,2.875,157,2.553,158,1.469,159,1.035,160,1.339,162,2.197,163,2.966,166,1.724,174,1.801,175,1.801,176,2.875,177,0.953,178,2.875,179,2.028,180,2.028,182,0.674,183,2.028,188,2.885,189,3.538,191,3.634,192,3.227,193,3.634,194,3.634,201,0.627,232,1.351,245,2.028,355,2.418,358,2.902,359,3.448,361,2.902,413,2.902,563,3.634,831,1.62,847,2.028,860,2.875,998,2.332,1000,2.332,1003,2.332,1010,2.966,1011,3.306,1012,3.306,1014,2.332,1039,2.332,1051,4.179,1052,4.179,1053,4.179,1054,4.179,1063,3.227,1064,3.306,1116,3.34,1171,4.317,1172,4.601,1173,4.601,1174,3.961,1175,2.794,1176,2.794,1177,2.794,1178,2.794,1179,2.794,1180,2.794,1181,2.794,1182,2.794,1183,2.794,1184,2.794,1185,2.794,1186,2.794,1187,2.794,1188,2.794,1189,2.794,1190,2.794,1191,2.794,1192,2.794,1193,2.794,1194,2.794,1195,5.006,1196,2.794]],["title/injectables/UserService.html",[211,1.092,320,1.857]],["body/injectables/UserService.html",[3,0.256,4,0.225,8,0.225,18,1,27,0.535,28,0.033,29,0.359,30,0.772,38,0.256,39,0.397,54,0.514,81,0.017,82,0.017,86,1.98,87,2.407,88,2.114,90,2.204,92,2.963,93,1.362,95,2.416,96,2.963,97,0.246,98,0.335,100,2.735,104,2.125,105,0.383,109,2.299,113,2.21,114,2.625,117,1.909,128,0.713,135,0.92,137,0.777,138,0.777,140,1,141,0.57,166,1.619,177,1.184,182,0.397,186,2.899,188,1.825,201,0.523,211,1.184,213,1.225,215,2.013,216,3.78,223,3.18,224,3.337,225,2.032,227,2.899,228,2.521,230,2.709,232,2.16,239,2.63,243,3.536,244,2.521,246,1.703,247,2.013,248,2.013,249,2.709,250,3.337,253,2.963,259,2.521,265,2.013,267,1.352,268,1.225,269,3.18,271,2.521,273,1.692,274,2.521,275,0.795,284,1.399,320,2.013,351,2.899,353,3.467,355,3.044,358,3.25,359,3.25,361,3.25,375,1.946,398,1.023,413,2.013,451,2.521,454,2.521,455,2.899,456,2.899,1055,2.899,1063,2.238,1116,3.337,1118,2.899,1130,1.946,1159,3.838,1160,3.838,1161,2.899,1162,2.899,1165,2.899,1167,3.838,1168,2.899,1197,1.946,1198,3.472,1199,4.149,1200,3.472,1201,4.597,1202,3.472,1203,3.472,1204,3.472,1205,2.332,1206,4.597,1207,3.472,1208,4.597,1209,3.472,1210,3.472,1211,4.597,1212,3.472,1213,3.472,1214,3.472,1215,3.472,1216,3.472,1217,2.332,1218,3.472,1219,3.472,1220,2.332,1221,3.472,1222,3.472,1223,3.472,1224,3.472,1225,2.332,1226,3.472,1227,3.472,1228,4.149,1229,5.154,1230,2.899,1231,3.472,1232,3.472,1233,3.472,1234,4.597,1235,3.472,1236,3.472,1237,2.332,1238,3.472,1239,2.332,1240,4.149,1241,2.332,1242,2.332,1243,2.332,1244,2.332,1245,2.332,1246,2.332,1247,2.332,1248,2.332,1249,2.332,1250,2.332,1251,2.332,1252,2.332,1253,2.332,1254,2.332,1255,2.332,1256,2.332,1257,2.332]],["title/coverage.html",[1258,3.635]],["body/coverage.html",[0,0.163,1,0.813,8,0.349,9,3.027,10,3.027,11,3.234,20,0.813,21,0.813,22,0.813,28,0.033,30,0.449,31,3.049,33,0.617,34,2.632,36,2.632,56,0.813,58,0.813,60,0.813,61,0.617,63,0.813,65,0.813,67,0.813,69,0.813,71,0.813,73,0.813,76,0.813,81,0.023,82,0.023,83,2.248,85,3.027,105,0.302,118,3.596,119,3.393,120,3.821,134,0.965,162,1.591,164,2.632,165,2.632,174,3.825,211,1.974,212,2.337,214,3.027,275,2.226,287,3.027,296,3.027,320,2.102,321,2.102,369,1.461,410,3.027,440,2.102,441,3.027,707,3.027,807,3.027,808,3.027,809,3.433,840,3.027,863,3.027,891,3.393,892,2.337,893,3.027,916,3.027,917,3.027,965,3.027,986,4.05,987,4.05,988,4.05,1010,3.049,1015,2.632,1065,3.027,1066,3.027,1076,3.027,1077,3.027,1078,3.027,1094,3.027,1095,3.027,1157,3.027,1171,3.433,1197,3.027,1258,3.027,1259,3.626,1260,3.626,1261,3.626,1262,6.13,1263,5.934,1264,4.73,1265,3.626,1266,3.027,1267,4.73,1268,3.027,1269,3.027,1270,3.027,1271,3.027,1272,6.13,1273,5.264,1274,3.626,1275,3.626,1276,3.626,1277,3.626,1278,3.626,1279,3.626,1280,3.626,1281,3.626,1282,4.73,1283,3.626,1284,3.027,1285,3.626,1286,3.626,1287,3.626]],["title/dependencies.html",[1288,1.948,1289,3.212]],["body/dependencies.html",[28,0.033,29,0.742,81,0.028,82,0.028,152,1.512,158,2.531,294,1.94,376,4.02,1289,4.02,1290,4.816,1291,6.467,1292,4.816,1293,5.638,1294,5.638,1295,4.816,1296,4.816,1297,4.816,1298,4.816,1299,4.816,1300,4.816,1301,4.816,1302,4.816]],["title/miscellaneous/enumerations.html",[1303,1.41,1304,3.212]],["body/miscellaneous/enumerations.html",[28,0.032,81,0.028,82,0.028,97,0.348,182,1.075,363,3.305,1303,2.58,1304,4.098,1305,4.909,1306,5.702,1307,4.909,1308,5.702,1309,5.702,1310,5.702,1311,5.702,1312,5.702]],["title/miscellaneous/functions.html",[1303,1.41,1313,3.212]],["body/miscellaneous/functions.html",[11,3.166,28,0.032,31,2.941,54,0.565,81,0.027,82,0.027,97,0.324,104,2.066,105,0.381,118,2.941,119,2.941,120,4.243,137,0.854,138,0.854,140,1.177,157,4.052,164,4.243,165,4.243,986,3.312,987,3.312,988,4.397,1010,4.052,1015,4.243,1045,3.809,1046,4.559,1171,3.312,1284,4.559,1303,2.399,1313,3.809,1314,5.462,1315,5.845,1316,4.563,1317,4.563]],["title/index.html",[97,0.19,1318,2.683,1319,2.683]],["body/index.html",[0,0.146,4,0.419,28,0.026,54,0.539,81,0.026,82,0.026,162,1.909,255,3.631,292,3.631,538,3.631,569,3.631,603,5.189,1230,3.631,1288,3.157,1320,5.306,1321,4.35,1322,5.725,1323,5.725,1324,3.631,1325,4.35,1326,4.35,1327,5.306,1328,6.112,1329,6.294,1330,4.35,1331,4.35,1332,4.35,1333,4.35,1334,4.35,1335,4.35,1336,4.35,1337,4.35,1338,4.35,1339,4.35,1340,4.35,1341,5.725,1342,5.725,1343,4.35,1344,5.961,1345,4.35,1346,4.35,1347,4.35,1348,4.35,1349,5.306,1350,5.306,1351,5.961,1352,4.35,1353,5.306,1354,5.306,1355,4.35,1356,4.35,1357,4.35,1358,4.35,1359,5.306,1360,4.35,1361,4.35,1362,4.35,1363,4.35,1364,5.725,1365,4.35,1366,4.35,1367,4.35,1368,3.157,1369,4.35,1370,4.35]],["title/modules.html",[1371,3.635]],["body/modules.html",[28,0.029,81,0.029,82,0.029,1371,4.31]],["title/overview.html",[1368,3.161]],["body/overview.html",[2,1.248,28,0.029,46,3.707,47,2.96,81,0.029,82,0.029,84,2.96,213,2.684,688,4.263,1368,3.707]],["title/properties.html",[98,0.371,1288,1.948]],["body/properties.html",[28,0.03,81,0.029,82,0.029,98,0.495,1324,4.286,1372,5.135]],["title/miscellaneous/variables.html",[1303,1.41,1373,3.212]],["body/miscellaneous/variables.html",[18,1.026,28,0.033,81,0.027,82,0.027,88,1.699,93,1.028,97,0.325,105,0.457,114,2.012,116,1.847,134,1.22,166,1.72,177,1.868,182,0.932,201,1.228,225,1.699,232,1.564,249,2.41,284,1.847,319,2.198,414,2.956,451,3.329,817,3.828,1266,3.828,1268,4.572,1269,3.828,1270,4.572,1271,4.572,1303,2.41,1373,3.828,1374,4.586,1375,4.586,1376,4.586,1377,4.586,1378,4.586,1379,4.586,1380,4.586,1381,5.478,1382,4.586,1383,4.586,1384,4.586,1385,4.586,1386,4.586,1387,4.586,1388,4.586,1389,4.586]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1372,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":556,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":589,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":542,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["14/14",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":609,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":577,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":562,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":588,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18.0.0",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1325,"title":{},"body":{"index.html":{}}}],["19",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":474,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["20",{"_index":507,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["222",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":506,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":531,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":479,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":493,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":476,"title":{},"body":{"injectables/CardItemService.html":{}}}],["38",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"overview.html":{}}}],["4000",{"_index":977,"title":{},"body":{"components/PaymentComponent.html":{}}}],["5",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":563,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["6",{"_index":545,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":543,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["7/18",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":608,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":605,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["85",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":564,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["abierto",{"_index":1308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":486,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1198,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":155,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accessors",{"_index":131,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1169,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":815,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["actual",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":245,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1118,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":1116,"title":{},"body":{"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":569,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["addcarditem",{"_index":443,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additem",{"_index":813,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":818,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1103,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":33,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":210,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":207,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":208,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":209,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":56,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":127,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1068,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":206,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":21,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":212,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1229,"title":{},"body":{"injectables/UserService.html":{}}}],["administrar",{"_index":44,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1206,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":832,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":432,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":116,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('dirección",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('error",{"_index":1196,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":928,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('no",{"_index":833,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":831,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":856,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1035,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["angular",{"_index":1322,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":152,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["another",{"_index":599,"title":{},"body":{"injectables/CardItemService.html":{}}}],["apellido",{"_index":1063,"title":{},"body":{"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["aplicacion",{"_index":1238,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1334,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":888,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":483,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1345,"title":{},"body":{"index.html":{}}}],["attach",{"_index":553,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":551,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":515,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":134,"title":{"injectables/AuthService.html":{}},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":851,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1335,"title":{},"body":{"index.html":{}}}],["av",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{}}}],["base",{"_index":490,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":534,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":511,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":524,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1226,"title":{},"body":{"injectables/UserService.html":{}}}],["beast",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":487,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":504,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":578,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boolean",{"_index":246,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleano",{"_index":247,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1216,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bottom",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1344,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":463,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":465,"title":{},"body":{"injectables/CardItemService.html":{}}}],["buy",{"_index":1083,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calctotal",{"_index":898,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":902,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":915,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":963,"title":{},"body":{"components/OrderListComponent.html":{}}}],["cambiar",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["campos",{"_index":1037,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":912,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capabilities",{"_index":1362,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1054,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":519,"title":{},"body":{"injectables/CardItemService.html":{}}}],["card.cardname",{"_index":914,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.id",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":910,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":911,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["cardcopy",{"_index":1151,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1152,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardid",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1141,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":61,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":835,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1075,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":837,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":836,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":442,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":60,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":440,"title":{"injectables/CardItemService.html":{}},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":904,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":909,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardname",{"_index":415,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":416,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":527,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":417,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":418,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1072,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1111,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":839,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carros",{"_index":1096,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1079,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1081,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1080,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1078,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:18",{"_index":1087,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:19",{"_index":1088,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:20",{"_index":1084,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:27",{"_index":1086,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:41",{"_index":1085,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1066,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1095,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:113",{"_index":1110,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1102,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:28",{"_index":1107,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:47",{"_index":1115,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:63",{"_index":1105,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1077,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":411,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cartitem.service",{"_index":1121,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":932,"title":{},"body":{"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":549,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":412,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["categoria",{"_index":824,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":461,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":438,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cerrado",{"_index":881,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":890,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1337,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1366,"title":{},"body":{"index.html":{}}}],["checkstock",{"_index":444,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":449,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1358,"title":{},"body":{"index.html":{}}}],["choose",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1323,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":1214,"title":{},"body":{"injectables/UserService.html":{}}}],["code",{"_index":1339,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":1062,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":584,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1359,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":124,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":99,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":938,"title":{},"body":{"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1071,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1036,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":106,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["con",{"_index":243,"title":{},"body":{"injectables/AddressService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["condition",{"_index":419,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmar",{"_index":1060,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":993,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["console.log",{"_index":1049,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["console.log(authservice.isloggedin",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(selectedcarditem.quantity",{"_index":1146,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1147,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(this.registrationform.value",{"_index":1028,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["const",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":133,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1101,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":160,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":814,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":945,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":994,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contener",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contiene",{"_index":1070,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["contrario",{"_index":1223,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":1167,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["contraseña",{"_index":858,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1061,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["control.\\ncrew",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":554,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":552,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":598,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":568,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.get(field1)?.value",{"_index":1047,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control.get(field2)?.value",{"_index":1048,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control.value",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["controls",{"_index":496,"title":{},"body":{"injectables/CardItemService.html":{}}}],["copy",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":924,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":203,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":821,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":906,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1182,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":159,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":822,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":954,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1008,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["correcto",{"_index":861,"title":{},"body":{"components/LoginComponent.html":{}}}],["correlativo",{"_index":227,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":1161,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":115,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":435,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":548,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":574,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1258,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["creado",{"_index":226,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":224,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":121,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":202,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":126,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":125,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":120,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["create.component.ts:20",{"_index":136,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:24",{"_index":139,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:44",{"_index":145,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:48",{"_index":147,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:52",{"_index":149,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:56",{"_index":151,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:60",{"_index":142,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":119,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createaddress",{"_index":218,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":221,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":420,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1098,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1106,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1200,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1204,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":484,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":597,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":567,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1221,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1074,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":887,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":587,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":470,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":838,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1172,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d)(?=.*[a",{"_index":1040,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["d+$/g.test(control.value",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["dado",{"_index":238,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{}}}],["damage",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1195,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["de",{"_index":93,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1201,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":505,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1051,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":201,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1212,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1067,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":135,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definido",{"_index":1073,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definir",{"_index":89,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":117,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":1289,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":86,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["deshabilitar",{"_index":1218,"title":{},"body":{"injectables/UserService.html":{}}}],["detail",{"_index":894,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":923,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":896,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":895,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":893,"title":{},"body":{"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:16",{"_index":901,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:17",{"_index":900,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":903,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail/order",{"_index":892,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":964,"title":{},"body":{"components/OrderListComponent.html":{}}}],["dev",{"_index":1331,"title":{},"body":{"index.html":{}}}],["development",{"_index":1326,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":594,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direccion",{"_index":107,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1343,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1348,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":237,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1170,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1347,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["double",{"_index":557,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":518,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1356,"title":{},"body":{"index.html":{}}}],["each",{"_index":550,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":427,"title":{},"body":{"interfaces/CardItem.html":{}}}],["el",{"_index":225,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":471,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":508,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":473,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":1162,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":489,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":541,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{}}}],["encantamientos",{"_index":886,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":590,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1222,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":455,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1165,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":603,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":510,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entre",{"_index":1053,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":94,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1304,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":544,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":930,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":514,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1108,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["estado",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":91,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":494,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1353,"title":{},"body":{"index.html":{}}}],["exile",{"_index":525,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["existentes",{"_index":1211,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1027,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["fabled",{"_index":529,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["field1",{"_index":1317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1046,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["fiery",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1338,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":868,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":462,"title":{},"body":{"injectables/CardItemService.html":{}}}],["filtros",{"_index":466,"title":{},"body":{"injectables/CardItemService.html":{}}}],["finalizada",{"_index":935,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":918,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":920,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":919,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":917,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:19",{"_index":921,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:26",{"_index":922,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":916,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1230,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":526,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":546,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":579,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":480,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forbidden",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["forces",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":989,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":75,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":991,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":990,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":988,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form.component.ts:18",{"_index":995,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:22",{"_index":996,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:63",{"_index":999,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:67",{"_index":1001,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:71",{"_index":1002,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:75",{"_index":1004,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:79",{"_index":1005,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:83",{"_index":1007,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:87",{"_index":997,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":987,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formato",{"_index":860,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formcontrol",{"_index":153,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1188,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1186,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1187,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":143,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":1038,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["four",{"_index":537,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{}}}],["funcion",{"_index":223,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["funciones",{"_index":215,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1313,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1363,"title":{},"body":{"index.html":{}}}],["g.test(control.value",{"_index":1043,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["gain",{"_index":516,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":600,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1341,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1321,"title":{},"body":{"index.html":{}}}],["generic",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":219,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":233,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1099,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1109,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":445,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":452,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":446,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":457,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardslist",{"_index":447,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcommune",{"_index":150,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getconfirmpassword",{"_index":1006,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1003,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":998,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getlastname",{"_index":1000,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getname",{"_index":144,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":146,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":849,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getregion",{"_index":148,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":555,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getting",{"_index":1318,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1202,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1219,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":847,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":509,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":575,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1365,"title":{},"body":{"index.html":{}}}],["god",{"_index":591,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":576,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyard",{"_index":528,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":560,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":566,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":488,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g}{g",{"_index":570,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["habilidad",{"_index":428,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1166,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":936,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1194,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":522,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1082,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1139,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["heliod",{"_index":585,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1364,"title":{},"body":{"index.html":{}}}],["henge",{"_index":561,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":884,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1333,"title":{},"body":{"index.html":{}}}],["human",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":100,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":231,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":108,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["if(cardindex",{"_index":1145,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":908,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1150,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1130,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":830,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["if(search",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1142,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":926,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["if(shoppingcart.status",{"_index":931,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1193,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1089,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.userlist.find(user",{"_index":1239,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":421,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":434,"title":{},"body":{"interfaces/CardItem.html":{}}}],["implements",{"_index":1361,"title":{},"body":{"index.html":{}}}],["import",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["incorretos",{"_index":859,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":592,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":97,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":248,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1163,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":1119,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":92,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["ingresar",{"_index":862,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ingreso",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":211,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":213,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":905,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":899,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":83,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1159,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":596,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":969,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":941,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":1133,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["items",{"_index":229,"title":{},"body":{"injectables/AddressService.html":{}}}],["jegantha",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["juego",{"_index":429,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":436,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1355,"title":{},"body":{"index.html":{}}}],["khm",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":90,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":521,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":539,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":236,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["lastname",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":477,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":497,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letras",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["library",{"_index":533,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":517,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":571,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":601,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":810,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":37,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":812,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":811,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":809,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":816,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:21",{"_index":952,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:22",{"_index":953,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:23",{"_index":946,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:27",{"_index":820,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:30",{"_index":948,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:36",{"_index":950,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:39",{"_index":819,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:41",{"_index":947,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":808,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":230,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["lo",{"_index":1055,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":982,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":63,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":250,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["long",{"_index":593,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":95,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":485,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1236,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1232,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":583,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["management",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["management.component.ts:19",{"_index":199,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:20",{"_index":1177,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:21",{"_index":1174,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:23",{"_index":200,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:25",{"_index":1175,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:47",{"_index":1178,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:51",{"_index":1179,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:55",{"_index":1180,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:59",{"_index":1181,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:63",{"_index":1176,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":31,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manavalue",{"_index":422,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":217,"title":{},"body":{"injectables/AddressService.html":{}}}],["manejo",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["many",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":883,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayúscula",{"_index":1057,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1120,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1056,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["merfolk",{"_index":610,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":128,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{}}}],["minúscula",{"_index":1058,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1303,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":216,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":242,"title":{},"body":{"injectables/AddressService.html":{}}}],["modules",{"_index":1371,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monstrous",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":538,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["much",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":500,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":864,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":867,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":866,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":65,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1332,"title":{},"body":{"index.html":{}}}],["need",{"_index":1360,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":162,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1122,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1124,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1126,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1125,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1241,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1248,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1245,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1243,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1250,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1246,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1247,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1249,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1244,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1329,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":123,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":129,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":475,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":109,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":572,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1215,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1050,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["nueva",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["null",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["number",{"_index":101,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":112,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":110,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/CardItem.html":{}}}],["nymph",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["o",{"_index":857,"title":{},"body":{"components/LoginComponent.html":{}}}],["objeto",{"_index":87,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["obtener",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":235,"title":{},"body":{"injectables/AddressService.html":{}}}],["ocurrido",{"_index":929,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":468,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":582,"title":{},"body":{"injectables/CardItemService.html":{}}}],["only_letters",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["onlyletters",{"_index":1039,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onlyletters_validator",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":1010,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["onlynumbersvalidator",{"_index":164,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":869,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":130,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":523,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":495,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":138,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":607,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":934,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":940,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.cardlist.length",{"_index":962,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.id",{"_index":960,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":961,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":67,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":69,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":942,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":22,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":937,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1367,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1368,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1288,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1370,"title":{},"body":{"index.html":{}}}],["pago",{"_index":981,"title":{},"body":{"components/PaymentComponent.html":{}}}],["para",{"_index":88,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params.get('categoria",{"_index":825,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":826,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["passage",{"_index":530,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1044,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["passwordvalidator",{"_index":1015,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":966,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":72,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":968,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":967,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":71,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1069,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1227,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":478,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":885,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1357,"title":{},"body":{"index.html":{}}}],["play",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":454,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":985,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":491,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":437,"title":{},"body":{"interfaces/CardItem.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":423,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["private",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":980,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1320,"title":{},"body":{"index.html":{}}}],["properties",{"_index":98,"title":{"properties.html":{}},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1234,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":520,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":424,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":113,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["questing",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1235,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":122,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":979,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1113,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":983,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1112,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{},"interfaces/User.html":{}}}],["redirect",{"_index":970,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigiendo",{"_index":984,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1369,"title":{},"body":{"index.html":{}}}],["region",{"_index":102,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registrado",{"_index":1026,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":889,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":992,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":73,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["región",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1336,"title":{},"body":{"index.html":{}}}],["repita",{"_index":1209,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1213,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1164,"title":{},"body":{"interfaces/User.html":{}}}],["rest",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["result.filter(carditem",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":464,"title":{},"body":{"injectables/CardItemService.html":{}}}],["results",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":140,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":1168,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1160,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":817,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":865,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1328,"title":{},"body":{"index.html":{}}}],["running",{"_index":1349,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":512,"title":{},"body":{"injectables/CardItemService.html":{}}}],["same",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1018,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1045,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["santiago",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1340,"title":{},"body":{"index.html":{}}}],["scute",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":114,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":458,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1231,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":228,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["seleccionado",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["selected",{"_index":951,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedcarditem",{"_index":1137,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1148,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":943,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1136,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1154,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1144,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1143,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1153,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1149,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":944,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":949,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1330,"title":{},"body":{"index.html":{}}}],["server",{"_index":1327,"title":{},"body":{"index.html":{}}}],["sesion",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["sesión",{"_index":882,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["setcode",{"_index":425,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setname",{"_index":426,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["settimeout",{"_index":974,"title":{},"body":{"components/PaymentComponent.html":{}}}],["shark",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1156,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":369,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1134,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":927,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1135,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":76,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1104,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1097,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":321,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shuffle",{"_index":536,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":249,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":439,"title":{},"body":{"interfaces/CardItem.html":{}}}],["sistema",{"_index":1158,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":414,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["solo",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":547,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../address",{"_index":1314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../registration",{"_index":1315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":1316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":118,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/carditem",{"_index":807,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":85,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":410,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1065,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1157,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":214,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":222,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":241,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":234,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:102",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:119",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:128",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:141",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:152",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:160",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:168",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:24",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:28",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:32",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:51",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:68",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:79",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":441,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":467,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":459,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":448,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:384",{"_index":453,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:393",{"_index":450,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1094,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1197,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1217,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1237,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:53",{"_index":1205,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:83",{"_index":1220,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:94",{"_index":1225,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/login/login.component.ts",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":845,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":848,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":850,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":846,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":863,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:20",{"_index":874,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:21",{"_index":870,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":872,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:34",{"_index":873,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:41",{"_index":871,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":891,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":965,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:17",{"_index":971,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":972,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":973,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":986,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shopping",{"_index":1076,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1171,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1319,"title":{"index.html":{}},"body":{}}],["starting",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1346,"title":{},"body":{"index.html":{}}}],["strike",{"_index":558,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":104,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["subtotal",{"_index":913,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":834,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sun",{"_index":586,"title":{},"body":{"injectables/CardItemService.html":{}}}],["swarm",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1059,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":532,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":535,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":482,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tener",{"_index":1052,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["test",{"_index":1352,"title":{},"body":{"index.html":{}}}],["testing",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1351,"title":{},"body":{"index.html":{}}}],["thassa\\'s",{"_index":606,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":502,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":503,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":469,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":161,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":829,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":925,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":204,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getuser",{"_index":1184,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":956,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":875,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":855,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":880,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":933,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.carditemlist",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1138,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":827,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":828,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.createshoppingcar(userid",{"_index":1140,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":907,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1090,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1183,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1189,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":877,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":878,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.hasitems",{"_index":1091,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":876,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":975,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":955,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":852,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":854,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":853,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":957,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.redirect",{"_index":976,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1009,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1024,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1022,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1034,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1019,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1031,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1020,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1032,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1023,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1033,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1021,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1030,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1025,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":823,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":879,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":978,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1093,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedorder",{"_index":959,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1155,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1128,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1127,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1123,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1131,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":958,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.total",{"_index":1092,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1185,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1192,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1190,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1191,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":205,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1252,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1254,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1251,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1242,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1257,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser",{"_index":1029,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":472,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tipo",{"_index":430,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["titan",{"_index":499,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":481,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":580,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":581,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":897,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":492,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":559,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1132,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":604,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":105,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":239,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["una",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["undefined",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":573,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1350,"title":{},"body":{"index.html":{}}}],["unless",{"_index":513,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":540,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":602,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":220,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":240,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1117,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1129,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1228,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1255,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1256,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1173,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1100,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1114,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1203,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1224,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":433,"title":{},"body":{"interfaces/CardItem.html":{}}}],["uro",{"_index":498,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1207,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1342,"title":{},"body":{"index.html":{}}}],["user",{"_index":30,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1253,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1240,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1233,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":198,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":103,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1199,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":20,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":320,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uso",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usuario",{"_index":232,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":96,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":431,"title":{},"body":{"interfaces/CardItem.html":{}}}],["vacio",{"_index":456,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1208,"title":{},"body":{"injectables/UserService.html":{}}}],["validar",{"_index":451,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":156,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":157,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":154,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1014,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1017,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1013,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1012,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1011,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1016,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":163,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":111,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["valores",{"_index":244,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1373,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehicle",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":939,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["version",{"_index":1324,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1354,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":141,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["vorinclex",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1064,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":595,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":501,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":565,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x}{1}{u}\\nwhen",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":413,"title":{},"body":{"interfaces/CardItem.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["y/o",{"_index":460,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1210,"title":{},"body":{"injectables/UserService.html":{}}}],["z])((?=.*\\w)|(?=.*_",{"_index":1042,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["z])(?=.*[a",{"_index":1041,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["z]*$)/g.test(control.value",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["za",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["zendikar",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\n\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        4\n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                    4        5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\n\n\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  addressForm!: FormGroup;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLetters_Validator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLetters_Validator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\nexport function onlyLetters_Validator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {only_letters: {value: control.value}} : null;\n  };\n}\n\nexport function onlyNumbersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/^\\d+$/g.test(control.value);\n    return forbidden ? {onlyNumbers: {value: control.value}} : null;\n  };\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n\n  userAddressList: Address[] = [] as Address[];\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:168\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * \n   */\n  private logedUser: User = {} as User;\n  /**\n   * \n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * \n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * \n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * \n   * @param userName \n   * @param password \n   * @returns \n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === 0 || this.logedUser.UserName === ''){\n        this.loggedIn.next(false);\n        return false;\n    }\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * \n   * @returns \n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * \n   * @param firstName \n   * @param lastName \n   * @param email \n   * @returns \n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * \n   * @param name \n   * @param number \n   * @param region \n   * @param Commune \n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * \n   * @returns \n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * \n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardItem\n                            \n                            \n                                checkStock\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardItem\n                        \n                    \n                \n            \n            \n                \naddCardItem()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:393\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:384\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    addCardItem(){\n        \n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n\n  carditemList: CardItem[] = [];\n\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n\n  loginForm!: FormGroup;\n\n  constructor(private authService: AuthService,private router: Router){}\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          Ingresar\n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                            Ingresar                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  filterForm!: FormGroup;\n  isLoggedIn: boolean = false;\n\n  constructor(private router: Router, private authService: AuthService){};\n\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  @Input() currentShoppingCart: ShoppingCart;\n  total: number = 0;\n\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }else{\n        if(shoppingCart.Status === CartStatus.Abierto){\n          this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n        }\n        this.currentShoppingCart = shoppingCart;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n\n  orderList: ShoppingCart[] = [];\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  isSelected: boolean = false;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{order.CardList.length}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{order.CardList.length}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  isPaymentSuccess: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:75\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:83\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\n\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  registrationForm!: FormGroup;\n\n  constructor(private userService: UserService){}\n\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      alert('Se ha registrado con exito');\n      console.log(this.registrationForm.value);\n      this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\nexport function onlyLettersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {onlyLetters: {value: control.value}} : null;\n  };\n}\n\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])((?=.*\\W)|(?=.*_))^[^ ]+$/g.test(control.value);\n    return forbidden ? {passwordFromat: {value: control.value}} : null;\n  };\n}\n\nexport function samePasswordValidator(field1: string, field2: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const password = control.get(field1)?.value;\n    const confirmPassword = control.get(field2)?.value;\n    const forbidden = password && confirmPassword && password !== confirmPassword;\n    console.log( password + ' || ' + confirmPassword);\n    return forbidden ? {notSamePassword: {value: confirmPassword}} : null;\n  };\n}\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  total: number = 0;\n  hasItems: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  buy(){\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    constructor(private cardItemService: CardItemService){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            console.log(selectedCardItem.Quantity)\n            console.log(selectedShoppingCart.CardList[cardIndex].Quantity)\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:59\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n\n  updateForm!: FormGroup;\n  currentUser: User = {} as User;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\nexport function onlyLettersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {onlyLetters: {value: control.value}} : null;\n  };\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) === undefined){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            function\n            onlyLetters_Validator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            function\n            onlyNumbersValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                38 %\n                (7/18)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            onlyLettersValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            samePasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            function\n            onlyLettersValidator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLetters_Validator   (src/.../address-create.component.ts)\n                        \n                        \n                            onlyLettersValidator   (src/.../registration-form.component.ts)\n                        \n                        \n                            onlyLettersValidator   (src/.../user-management.component.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../address-create.component.ts)\n                        \n                        \n                            passwordValidator   (src/.../registration-form.component.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../registration-form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/address-create/address-create.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLetters_Validator\n                        \n                    \n                \n            \n            \n                \nonlyLetters_Validator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/registration-form/registration-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/user-management/user-management.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  console.log(authService.isLoggedIn())\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
