var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.015,1,0.659]],["body/components/AccountManagementComponent.html",[0,0.024,1,1.124,2,1.02,3,0.35,4,0.308,5,0.831,6,0.831,7,0.831,8,0.308,9,4.654,10,4.654,11,2.268,12,0.46,13,1.326,14,3.388,15,0.65,16,4.635,17,0.483,18,3.884,19,2.723,20,0.831,21,1.568,22,1.568,23,1.449,24,1.244,25,1.107,26,0.717,27,1.107,28,1.124,29,1.124,30,1.124,31,1.124,32,1.458,33,1.107,34,3.388,35,1.107,36,3.388,37,0.189,38,0.355,39,5.21,40,0.787,41,1.554,42,1.222,43,1.331,44,1.229,45,0.806,46,4.635,47,0.861,48,1.515,49,1.326,50,1.554,51,0.539,52,0.031,53,0.59,54,0.302,55,0.539,56,2.918,57,1.515,58,4.635,59,1.222,60,3.019,61,3.617,62,0.787,63,1.554,64,2.267,65,0.539,66,1.02,67,1.515,68,0.647,69,0.591,70,0.852,71,0.488,72,0.525,73,2.546,74,4.635,75,0.806,76,2.546,77,1.222,78,2.546,79,3.482,80,1.147,81,2.546,82,3.482,83,0.9,84,0.974,85,0.35,86,0.539,87,0.591,88,1.138,89,3.482,90,3.482,91,3.884,92,4.654,93,5.555,94,3.019,95,5.555,96,4.635,97,2.723,98,0.831,99,1.107,100,1.107,101,0.831,102,1.222,103,0.831,104,1.107,105,0.705,106,0.831,107,0.705,108,0.831,109,0.705,110,1.107,111,0.705,112,0.488,113,1.107,114,0.831,115,0.705,116,0.831,117,0.705,118,0.831,119,0.705,120,0.705,121,0.831,122,0.705,123,0.831,124,0.705,125,0.831,126,0.831,127,0.705,128,0.766,129,0.831,130,0.831,131,0.831,132,0.021,133,0.021]],["title/interfaces/Address.html",[75,0.504,134,1.349]],["body/interfaces/Address.html",[3,0.437,4,0.384,8,0.384,12,0.384,15,0.75,17,0.506,37,0.236,38,0.409,52,0.031,53,0.683,54,0.411,57,1.747,62,0.908,67,2.125,72,0.605,75,0.827,85,0.437,132,0.024,133,0.024,134,1.801,135,2.556,136,3.645,137,2.368,138,3.18,139,1.276,140,2.833,141,1.955,142,2.556,143,1.955,144,2.833,145,3.93,146,2.41,147,2.004,148,4.107,149,3.546,150,3.14,151,3.79,152,2.213,153,1.495,154,3.14,155,2.402,156,5.345,157,1.382,158,1.617,159,5.345]],["title/components/AddressCreateComponent.html",[0,0.015,105,0.659]],["body/components/AddressCreateComponent.html",[0,0.022,1,0.628,2,0.944,3,0.312,4,0.274,5,0.741,6,0.741,7,0.741,8,0.274,12,0.434,13,1.024,17,0.505,20,0.741,21,1.548,22,1.548,23,0.741,24,0.741,25,1.024,26,0.663,27,1.024,28,0.628,29,0.628,30,0.628,31,0.628,32,1.374,33,1.024,35,1.024,37,0.169,38,0.328,40,0.728,41,1.482,42,1.081,43,1.187,44,1.193,45,0.929,47,0.984,49,1.024,50,1.482,51,0.48,52,0.031,53,0.667,54,0.28,55,0.48,62,0.728,65,0.663,66,1.081,70,0.78,71,0.436,72,0.352,75,0.929,77,1.081,80,0.944,83,0.803,84,0.869,85,0.312,86,0.48,87,0.527,98,0.741,99,1.024,100,1.024,101,0.741,102,1.166,103,0.741,104,1.024,105,1.072,106,0.741,107,0.628,108,0.741,109,0.628,110,1.024,111,0.628,112,0.436,113,1.024,114,0.741,115,0.628,116,0.741,117,0.628,118,0.741,119,0.628,120,0.628,121,0.741,122,0.628,123,0.741,124,0.628,125,0.741,126,0.741,127,0.628,128,0.683,129,0.741,130,0.741,131,0.741,132,0.02,133,0.02,142,2.519,145,3.45,147,1.602,148,3.45,150,3.113,151,3.378,160,4.456,161,4.456,162,2.601,163,3.21,164,5.298,165,3.135,166,3.593,167,2.626,168,3.591,169,4.288,170,4.288,171,4.912,172,3.113,173,2.519,174,4.288,175,3.593,176,1.109,177,3.105,178,1.402,179,3.593,180,3.593,181,3.105,182,3.593,183,2.519,184,2.832,185,3.105,186,3.105,187,3.105,188,3.105,189,3.105,190,3.105,191,3.105,192,3.105,193,2.719,194,1.824,195,2.27,196,2.27,197,2.022,198,1.518,199,2.886,200,2.793,201,2.022,202,1.659,203,3.105,204,2.302,205,3.113,206,1.602,207,3.105,208,3.105,209,3.105,210,3.105,211,3.105,212,3.105,213,3.105,214,3.593,215,5.031,216,2.937,217,3.528,218,4.439,219,3.378,220,2.812,221,3.744,222,3.45,223,3.45,224,3.593,225,2.097]],["title/components/AddressManagementComponent.html",[0,0.015,29,0.659]],["body/components/AddressManagementComponent.html",[0,0.024,1,0.721,2,1.035,3,0.358,4,0.314,5,0.85,6,0.85,7,0.85,8,0.314,11,2.318,12,0.415,13,1.123,15,0.66,17,0.492,20,0.85,21,1.572,22,1.572,23,0.85,24,1.258,25,1.123,26,0.728,27,1.123,28,0.721,29,1.134,30,0.721,31,0.721,32,1.474,33,1.123,34,3.438,35,1.123,36,3.438,37,0.193,38,0.36,40,0.799,41,1.568,42,1.159,43,1.361,44,1.236,45,0.815,47,0.873,49,1.123,50,1.568,51,0.551,52,0.031,53,0.596,54,0.307,55,0.551,62,1.016,63,1.568,65,0.551,66,1.035,68,0.661,69,0.605,70,0.817,71,0.499,72,0.403,75,1.004,76,4.096,77,1.159,80,1.035,83,0.921,84,0.996,85,0.358,86,0.551,87,0.605,94,3.898,98,0.85,99,1.123,100,1.123,101,0.85,102,1.233,103,0.85,104,1.123,105,1.134,106,0.85,107,0.721,108,0.85,109,0.721,110,1.123,111,0.721,112,0.499,113,1.123,114,0.85,115,0.721,116,0.85,117,0.721,118,0.85,119,0.721,120,0.721,121,0.85,122,0.721,123,0.85,124,0.721,125,0.85,126,0.85,127,0.721,128,0.783,129,0.85,130,0.85,131,0.85,132,0.021,133,0.021,150,2.763,160,4.096,161,2.602,175,3.941,176,1.449,202,1.903,215,3.941,218,3.941,223,3.063,226,3.941,227,2.113,228,4.704,229,5.268,230,4.704,231,3.56,232,3.941,233,2.113,234,1.98,235,3.56,236,3.56,237,3.56,238,3.56,239,2.983,240,4.704,241,4.704,242,4.704,243,4.704]],["title/injectables/AddressService.html",[244,1.151,245,2.122]],["body/injectables/AddressService.html",[3,0.314,4,0.276,8,0.276,12,0.492,15,0.808,17,0.512,37,0.169,38,0.329,40,0.731,45,0.821,47,0.799,49,1.027,51,0.762,52,0.031,53,0.712,54,0.346,55,0.762,59,1.267,60,2.802,62,0.902,63,1.728,65,0.862,66,0.687,67,1.995,68,0.58,69,0.53,70,0.604,71,0.438,72,0.353,75,0.965,85,0.314,86,0.483,87,1.002,94,3.915,132,0.02,133,0.02,137,2.029,139,1.268,141,1.934,142,3.119,143,2.587,144,2.802,145,3.974,146,2.298,147,1.963,148,4.062,149,3.628,150,2.528,151,3.695,152,1.782,153,1.204,154,2.528,157,1.373,158,1.302,206,1.49,216,2.105,227,1.934,234,2.035,239,4.667,244,1.521,245,2.802,246,1.668,247,2.615,248,3.078,249,3.605,250,3.605,251,4.303,252,5.31,253,4.303,254,3.121,255,2.201,256,2.802,257,4.303,258,3.605,259,2.528,260,3.605,261,4.303,262,4.303,263,3.121,264,4.303,265,3.605,266,2.029,267,4.303,268,3.121,269,4.303,270,2.802,271,2.802,272,1.103,273,1.782,274,2.105,275,1.645,276,2.802,277,2.802,278,4.303,279,3.627,280,5.31,281,3.605,282,5.31,283,4.303,284,4.303,285,3.881,286,4.303,287,5.31,288,3.121,289,4.303,290,4.303,291,1.521,292,2.615,293,1.833,294,1.668,295,3.121,296,1.103,297,2.032,298,3.121,299,2.032,300,2.281,301,1.193,302,3.121,303,3.121,304,3.121,305,3.121,306,3.121,307,3.121,308,3.121,309,3.121,310,1.103,311,3.121,312,3.121]],["title/components/AppComponent.html",[0,0.015,107,0.659]],["body/components/AppComponent.html",[0,0.026,1,0.83,2,1.134,3,0.412,4,0.362,5,0.979,6,0.979,7,0.979,8,0.362,12,0.455,13,1.23,14,3.767,17,0.453,19,3.473,20,0.979,21,1.593,22,1.593,23,0.979,24,0.979,25,1.23,26,0.797,27,1.23,28,0.83,29,0.83,30,0.83,31,0.83,33,1.23,35,1.23,37,0.223,38,0.395,45,0.635,52,0.031,53,0.584,54,0.268,67,1.341,68,0.762,69,0.697,70,0.79,71,0.575,72,0.464,75,0.797,77,1.24,80,1.134,85,0.412,86,0.635,98,0.979,99,1.23,100,1.23,101,0.979,102,1.301,103,0.979,104,1.23,105,0.83,106,0.979,107,1.196,108,0.979,109,0.83,110,1.23,111,0.83,112,0.575,113,1.23,114,0.979,115,0.83,116,0.979,117,1.196,118,0.979,119,0.83,120,0.83,121,0.979,122,0.83,123,0.979,124,0.83,125,0.979,126,0.979,127,0.83,128,0.903,129,0.979,130,0.979,131,0.979,132,0.024,133,0.024,139,1.23,294,2.754,313,3.437,314,5.635,315,5.153,316,5.153,317,5.635,318,4.318,319,4.102,320,5.153,321,1.341,322,4.102]],["title/injectables/AuthService.html",[44,0.659,244,1.151]],["body/injectables/AuthService.html",[3,0.182,4,0.16,8,0.16,12,0.466,14,2.103,15,0.908,17,0.51,19,2.389,26,0.281,37,0.099,38,0.22,40,0.489,42,0.895,44,0.582,45,0.945,47,0.534,48,0.94,49,1.223,50,1.512,51,0.764,52,0.031,53,0.598,54,0.344,55,0.764,57,1.767,59,1.235,60,1.873,61,2.648,62,0.953,63,1.772,64,2.644,65,0.963,66,0.975,67,2.044,68,0.823,69,0.753,70,0.774,71,0.255,72,0.598,75,0.553,85,0.182,86,0.281,87,1.001,88,1.973,94,3.337,112,0.758,128,0.399,132,0.013,133,0.013,137,1.1,139,1.481,141,1.827,142,1.69,145,2.648,146,1.554,147,1.635,148,3.071,150,1.69,151,3.011,152,1.191,153,1.434,154,1.69,155,1.292,157,1.219,158,1.745,176,1.451,204,1.952,206,1.668,220,1.407,225,1.988,227,1.827,233,2.429,234,1.016,244,1.016,245,3.337,246,0.97,250,2.41,255,2.39,256,2.648,266,2.066,271,1.873,272,1.746,273,2.122,274,1.988,275,2.205,276,1.873,291,1.437,292,1.521,293,1.066,294,0.97,296,0.641,301,1.1,310,0.641,321,0.593,323,1.521,324,2.877,325,2.877,326,2.41,327,2.41,328,2.327,329,3.573,330,3.573,331,2.994,332,3.573,333,2.41,334,4.066,335,4.066,336,4.066,337,4.066,338,4.066,339,4.066,340,3.406,341,2.41,342,3.406,343,2.877,344,4.066,345,2.877,346,2.877,347,1.521,348,1.888,349,3.011,350,3.011,351,2.877,352,1.407,353,1.407,354,1.1,355,2.322,356,2.877,357,1.815,358,2.389,359,2.439,360,2.066,361,2.389,362,2.877,363,2.877,364,1.873,365,2.41,366,2.41,367,1.873,368,2.877,369,1.815,370,3.406,371,3.389,372,2.877,373,1.815,374,2.972,375,1.815,376,1.815,377,1.815,378,2.877,379,2.877,380,3.406,381,3.406,382,1.815,383,2.877,384,1.815,385,2.41,386,1.815,387,2.648,388,2.173,389,2.877,390,2.389,391,1.815,392,4.066,393,1.537,394,1.873,395,2.41,396,1.815,397,2.877,398,2.41,399,1.69,400,2.877,401,1.815,402,2.877,403,2.994,404,2.877,405,1.815,406,2.877,407,2.877,408,2.877,409,2.877,410,2.877,411,2.877,412,2.604,413,2.604,414,1.815,415,2.103,416,2.389,417,1.292,418,2.972,419,2.972,420,2.099,421,3.95,422,2.877,423,2.389,424,1.815,425,2.877,426,2.648,427,2.612,428,4.432,429,1.479,430,1.815,431,4.715,432,4.066,433,1.815,434,2.877,435,1.815,436,2.877,437,1.873,438,1.815,439,2.877,440,1.815,441,1.521,442,1.521,443,1.815,444,1.521,445,0.97,446,1.521,447,1.327,448,1.182,449,1.521,450,3.573,451,1.815,452,1.815,453,1.666,454,4.066,455,3.573,456,2.877,457,1.815,458,2.877,459,1.815,460,1.815,461,1.815,462,1.815,463,1.815,464,1.815,465,1.815,466,1.066,467,3.573,468,2.877,469,1.327,470,1.815,471,1.815,472,1.815,473,1.815,474,1.815,475,2.877,476,1.815,477,1.815,478,1.815,479,1.815,480,2.41]],["title/components/CardDetailComponent.html",[0,0.015,109,0.659]],["body/components/CardDetailComponent.html",[0,0.018,1,0.447,2,0.737,3,0.222,4,0.195,5,0.528,6,0.528,7,0.528,8,0.195,12,0.358,13,0.8,15,0.825,17,0.512,20,0.528,21,1.479,22,1.479,23,0.528,24,0.528,25,0.8,26,0.518,27,0.8,28,0.447,29,0.447,30,0.447,31,0.447,32,1.132,33,0.8,35,0.8,37,0.12,38,0.257,40,0.569,41,1.264,42,0.737,43,0.845,44,1.075,45,0.952,47,0.839,48,1.095,49,0.8,50,0.938,51,0.342,52,0.031,53,0.458,54,0.295,55,0.342,62,0.767,65,0.518,66,0.994,67,1.095,68,0.622,69,0.569,70,0.767,71,0.31,72,0.25,75,0.518,77,0.891,80,1.204,83,0.571,84,0.618,85,0.222,86,0.342,87,0.687,88,1.323,98,0.528,99,0.8,100,0.8,101,0.528,102,0.994,103,0.528,104,0.8,105,0.447,106,0.528,107,0.447,108,0.528,109,0.914,110,0.8,111,0.447,112,0.717,113,0.8,114,0.528,115,0.447,116,0.528,117,0.447,118,0.528,119,0.447,120,0.447,121,0.528,122,0.447,123,0.528,124,0.447,125,0.528,126,0.528,127,0.447,128,0.486,129,0.528,130,0.528,131,0.528,132,0.015,133,0.015,139,0.8,153,1.53,155,2.03,163,2.732,167,2.164,172,2.654,173,1.969,176,1.322,178,1.477,183,2.654,184,2.415,193,2.877,194,1.298,198,1.081,200,2.942,201,1.439,204,2.435,205,3.409,206,1.755,216,3.089,217,3.711,219,3.003,220,2.499,221,3.328,223,2.942,224,4.282,225,1.081,233,2.03,270,2.182,296,0.781,321,0.722,331,3.392,348,2.091,352,1.639,353,1.639,354,1.281,359,2.666,380,3.785,415,3.998,453,0.781,480,1.852,481,4.528,482,5.19,483,1.616,484,2.091,485,2.209,486,2.45,487,2.636,488,2.808,489,2.808,490,4.048,491,4.856,492,2.942,493,3.302,494,3.302,495,3.302,496,3.302,497,3.302,498,2.942,499,3.302,500,3.302,501,3.302,502,3.302,503,2.675,504,3.351,505,2.808,506,2.21,507,2.21,508,1.506,509,2.21,510,3.351,511,2.808,512,2.21,513,3.351,514,2.808,515,2.21,516,2.21,517,2.21,518,2.21,519,2.21,520,2.21,521,2.21,522,2.21,523,2.21,524,2.21,525,2.21,526,2.21,527,2.21,528,2.21,529,2.21,530,2.21,531,2.21,532,2.21,533,2.21,534,2.21,535,2.21,536,2.21,537,1.298,538,1.616,539,2.21,540,2.21,541,3.351,542,1.439,543,2.21,544,3.351,545,3.351,546,3.351,547,3.351,548,3.351,549,3.351,550,3.351,551,3.351,552,3.351,553,3.351,554,3.351,555,2.21,556,2.21,557,2.21,558,2.21,559,2.21,560,2.21,561,2.21,562,2.21,563,2.21,564,2.21,565,2.21,566,4.048,567,1.852,568,2.21,569,2.21,570,2.21,571,2.21,572,2.21,573,2.21,574,2.21,575,2.21,576,2.21,577,2.21,578,2.21,579,1.439,580,2.21,581,1.616,582,3.351,583,2.21,584,1.616,585,3.998,586,3.785,587,3.785,588,2.654,589,2.654,590,3.785,591,2.942,592,3.302,593,4.518,594,3.351]],["title/interfaces/CardItem.html",[112,0.457,134,1.349]],["body/interfaces/CardItem.html",[3,0.361,4,0.318,8,0.318,12,0.318,15,0.742,17,0.518,37,0.195,38,0.362,52,0.031,54,0.422,57,1.547,59,0.791,62,0.611,67,2.181,85,0.361,112,0.664,132,0.022,133,0.022,134,1.488,135,2.112,137,2.023,138,2.628,139,1.599,140,2.341,146,2.294,147,1.974,152,1.96,153,1.574,154,2.781,157,1.224,291,1.673,359,2.762,417,1.615,421,3.966,426,3.083,484,1.374,485,2.859,492,3.663,493,4.112,494,4.112,495,4.112,496,4.112,497,4.112,498,3.663,499,4.112,500,4.112,501,4.112,502,4.112,588,2.781,590,3.966,591,3.083,595,3.012,596,2.112,597,4.713,598,5.029,599,4.734,600,5.625,601,4.734,602,3.966,603,4.734,604,4.734,605,4.734,606,4.734]],["title/injectables/CardItemService.html",[244,1.151,503,1.593]],["body/injectables/CardItemService.html",[3,0.096,4,0.199,8,0.085,12,0.272,15,0.699,17,0.462,26,0.26,37,0.091,38,0.129,40,0.286,45,0.526,49,0.402,51,0.419,52,0.031,53,0.307,54,0.239,55,0.419,57,0.55,59,0.37,62,0.46,65,0.633,67,1.11,68,0.178,69,0.382,70,0.236,71,0.134,77,0.596,80,1.22,85,0.096,86,0.148,87,0.46,88,0.735,97,3.676,102,0.211,112,0.699,132,0.008,133,0.008,137,1.298,146,2.32,147,1.177,152,1.121,153,0.757,157,0.435,158,0.819,166,4.523,206,1.291,225,0.823,234,1.376,244,0.594,246,0.512,248,1.447,255,1.631,259,0.988,272,0.957,273,0.696,274,0.823,275,1.035,279,2.535,285,3.504,293,0.562,294,0.512,296,0.594,297,1.095,299,0.623,301,2.338,310,0.338,359,2.13,361,0.988,364,2.008,367,1.763,374,2.483,385,1.409,437,1.095,449,0.802,453,0.338,484,1.906,485,2.344,492,3.929,493,4.41,494,4.41,495,4.41,496,4.41,497,4.41,498,3.929,499,4.41,500,4.41,501,4.41,502,4.41,503,0.823,514,1.409,579,2.008,585,1.979,591,1.763,592,3.861,597,5.055,607,0.802,608,1.885,609,1.682,610,1.682,611,1.682,612,1.682,613,2.707,614,1.682,615,0.957,616,1.095,617,1.682,618,0.957,619,1.682,620,0.957,621,2.287,622,1.409,623,1.682,624,2.678,625,0.957,626,1.682,627,1.682,628,2.268,629,2.268,630,1.409,631,1.23,632,0.957,633,2.707,634,1.682,635,1.682,636,4.793,637,4.793,638,4.793,639,1.682,640,6.033,641,1.682,642,5.5,643,3.397,644,5.667,645,3.893,646,1.682,647,5.399,648,4.793,649,6.331,650,1.682,651,1.682,652,3.397,653,3.893,654,2.707,655,1.682,656,3.893,657,1.682,658,1.682,659,1.682,660,5.399,661,4.559,662,3.397,663,3.893,664,1.682,665,1.682,666,1.682,667,1.682,668,1.682,669,3.397,670,1.682,671,1.682,672,1.682,673,3.893,674,3.893,675,3.893,676,3.893,677,1.682,678,3.262,679,3.397,680,1.682,681,5.282,682,5.5,683,3.893,684,1.682,685,1.682,686,4.267,687,3.893,688,2.707,689,3.397,690,5.399,691,4.793,692,3.397,693,3.397,694,1.682,695,4.267,696,2.707,697,4.559,698,1.682,699,1.682,700,1.682,701,1.682,702,1.682,703,1.682,704,2.707,705,2.707,706,1.682,707,3.397,708,4.986,709,2.707,710,2.707,711,1.682,712,1.682,713,3.575,714,2.707,715,1.682,716,1.682,717,1.682,718,1.682,719,1.682,720,1.682,721,3.333,722,2.707,723,1.682,724,3.893,725,1.682,726,4.267,727,1.682,728,3.893,729,3.397,730,3.893,731,4.793,732,2.707,733,1.682,734,1.682,735,1.682,736,1.682,737,3.397,738,1.682,739,1.682,740,1.682,741,1.682,742,1.682,743,1.682,744,1.682,745,1.682,746,1.682,747,1.682,748,1.682,749,1.23,750,2.707,751,4.793,752,1.682,753,3.893,754,1.682,755,3.575,756,1.682,757,1.682,758,1.682,759,2.707,760,2.707,761,1.682,762,1.682,763,1.682,764,1.682,765,1.682,766,2.707,767,2.707,768,1.682,769,1.682,770,1.682,771,1.682,772,1.682,773,4.793,774,3.397,775,1.682,776,1.682,777,1.682,778,1.682,779,1.682,780,2.707,781,1.682,782,1.682,783,2.707,784,3.893,785,3.893,786,3.397,787,1.682,788,1.682,789,2.707,790,1.682,791,1.682,792,1.682,793,1.682,794,1.682,795,2.707,796,1.682,797,3.397,798,2.268,799,2.707,800,1.682,801,1.682,802,1.682,803,1.682,804,1.682,805,2.846,806,2.707,807,2.707,808,1.682,809,3.893,810,1.682,811,1.682,812,2.707,813,3.893,814,3.397,815,1.682,816,2.707,817,2.707,818,2.707,819,1.682,820,1.682,821,1.682,822,1.682,823,1.682,824,1.682,825,1.682,826,1.682,827,1.682,828,2.707,829,1.682,830,1.682,831,2.707,832,1.682,833,2.707,834,1.682,835,1.682,836,1.682,837,1.682,838,1.682,839,1.682,840,1.682,841,1.682,842,1.682,843,2.707,844,4.559,845,1.682,846,2.707,847,1.682,848,1.682,849,3.397,850,1.682,851,1.682,852,4.267,853,1.682,854,1.682,855,3.397,856,1.682,857,1.682,858,4.793,859,1.682,860,1.682,861,1.682,862,1.682,863,1.682,864,1.682,865,1.682,866,1.682,867,2.707,868,2.707,869,2.707,870,1.682,871,1.682,872,4.793,873,1.682,874,3.397,875,1.682,876,1.682,877,2.707,878,1.682,879,1.682,880,1.682,881,3.893,882,2.707,883,3.397,884,3.397,885,3.397,886,3.397,887,1.682,888,3.397,889,1.682,890,2.707,891,4.559,892,3.893,893,1.682,894,1.682,895,1.682,896,1.682,897,1.682,898,1.682,899,1.682,900,1.682,901,1.682,902,1.682,903,1.682,904,1.682,905,1.682,906,1.682,907,3.397,908,1.682,909,1.682,910,2.707,911,1.682,912,1.682,913,1.682,914,1.682,915,1.682,916,1.682,917,1.682,918,2.707,919,1.682,920,1.682,921,1.682,922,1.682,923,2.707,924,1.682,925,1.682,926,1.682,927,1.682,928,1.682,929,1.682,930,1.682,931,1.682,932,1.682,933,2.707,934,2.707,935,1.682,936,1.682,937,1.682,938,1.682,939,2.707,940,1.682,941,1.409,942,2.707,943,3.397,944,1.682,945,1.682,946,1.682,947,1.682,948,1.682,949,1.23,950,2.707,951,3.397,952,3.893,953,3.893,954,1.682,955,1.682,956,1.682,957,1.682,958,2.707,959,1.682,960,1.682,961,1.682,962,1.682,963,1.682,964,1.682,965,4.267,966,1.682,967,3.893,968,2.707,969,2.707,970,1.682,971,1.682,972,1.682,973,1.682,974,1.682,975,1.682,976,2.707,977,1.682,978,1.682,979,1.682,980,3.397,981,1.682,982,1.682,983,1.682,984,1.682,985,1.682,986,1.682,987,1.682,988,1.682,989,1.682,990,1.682,991,3.397,992,3.397,993,1.682,994,1.409,995,1.682,996,1.682,997,1.682,998,1.682,999,1.682,1000,1.682,1001,1.682,1002,1.682,1003,1.682,1004,1.682,1005,1.682,1006,1.682,1007,1.682,1008,1.682,1009,1.682,1010,1.682,1011,1.682,1012,3.893,1013,1.682,1014,2.707,1015,2.707,1016,1.682,1017,1.682,1018,1.682,1019,1.682,1020,1.682,1021,1.682,1022,1.682,1023,1.682,1024,1.682,1025,1.682,1026,2.707,1027,1.682,1028,1.682,1029,1.682,1030,1.682,1031,1.682,1032,1.682,1033,1.682,1034,1.682,1035,1.682,1036,1.682,1037,1.682,1038,1.682,1039,1.682,1040,1.682,1041,1.682,1042,1.682,1043,1.682,1044,1.682,1045,1.682,1046,1.682,1047,1.682,1048,1.682,1049,1.682,1050,1.682,1051,1.682,1052,1.682,1053,1.682,1054,1.682,1055,1.682,1056,1.682,1057,1.682,1058,1.682,1059,1.682,1060,1.682,1061,1.682,1062,0.957,1063,1.409,1064,1.682,1065,0.957,1066,0.957,1067,0.802,1068,0.957,1069,0.957,1070,0.957,1071,2.253,1072,0.957,1073,0.957,1074,0.957,1075,0.957,1076,0.7,1077,0.957,1078,0.957,1079,0.957]],["title/components/CardManageComponent.html",[0,0.015,31,0.659]],["body/components/CardManageComponent.html",[0,0.023,1,0.633,2,0.948,3,0.314,4,0.276,5,0.746,6,0.746,7,0.746,8,0.276,12,0.435,13,1.029,15,0.745,17,0.505,18,3.61,20,0.746,21,1.55,22,1.55,23,0.746,24,0.746,25,1.029,26,0.667,27,1.029,28,0.633,29,0.633,30,0.633,31,1.075,32,1.379,33,1.029,35,1.029,37,0.17,38,0.33,40,0.732,41,1.486,42,1.169,43,1.195,44,1.195,45,0.862,47,0.8,48,1.408,49,1.029,51,0.667,52,0.031,53,0.602,54,0.322,55,0.667,62,1.021,65,0.763,66,1.169,68,0.58,69,0.531,70,0.808,71,0.438,72,0.354,75,0.667,77,1.085,80,1.359,81,4.212,83,0.808,84,0.875,85,0.314,86,0.484,87,0.902,88,1.612,98,0.746,99,1.029,100,1.029,101,0.746,102,1.169,103,0.746,104,1.029,105,0.633,106,0.746,107,0.633,108,0.746,109,0.633,110,1.029,111,0.633,112,0.828,113,1.029,114,0.746,115,0.633,116,0.746,117,0.633,118,0.746,119,0.633,120,0.633,121,0.746,122,0.633,123,0.746,124,0.633,125,0.746,126,0.746,127,0.633,128,0.688,129,0.746,130,0.746,131,0.746,132,0.02,133,0.02,139,1.268,146,1.647,153,1.205,176,1.114,178,1.408,220,1.529,225,2.107,234,2.036,255,1.884,291,1.522,321,1.022,348,2.299,352,2.107,353,2.107,354,1.647,359,2.385,399,3.385,415,3.149,453,1.105,481,4.212,484,2.361,485,2.942,486,2.285,503,2.942,508,1.936,537,1.837,538,2.285,585,3.149,586,3.61,587,3.61,588,2.531,589,2.531,1071,3.149,1080,2.619,1081,4.308,1082,4.308,1083,4.308,1084,3.211,1085,5.313,1086,4.308,1087,4.308,1088,3.126,1089,4.308,1090,3.149,1091,3.126,1092,4.308,1093,3.126,1094,4.308,1095,3.126,1096,2.619,1097,3.126,1098,3.126,1099,2.619,1100,3.126,1101,2.619,1102,2.619,1103,2.036,1104,2.619,1105,2.619,1106,3.126,1107,3.149,1108,4.308,1109,4.308,1110,2.806,1111,2.806,1112,2.531]],["title/components/CarditemListComponent.html",[0,0.015,111,0.659]],["body/components/CarditemListComponent.html",[0,0.022,1,0.599,2,0.913,3,0.298,4,0.261,5,0.707,6,0.707,7,0.707,8,0.261,12,0.458,13,1.239,15,0.766,17,0.506,20,0.707,21,1.54,22,1.54,23,0.707,24,0.707,25,0.99,26,0.642,27,0.99,28,0.599,29,0.599,30,0.599,31,0.599,32,1.34,33,0.99,35,0.99,37,0.161,38,0.318,40,0.704,41,1.452,42,1.142,44,1.201,45,0.803,47,0.77,48,1.356,50,1.16,51,0.642,52,0.031,53,0.588,54,0.312,55,0.642,57,1.786,59,1.142,60,3.379,65,0.642,66,1.054,67,1.565,68,0.55,69,0.503,70,0.794,71,0.415,72,0.335,75,0.642,77,1.054,80,0.913,83,0.765,84,0.828,85,0.298,86,0.458,87,0.928,88,1.565,98,0.707,99,0.99,100,0.99,101,0.707,102,1.142,103,0.707,104,0.99,105,0.599,106,0.707,107,0.599,108,0.707,109,0.599,110,0.99,111,1.05,112,0.857,113,0.99,114,0.707,115,0.599,116,0.707,117,0.599,118,0.707,119,0.599,120,0.599,121,0.707,122,0.599,123,0.707,124,0.599,125,0.707,126,0.707,127,0.599,128,0.651,129,0.707,130,0.707,131,0.707,132,0.019,133,0.019,147,1.448,152,1.717,153,1.452,158,1.713,176,1.464,178,1.356,225,2.538,234,1.834,259,2.437,291,1.466,296,1.692,321,0.967,352,2.028,353,2.028,354,1.585,355,1.83,358,2.437,359,2.58,360,1.585,361,1.739,364,2.701,367,1.927,381,3.475,388,1.582,484,2.165,485,2.902,492,3.688,503,2.902,508,1.864,537,1.739,538,2.163,579,1.927,581,2.163,591,2.701,602,3.475,608,4.012,624,3.793,631,3.032,1063,3.475,1096,2.479,1102,2.479,1112,2.437,1113,4.578,1114,4.578,1115,2.163,1116,3.688,1117,3.475,1118,3.475,1119,3.475,1120,4.148,1121,2.959,1122,5.189,1123,4.148,1124,4.012,1125,4.148,1126,2.959,1127,2.959,1128,4.148,1129,5.189,1130,3.475,1131,4.148,1132,4.148,1133,2.959,1134,2.959,1135,2.959,1136,2.959,1137,2.959,1138,1.739,1139,2.959,1140,2.959,1141,4.148,1142,4.148,1143,4.148,1144,3.032]],["title/components/LoginComponent.html",[0,0.015,115,0.659]],["body/components/LoginComponent.html",[0,0.023,1,0.649,2,0.965,3,0.322,4,0.283,5,0.765,6,0.765,7,0.765,8,0.283,12,0.441,13,1.046,15,0.615,17,0.511,19,2.575,20,0.765,21,1.554,22,1.554,23,0.765,24,0.765,25,1.046,26,0.678,27,1.046,28,0.649,29,0.649,30,0.649,31,0.649,32,1.397,33,1.046,35,1.046,37,0.174,38,0.336,40,0.744,41,1.502,42,1.099,43,1.225,44,1.175,45,0.898,47,0.814,48,1.433,49,1.282,50,1.502,51,0.496,52,0.031,53,0.566,54,0.286,55,0.496,59,1.182,62,0.912,63,1.624,65,0.678,66,1.182,70,0.789,71,0.45,72,0.363,75,0.678,77,1.099,80,0.965,83,0.829,84,0.897,85,0.322,86,0.496,87,0.744,98,0.765,99,1.046,100,1.046,101,0.765,102,1.182,103,0.765,104,1.046,105,0.649,106,0.765,107,0.649,108,0.765,109,0.649,110,1.046,111,0.649,112,0.45,113,1.046,114,0.765,115,1.087,116,0.765,117,0.649,118,0.765,119,0.649,120,0.649,121,0.765,122,0.649,123,0.765,124,0.649,125,0.765,126,0.765,127,0.649,128,0.705,129,0.765,130,0.765,131,0.765,132,0.02,133,0.02,139,1.046,153,1.624,155,2.413,163,3.377,167,2.67,172,3.155,173,2.575,176,1.133,178,1.433,183,2.575,184,2.87,193,2.443,194,1.883,198,1.568,202,1.713,204,2.068,205,2.575,206,1.326,216,2.144,217,3.155,321,1.048,341,4.864,348,2.313,354,1.675,366,4.499,371,1.883,388,1.713,390,3.411,393,3.103,466,1.883,487,3.253,508,1.969,1103,2.854,1130,2.685,1138,1.883,1145,2.685,1146,3.672,1147,4.383,1148,4.383,1149,4.995,1150,4.383,1151,3.205,1152,3.205,1153,3.204,1154,2.343,1155,3.205,1156,2.685,1157,3.205,1158,3.205,1159,3.205,1160,3.205,1161,3.205,1162,3.205,1163,3.205,1164,4.979,1165,3.205,1166,3.497,1167,5.37,1168,3.204]],["title/components/NavbarComponent.html",[0,0.015,117,0.659]],["body/components/NavbarComponent.html",[0,0.022,1,0.606,2,0.92,3,0.301,4,0.264,5,0.715,6,0.715,7,0.715,8,0.264,12,0.426,13,1.245,15,0.898,17,0.503,20,0.715,21,1.542,22,1.542,23,0.715,24,0.715,25,0.998,26,0.647,27,0.998,28,0.606,29,0.606,30,0.606,31,0.606,32,1.348,33,0.998,35,0.998,37,0.162,38,0.32,40,0.71,41,1.459,42,1.06,44,1.205,45,0.879,47,0.776,48,1.367,49,0.998,50,1.17,51,0.463,52,0.031,53,0.546,54,0.314,55,0.463,59,1.31,63,1.665,64,2.045,65,0.745,66,1.148,68,0.556,69,0.508,70,0.77,71,0.42,72,0.339,75,0.647,77,1.06,80,0.92,83,0.774,84,0.837,85,0.301,86,0.463,87,0.71,88,0.978,91,3.503,98,0.715,99,0.998,100,0.998,101,0.715,102,1.148,103,0.715,104,0.998,105,0.606,106,0.715,107,0.606,108,0.715,109,0.606,110,0.998,111,0.606,112,0.42,113,0.998,114,0.715,115,0.606,116,0.715,117,1.056,118,0.715,119,0.606,120,0.606,121,0.715,122,0.606,123,0.715,124,0.606,125,0.715,126,0.715,127,0.606,128,0.659,129,0.715,130,0.715,131,0.715,132,0.019,133,0.019,139,1.245,143,1.878,153,1.17,157,1.349,158,1.264,163,2.787,167,2.575,176,1.47,178,1.705,184,2.787,193,2.045,198,1.464,202,1.6,204,1.731,233,1.878,249,3.503,259,2.456,272,1.477,273,1.731,274,2.045,275,1.993,277,2.723,291,1.477,296,1.058,310,1.477,321,0.978,326,3.503,327,3.503,340,4.036,342,4.369,347,2.508,348,2.23,352,2.045,353,2.045,354,1.598,355,1.598,360,1.598,361,2.456,371,3.064,387,2.723,388,1.6,427,2.188,437,2.723,484,1.598,485,2.045,487,3.137,508,2.554,592,3.812,621,2.456,624,3.056,628,3.503,629,3.503,630,4.986,631,3.812,1067,2.508,1103,2.723,1138,1.759,1168,3.056,1169,2.508,1170,5.215,1171,3.056,1172,4.181,1173,4.181,1174,4.818,1175,5.215,1176,4.181,1177,2.993,1178,5.215,1179,4.181,1180,2.993,1181,4.181,1182,2.993,1183,2.993,1184,2.993,1185,2.993,1186,2.993,1187,2.993,1188,2.993,1189,2.993,1190,2.993,1191,4.818,1192,5.215,1193,4.181,1194,4.181,1195,4.181,1196,4.181,1197,4.181,1198,4.181]],["title/components/OrderDetailComponent.html",[0,0.015,119,0.659]],["body/components/OrderDetailComponent.html",[0,0.023,1,0.635,2,0.95,3,0.315,4,0.277,5,0.749,6,0.749,7,0.749,8,0.277,12,0.436,13,1.031,15,0.809,17,0.505,20,0.749,21,1.55,22,1.55,23,0.749,24,0.749,25,1.031,26,0.668,27,1.031,28,0.635,29,0.635,30,0.635,31,0.635,32,1.382,33,1.031,35,1.031,37,0.17,38,0.331,40,0.733,42,1.228,45,0.863,47,0.802,51,0.485,52,0.031,53,0.559,54,0.347,55,0.485,62,1.05,65,0.668,68,0.802,69,0.733,70,0.746,71,0.44,72,0.355,75,0.668,77,1.344,80,0.95,83,0.811,85,0.315,86,0.485,87,0.533,98,0.749,99,1.031,100,1.031,101,0.749,102,1.171,103,0.749,104,1.031,105,0.635,106,0.749,107,0.635,108,0.749,109,0.635,110,1.031,111,0.635,112,0.783,113,1.031,114,0.749,115,0.635,116,0.749,117,0.635,118,0.749,119,1.077,120,0.635,121,0.749,122,0.635,123,0.749,124,0.635,125,0.749,126,0.749,127,0.635,128,0.69,129,0.749,130,0.749,131,0.749,132,0.02,133,0.02,137,1.651,139,1.031,147,1.609,155,1.94,158,1.306,178,1.412,206,0.949,227,2.391,234,1.526,255,1.651,266,1.651,272,1.526,275,1.651,301,1.888,310,1.526,328,3.216,355,2.406,359,1.788,360,2.204,387,2.812,429,2.203,445,1.676,453,1.108,483,2.293,484,2.034,486,3.157,488,3.618,489,3.618,537,1.843,588,3.537,589,2.537,1084,2.812,1090,3.157,1107,3.157,1110,3.634,1111,3.634,1112,3.388,1116,3.465,1144,3.157,1199,3.756,1200,3.756,1201,4.832,1202,4.066,1203,4.079,1204,4.319,1205,4.939,1206,4.319,1207,3.137,1208,5.321,1209,3.137,1210,4.319,1211,3.157,1212,4.319,1213,3.618,1214,3.137,1215,4.319,1216,3.126,1217,4.939,1218,2.043,1219,2.293,1220,2.628,1221,2.628,1222,3.618,1223,4.319]],["title/components/OrderFinishComponent.html",[0,0.015,120,0.659]],["body/components/OrderFinishComponent.html",[0,0.023,1,0.674,2,0.989,3,0.335,4,0.294,5,0.794,6,0.794,7,0.794,8,0.294,12,0.397,13,1.073,15,0.631,17,0.509,20,0.794,21,1.561,22,1.561,23,0.794,24,0.794,25,1.073,26,0.696,27,1.073,28,0.674,29,0.674,30,0.674,31,0.674,33,1.073,35,1.073,37,0.181,38,0.344,40,0.764,41,1.526,42,1.2,43,1.272,44,1.215,45,0.788,47,0.835,49,1.073,50,1.526,51,0.515,52,0.031,53,0.577,54,0.293,55,0.515,57,1.47,62,0.764,64,2.199,65,0.515,66,0.732,68,0.618,69,0.565,70,0.823,71,0.467,72,0.377,75,0.696,77,1.376,80,0.989,84,0.931,85,0.335,86,0.515,87,0.764,88,1.47,92,3.767,98,0.794,99,1.073,100,1.073,101,0.794,102,1.2,103,0.794,104,1.073,105,0.674,106,0.794,107,0.674,108,0.794,109,0.674,110,1.073,111,0.674,112,0.467,113,1.073,114,0.794,115,0.674,116,0.794,117,0.674,118,0.794,119,1.104,120,1.104,121,0.794,122,0.674,123,0.794,124,0.674,125,0.794,126,0.794,127,0.674,128,0.732,129,0.794,130,0.794,131,0.794,132,0.021,133,0.021,157,1.163,176,1.518,178,1.47,233,2.45,266,1.946,301,1.272,321,1.088,328,3.316,348,2.333,354,1.718,355,2.244,360,2.244,399,2.641,423,1.955,429,2.43,445,1.778,448,2.167,453,1.176,466,1.955,469,2.432,487,3.316,584,2.432,1199,3.552,1200,2.167,1216,3.204,1218,2.167,1219,2.432,1224,4.569,1225,2.788,1226,4.496,1227,4.496,1228,4.496,1229,4.496,1230,4.496,1231,4.496,1232,3.327,1233,4.496,1234,4.496,1235,4.496,1236,3.767,1237,3.767,1238,3.287,1239,2.788,1240,3.327,1241,2.432,1242,3.327,1243,3.327,1244,2.788,1245,2.788,1246,3.327,1247,3.327,1248,3.767,1249,4.496,1250,4.496,1251,4.496,1252,3.767,1253,4.496]],["title/components/OrderListComponent.html",[0,0.015,30,0.659]],["body/components/OrderListComponent.html",[0,0.02,1,0.52,2,0.825,3,0.258,4,0.227,5,0.613,6,0.613,7,0.613,8,0.227,12,0.477,13,0.895,15,0.802,17,0.514,20,0.613,21,1.512,22,1.512,23,0.613,24,0.613,25,0.895,26,0.685,27,0.895,28,0.52,29,0.52,30,0.985,31,0.52,32,1.238,33,0.895,35,0.895,37,0.139,38,0.287,40,0.637,41,1.361,42,1.071,44,1.157,45,0.884,47,0.904,48,1.225,50,1.049,51,0.753,52,0.031,53,0.612,54,0.364,55,0.753,59,1.258,62,0.971,63,1.511,64,1.833,65,0.836,66,0.974,68,0.822,69,0.752,70,0.782,71,0.36,72,0.291,75,0.58,77,1.304,78,4.262,80,1.071,83,0.664,84,0.719,85,0.258,86,0.397,87,0.879,88,1.225,98,0.613,99,0.895,100,0.895,101,0.613,102,1.071,103,0.613,104,0.895,105,0.52,106,0.613,107,0.52,108,0.613,109,0.52,110,0.895,111,0.52,112,0.802,113,0.895,114,0.613,115,0.52,116,0.613,117,0.52,118,0.613,119,0.985,120,0.52,121,0.613,122,0.52,123,0.613,124,0.52,125,0.613,126,0.613,127,0.52,128,0.565,129,0.613,130,0.613,131,0.613,132,0.017,133,0.017,139,1.162,141,1.684,143,1.684,146,1.433,147,1.472,149,1.51,155,1.684,157,0.969,176,1.258,178,1.225,206,1.134,226,3.141,234,1.909,255,1.86,266,1.86,272,1.325,273,1.552,296,0.908,301,1.433,310,1.564,350,3.277,352,1.833,353,1.833,355,2.442,360,2.442,365,4.526,371,2.202,403,3.708,417,1.684,426,2.441,429,2.453,445,1.373,446,2.153,453,1.325,484,2.264,508,1.684,537,1.51,567,2.153,589,2.202,621,2.859,1084,3.169,1090,2.74,1110,2.441,1111,1.673,1112,2.202,1115,1.878,1116,2.441,1117,3.141,1118,3.141,1119,3.141,1199,3.797,1200,1.673,1201,3.141,1202,3.858,1203,3.782,1213,3.141,1216,3.481,1218,1.673,1220,3.141,1221,3.141,1238,2.74,1239,2.153,1248,3.141,1252,3.141,1254,4.526,1255,4.526,1256,4.426,1257,4.426,1258,4.426,1259,5.174,1260,3.749,1261,2.569,1262,3.749,1263,3.749,1264,2.569,1265,3.749,1266,2.569,1267,3.749,1268,2.569,1269,3.749,1270,3.749,1271,3.749,1272,2.569,1273,3.749,1274,2.569,1275,2.569,1276,2.569,1277,3.749,1278,2.569,1279,2.569,1280,2.569,1281,3.749,1282,3.749,1283,3.749,1284,3.749]],["title/components/PaymentComponent.html",[0,0.015,122,0.659]],["body/components/PaymentComponent.html",[0,0.023,1,0.643,2,0.958,3,0.319,4,0.28,5,0.758,6,0.758,7,0.758,8,0.28,12,0.439,13,1.382,15,0.75,17,0.515,20,0.758,21,1.552,22,1.552,23,0.758,24,0.758,25,1.04,26,0.769,27,1.04,28,0.643,29,0.643,30,0.643,31,0.643,32,1.39,33,1.04,35,1.04,37,0.172,38,0.333,40,0.739,41,1.496,42,0.958,43,1.213,44,1.2,45,0.827,47,0.809,48,1.423,49,1.04,50,1.619,51,0.491,52,0.031,53,0.563,54,0.284,55,0.491,57,1.423,59,0.958,65,0.674,66,0.958,68,0.59,69,0.539,70,0.75,71,0.445,72,0.359,75,0.674,77,1.094,80,0.958,83,0.821,84,0.888,85,0.319,86,0.491,87,0.739,88,1.423,98,0.758,99,1.04,100,1.04,101,0.758,102,1.177,103,0.758,104,1.04,105,0.643,106,0.758,107,0.643,108,0.758,109,0.643,110,1.04,111,0.643,112,0.445,113,1.04,114,0.758,115,0.643,116,0.758,117,0.643,118,0.758,119,0.643,120,0.643,121,0.758,122,1.083,123,0.758,124,0.643,125,0.758,126,0.758,127,0.643,128,0.699,129,0.758,130,0.758,131,0.758,132,0.02,133,0.02,139,1.04,141,1.957,157,1.126,158,1.618,176,1.383,178,1.423,182,3.648,248,2.327,266,1.9,272,1.539,273,1.803,275,1.664,291,1.539,301,1.213,310,1.539,321,1.038,348,2.308,354,1.664,355,2.044,360,1.664,387,2.836,388,2.327,399,3.142,453,1.122,466,1.865,505,3.648,584,2.321,721,3.91,1237,3.648,1238,3.183,1241,2.321,1244,2.66,1245,2.66,1285,2.66,1286,5.348,1287,5.285,1288,4.354,1289,4.354,1290,4.354,1291,4.97,1292,5.348,1293,4.354,1294,3.175,1295,4.354,1296,4.354,1297,4.354,1298,5.348,1299,5.348,1300,3.648,1301,3.175,1302,4.354,1303,4.354,1304,4.354,1305,4.354,1306,5.348,1307,3.175,1308,2.66,1309,4.354,1310,3.175,1311,3.175,1312,4.354,1313,3.175,1314,3.175,1315,4.354,1316,5.348,1317,4.354,1318,4.354]],["title/components/RegistrationFormComponent.html",[0,0.015,124,0.659]],["body/components/RegistrationFormComponent.html",[0,0.02,1,0.506,2,0.808,3,0.251,4,0.221,5,0.596,6,0.596,7,0.596,8,0.221,12,0.385,13,0.877,17,0.5,20,0.596,21,1.506,22,1.506,23,0.596,24,0.596,25,0.877,26,0.568,27,0.877,28,0.506,29,0.506,30,0.506,31,0.506,32,1.218,33,0.877,35,0.877,37,0.136,38,0.281,40,0.624,41,1.343,42,1.056,44,1.148,45,0.91,47,0.95,48,1.2,50,1.027,51,0.386,52,0.031,53,0.493,54,0.239,55,0.386,62,0.424,63,1.547,65,0.568,66,1.056,70,0.775,71,0.35,72,0.283,75,0.568,77,0.958,80,0.808,83,0.646,84,0.699,85,0.251,86,0.386,87,0.739,88,1.423,97,3.142,98,0.596,99,0.877,100,0.877,101,0.596,102,1.056,103,0.596,104,0.877,105,0.506,106,0.596,107,0.506,108,0.596,109,0.506,110,0.877,111,0.506,112,0.35,113,0.877,114,0.596,115,0.506,116,0.596,117,0.506,118,0.596,119,0.506,120,0.506,121,0.596,122,0.506,123,0.596,124,0.972,125,1.32,126,0.596,127,0.506,128,0.55,129,0.596,130,0.596,131,0.596,132,0.017,133,0.017,139,1.146,141,1.65,143,1.122,153,1.619,163,3.094,167,2.327,168,3.183,172,2.82,173,2.157,176,1.383,180,3.076,183,2.157,184,2.566,193,2.704,194,2.157,195,1.826,196,1.826,197,1.627,198,1.221,199,2.82,201,1.627,204,2.289,205,3.142,206,1.617,216,2.878,217,3.547,219,3.142,220,2.615,221,3.833,222,3.483,223,3.126,227,1.65,232,3.076,266,2.168,291,0.883,296,0.883,321,0.816,348,2.168,349,3.248,352,1.796,353,1.796,354,1.403,358,3.332,388,1.335,390,2.82,393,2.566,399,2.157,412,2.82,413,3.458,416,2.82,417,2.763,420,2.82,466,1.467,508,1.65,579,1.627,581,1.826,678,3.076,749,3.509,805,4.022,949,3.509,1104,2.093,1138,1.467,1154,1.826,1156,2.093,1164,5.058,1166,2.391,1168,2.684,1211,4.496,1236,4.022,1319,4.999,1320,4.999,1321,2.093,1322,5.348,1323,3.672,1324,3.672,1325,3.672,1326,4.354,1327,4.8,1328,2.498,1329,3.672,1330,2.498,1331,3.672,1332,3.672,1333,3.076,1334,2.498,1335,2.093,1336,2.498,1337,2.093,1338,2.498,1339,2.498,1340,2.093,1341,2.498,1342,2.498,1343,2.498,1344,2.498,1345,2.498,1346,3.183,1347,1.826,1348,2.498,1349,3.648,1350,3.076,1351,2.498,1352,2.093,1353,3.672,1354,3.672,1355,2.498,1356,2.498,1357,2.498,1358,2.498,1359,2.498,1360,2.498,1361,2.498,1362,2.498,1363,2.498,1364,2.498,1365,2.498,1366,2.498,1367,2.498,1368,2.498,1369,2.498,1370,2.498,1371,2.498,1372,2.498,1373,2.093,1374,2.093,1375,2.498,1376,2.498,1377,2.498,1378,4.931,1379,4.931,1380,4.931,1381,4.022,1382,4.8,1383,4.8,1384,4.8,1385,4.8,1386,3.672,1387,3.672,1388,3.076]],["title/interfaces/ShoppingCart.html",[134,1.349,429,1.349]],["body/interfaces/ShoppingCart.html",[3,0.415,4,0.364,8,0.364,12,0.457,17,0.502,37,0.224,38,0.396,52,0.031,54,0.406,59,1.138,62,1.102,63,1.447,70,0.725,85,0.415,112,0.831,132,0.024,133,0.024,134,1.708,135,2.423,137,2.264,139,1.235,140,3.368,142,3.038,146,2.264,147,1.983,149,3.48,151,3.038,152,2.141,155,2.324,157,1.61,227,2.324,234,1.827,291,1.827,355,2.379,360,2.441,423,3.657,426,3.368,427,4.33,429,2.141,447,3.015,448,2.686,484,1.977,498,3.857,596,3.038,1084,3.857,1171,3.78,1202,3.368,1389,3.456,1390,3.456,1391,4.333,1392,5.923,1393,5.172,1394,4.333,1395,5.172,1396,5.172,1397,5.172,1398,4.125]],["title/components/ShoppingCartComponent.html",[0,0.015,127,0.659]],["body/components/ShoppingCartComponent.html",[0,0.022,1,0.598,2,0.911,3,0.297,4,0.261,5,0.705,6,0.705,7,0.705,8,0.261,12,0.422,13,0.988,15,0.766,17,0.504,20,0.705,21,1.539,22,1.539,23,0.705,24,0.705,25,0.988,26,0.74,27,0.988,28,0.598,29,0.598,30,0.598,31,0.598,32,1.338,33,0.988,35,0.988,37,0.16,38,0.317,40,0.703,41,1.45,42,1.141,43,1.128,44,1.176,45,0.875,48,1.353,49,0.988,50,1.45,51,0.457,52,0.031,53,0.541,54,0.338,55,0.457,57,0.965,59,1.245,62,1.007,64,2.535,65,0.641,66,1.052,68,0.888,69,0.812,70,0.766,71,0.414,72,0.334,75,0.641,77,1.052,80,0.911,83,0.763,84,0.826,85,0.297,86,0.457,87,0.703,88,1.353,98,0.705,99,0.988,100,0.988,101,0.705,102,1.141,103,0.705,104,0.988,105,0.598,106,0.705,107,0.598,108,0.705,109,0.598,110,0.988,111,0.598,112,0.414,113,0.988,114,0.705,115,0.598,116,0.705,117,0.598,118,0.705,119,0.598,120,0.598,121,0.705,122,0.598,123,0.705,124,0.598,125,0.705,126,0.705,127,1.049,128,1.279,129,0.705,130,0.705,131,0.705,132,0.019,133,0.019,139,0.705,147,1.252,155,1.86,157,1.34,158,1.252,165,3.027,176,1.34,178,1.353,233,1.86,248,2.213,255,1.583,260,3.469,272,1.463,273,1.714,274,2.025,275,1.583,277,1.923,301,1.828,310,1.463,321,0.965,328,3.114,348,2.267,354,1.583,355,2.381,359,1.714,360,2.334,371,2.433,398,3.469,429,2.343,445,1.578,453,1.463,588,3.325,589,2.433,596,1.734,1099,2.473,1103,1.923,1105,2.473,1107,3.027,1110,3.555,1111,3.555,1112,3.325,1116,2.696,1144,3.027,1171,3.027,1202,4.02,1203,3.496,1216,1.734,1218,1.923,1219,2.158,1222,3.469,1241,2.158,1287,4.343,1300,3.469,1394,3.469,1399,4.869,1400,4.869,1401,2.473,1402,4.141,1403,4.141,1404,4.141,1405,4.141,1406,4.782,1407,5.184,1408,4.141,1409,4.141,1410,2.952,1411,4.141,1412,2.952,1413,4.141,1414,2.952,1415,4.141,1416,4.141,1417,2.952,1418,2.952,1419,2.952,1420,2.952,1421,2.952,1422,2.952,1423,2.952]],["title/injectables/ShoppingCartService.html",[244,1.151,350,1.914]],["body/injectables/ShoppingCartService.html",[3,0.28,4,0.246,8,0.246,12,0.505,15,0.889,17,0.514,26,0.43,37,0.251,38,0.304,40,0.674,42,1.019,45,0.859,47,0.737,49,1.205,51,0.826,52,0.031,53,0.604,54,0.362,55,0.826,57,1.65,59,1.111,62,0.857,63,1.724,64,1.942,65,0.884,68,0.517,69,0.472,70,0.708,71,0.39,72,0.315,85,0.28,86,0.43,87,0.97,132,0.018,133,0.018,137,1.517,143,2.268,147,1.906,149,3.432,152,2.497,157,1.197,158,1.201,176,1.435,202,1.487,206,1.679,225,2.469,234,1.403,244,1.403,246,1.487,248,2.698,255,2.233,256,2.585,265,4.229,266,2.122,270,2.585,271,1.812,272,1.403,273,1.916,274,1.361,275,1.769,276,2.585,279,3.804,293,1.634,294,1.487,296,1.784,297,2.585,299,1.812,300,2.034,301,1.063,310,1.403,333,3.326,350,2.332,355,2.435,358,2.332,359,2.09,360,2.423,361,1.634,364,3.476,367,1.812,374,2.902,395,3.326,417,1.25,423,1.634,429,2.61,444,2.331,445,1.487,447,2.034,448,1.812,453,0.983,469,2.902,484,1.517,485,2.469,503,2.794,511,2.331,542,3.287,596,2.332,621,2.332,1071,2.034,1076,2.902,1216,3.261,1254,4.65,1255,3.326,1308,3.326,1424,4.786,1425,2.331,1426,3.97,1427,4.629,1428,3.97,1429,3.97,1430,3.97,1431,2.782,1432,3.97,1433,3.97,1434,3.97,1435,3.97,1436,5.338,1437,2.782,1438,3.97,1439,2.782,1440,5.048,1441,3.97,1442,2.782,1443,3.97,1444,3.97,1445,2.782,1446,4.629,1447,3.326,1448,3.97,1449,2.782,1450,3.97,1451,2.782,1452,2.782,1453,2.782,1454,2.782,1455,2.782,1456,3.97,1457,2.782,1458,3.97,1459,2.782,1460,2.782,1461,2.782,1462,4.629,1463,3.97,1464,2.782,1465,4.629,1466,2.782,1467,3.97,1468,2.782,1469,2.782,1470,2.782,1471,2.782,1472,3.97,1473,3.97,1474,3.97,1475,2.782,1476,2.782,1477,2.782,1478,2.782,1479,2.782,1480,2.782]],["title/interfaces/User.html",[72,0.369,134,1.349]],["body/interfaces/User.html",[3,0.414,4,0.364,8,0.364,12,0.364,15,0.792,17,0.432,37,0.224,38,0.396,52,0.031,54,0.416,59,1.137,61,3.365,62,1.118,63,1.849,67,2.182,72,0.585,85,0.414,132,0.024,133,0.024,134,1.706,135,2.421,137,2.158,138,3.012,140,2.683,144,2.683,146,2.263,147,1.708,152,2.14,153,1.656,157,1.609,158,1.563,220,2.527,227,2.322,272,1.995,277,3.365,390,3.478,393,3.164,394,3.365,412,3.478,413,3.478,416,3.036,418,3.778,419,3.778,420,3.478,1391,4.33,1481,3.452,1482,4.12,1483,4.96,1484,4.96,1485,5.168,1486,5.168,1487,4.33,1488,5.168,1489,5.168,1490,5.168]],["title/components/UserManagementComponent.html",[0,0.015,28,0.659]],["body/components/UserManagementComponent.html",[0,0.022,1,0.593,2,0.906,3,0.294,4,0.259,5,0.699,6,0.699,7,0.699,8,0.259,11,1.907,12,0.421,13,0.983,17,0.509,20,0.699,21,1.538,22,1.538,23,0.699,24,1.137,25,0.983,26,0.637,27,0.983,28,1.046,29,0.593,30,0.593,31,0.593,32,1.332,33,0.983,34,3.01,35,0.983,36,3.01,37,0.159,38,0.315,40,0.699,41,1.445,42,1.048,43,1.119,44,1.174,45,0.931,47,1.048,48,1.346,49,0.983,50,1.445,51,0.453,52,0.031,53,0.539,54,0.311,55,0.453,56,2.454,57,0.957,63,1.74,65,0.637,66,1.048,68,0.544,69,0.497,70,0.792,71,0.411,72,0.704,73,4.457,75,0.637,77,1.048,80,0.906,83,0.757,84,0.819,85,0.294,86,0.453,87,0.497,97,3.035,98,0.699,99,0.983,100,0.983,101,0.699,102,1.137,103,0.699,104,0.983,105,0.593,106,0.699,107,0.593,108,0.699,109,0.593,110,0.983,111,0.593,112,0.411,113,0.983,114,0.699,115,0.593,116,0.699,117,0.593,118,0.699,119,0.593,120,0.593,121,0.699,122,0.593,123,0.699,124,0.593,125,0.699,126,0.699,127,0.593,128,0.644,129,0.699,130,0.699,131,0.699,132,0.019,133,0.019,141,2.321,143,1.85,153,1.579,163,3.164,167,2.545,168,3.481,172,3.035,173,2.419,176,1.065,178,1.688,183,2.419,184,2.761,193,1.432,194,1.721,195,2.141,196,2.141,197,1.907,198,1.432,199,2.797,201,1.907,202,1.565,204,2.139,205,2.797,206,1.562,216,2.76,217,3.316,219,3.035,220,2.526,221,3.364,222,3.364,233,1.85,271,1.907,393,2.545,412,3.035,413,3.582,416,3.035,417,2.321,420,3.035,508,1.85,542,3.101,598,4.729,749,3.776,1138,1.721,1154,2.141,1166,2.681,1211,3.776,1335,2.454,1337,2.454,1340,2.454,1349,3.45,1350,3.45,1352,2.454,1378,4.328,1379,4.328,1380,4.328,1388,3.45,1491,5.108,1492,4.761,1493,4.761,1494,4.117,1495,2.929,1496,2.929,1497,2.929,1498,2.929,1499,2.929,1500,2.929,1501,2.929,1502,2.929,1503,2.929,1504,2.929,1505,2.929,1506,2.929,1507,2.929,1508,2.929,1509,2.929,1510,2.929,1511,2.929,1512,2.929,1513,2.929,1514,5.165,1515,2.929]],["title/injectables/UserService.html",[244,1.151,349,1.914]],["body/injectables/UserService.html",[3,0.273,4,0.24,8,0.24,12,0.467,15,0.841,17,0.484,19,2.292,26,0.877,37,0.212,38,0.299,40,0.662,45,0.818,47,1.078,49,0.931,51,0.706,52,0.031,53,0.517,54,0.326,55,0.706,59,1.277,61,2.54,62,0.935,63,1.829,65,0.877,66,0.597,67,2.109,68,0.504,69,0.461,70,0.547,71,0.381,72,0.731,85,0.273,86,0.42,87,0.985,132,0.018,133,0.018,137,2.218,139,1.192,141,2.243,143,2.243,144,3.251,146,2.293,153,1.678,157,1.501,158,1.887,165,2.851,206,1.665,214,3.268,216,1.907,234,1.945,244,1.378,246,1.451,248,3.279,255,2.218,256,3.251,258,3.268,259,2.292,266,2.218,270,2.54,272,1.764,273,1.615,274,1.907,275,2.104,276,3.251,279,3.251,285,2.851,291,1.378,293,1.595,294,1.451,296,1.378,297,2.54,299,1.767,300,2.851,301,1.037,310,1.378,349,2.292,370,3.268,390,3.665,393,3.245,394,3.251,412,3.472,413,3.472,416,2.292,417,1.753,418,2.851,419,2.851,420,3.472,437,2.54,441,2.274,453,0.959,542,3.251,616,2.54,621,2.292,622,3.268,1076,1.984,1101,4.612,1373,3.268,1381,3.268,1447,3.268,1483,4.182,1484,4.182,1487,3.268,1516,2.274,1517,3.9,1518,4.566,1519,3.9,1520,4.991,1521,3.9,1522,3.9,1523,3.9,1524,2.714,1525,4.991,1526,3.9,1527,4.991,1528,3.9,1529,4.991,1530,3.9,1531,3.9,1532,3.9,1533,3.9,1534,2.714,1535,3.9,1536,3.9,1537,2.714,1538,3.9,1539,3.9,1540,3.9,1541,3.9,1542,2.714,1543,3.9,1544,3.9,1545,4.566,1546,3.268,1547,3.9,1548,3.9,1549,3.9,1550,4.991,1551,3.9,1552,3.9,1553,2.714,1554,2.714,1555,4.566,1556,2.714,1557,2.714,1558,2.714,1559,2.714,1560,2.714,1561,2.714,1562,2.714,1563,2.714,1564,2.714,1565,2.714,1566,2.714,1567,2.714,1568,2.714,1569,2.714,1570,2.714,1571,2.714,1572,2.714]],["title/coverage.html",[1573,3.713]],["body/coverage.html",[0,0.03,1,0.81,8,0.354,9,3.354,10,3.354,11,3.629,28,0.81,29,0.81,30,0.81,31,0.81,44,0.81,52,0.031,54,0.261,72,0.453,73,2.926,75,0.619,76,2.926,78,2.926,81,2.926,105,0.81,107,0.81,109,0.81,111,0.81,112,0.562,115,0.81,117,0.81,119,0.81,120,0.81,122,0.81,124,0.81,127,0.81,132,0.023,133,0.023,134,2.426,136,3.354,160,3.71,161,2.926,162,3.354,199,2.352,200,2.607,204,1.657,233,2.28,244,2.136,245,2.607,247,3.354,313,3.354,323,3.354,349,2.352,350,2.352,429,1.657,481,3.71,482,3.354,483,3.71,503,1.958,595,3.354,607,3.354,941,5.175,994,3.354,1080,3.354,1113,3.354,1114,3.354,1115,3.71,1145,3.354,1169,3.354,1199,3.629,1200,2.607,1224,3.354,1225,3.354,1285,3.354,1319,3.354,1320,3.354,1321,3.354,1346,2.926,1347,2.926,1389,3.354,1390,3.354,1399,3.354,1400,3.354,1401,3.354,1424,3.354,1425,3.354,1481,3.354,1491,3.354,1516,3.354,1573,3.354,1574,4.003,1575,4.003,1576,4.003,1577,6.77,1578,5.572,1579,6.177,1580,3.354,1581,3.354,1582,3.354,1583,3.354,1584,3.354,1585,6.274,1586,5.859,1587,4.003,1588,5.075,1589,4.003,1590,4.909,1591,5.859,1592,4.003,1593,4.003]],["title/dependencies.html",[1594,1.994,1595,3.28]],["body/dependencies.html",[52,0.031,71,0.701,83,1.292,132,0.027,133,0.027,198,2.443,321,1.633,442,4.186,1595,4.186,1596,4.996,1597,6.61,1598,4.996,1599,5.806,1600,5.806,1601,4.996,1602,4.996,1603,4.996,1604,4.996,1605,4.996,1606,4.996,1607,4.996,1608,4.996]],["title/miscellaneous/enumerations.html",[1609,1.458,1610,3.28]],["body/miscellaneous/enumerations.html",[37,0.275,52,0.03,69,1.097,132,0.027,133,0.027,423,3.441,1609,2.711,1610,4.25,1611,5.072,1612,5.857,1613,5.072,1614,5.857,1615,5.857,1616,5.857,1617,5.857,1618,5.857]],["title/miscellaneous/functions.html",[1609,1.458,1619,3.28]],["body/miscellaneous/functions.html",[12,0.404,15,0.861,17,0.35,37,0.248,47,0.849,51,0.707,52,0.029,53,0.518,54,0.298,55,0.707,59,1.006,65,0.95,67,2.007,132,0.025,133,0.025,154,2.686,157,1.587,193,3.002,197,3.998,199,3.474,200,3.851,219,3.237,222,2.978,227,2.055,255,2.346,266,2.106,291,2.169,358,3.237,394,3.851,417,2.055,616,3.998,1166,2.978,1333,4.616,1346,4.323,1347,4.028,1590,3.831,1609,2.444,1619,3.831,1620,6.139,1621,5.51,1622,4.573,1623,4.573,1624,4.573,1625,4.573,1626,4.573,1627,4.573,1628,4.573,1629,4.573,1630,4.573,1631,4.573,1632,4.573,1633,4.573,1634,5.51,1635,4.573,1636,4.573,1637,4.573,1638,4.573,1639,4.573,1640,4.573,1641,4.573,1642,4.573]],["title/index.html",[37,0.148,1643,2.728,1644,2.728]],["body/index.html",[0,0.027,4,0.407,52,0.025,53,0.522,132,0.025,133,0.025,204,1.907,281,3.86,318,3.86,713,3.86,755,3.86,798,5.356,1546,3.86,1594,3.368,1645,5.535,1646,4.607,1647,5.933,1648,5.933,1649,3.86,1650,4.607,1651,4.607,1652,5.535,1653,6.295,1654,6.464,1655,4.607,1656,4.607,1657,4.607,1658,4.607,1659,4.607,1660,4.607,1661,4.607,1662,4.607,1663,4.607,1664,4.607,1665,4.607,1666,5.933,1667,5.933,1668,4.607,1669,6.154,1670,4.607,1671,4.607,1672,4.607,1673,4.607,1674,5.535,1675,5.535,1676,6.154,1677,4.607,1678,5.535,1679,5.535,1680,4.607,1681,4.607,1682,4.607,1683,4.607,1684,5.535,1685,4.607,1686,4.607,1687,4.607,1688,4.607,1689,5.933,1690,4.607,1691,4.607,1692,4.607,1693,3.368,1694,4.607,1695,4.607]],["title/modules.html",[1696,3.713]],["body/modules.html",[52,0.027,132,0.027,133,0.027,1696,4.421]],["title/overview.html",[1693,3.24]],["body/overview.html",[2,1.151,52,0.027,97,3.074,132,0.027,133,0.027,135,3.074,246,2.796,721,3.824,949,3.824,1693,3.824]],["title/properties.html",[38,0.3,1594,1.994]],["body/properties.html",[38,0.402,52,0.029,132,0.027,133,0.027,1649,4.402,1697,5.254]],["title/miscellaneous/variables.html",[1153,2.862,1609,1.458]],["body/miscellaneous/variables.html",[15,0.672,17,0.434,26,0.877,37,0.26,44,0.97,52,0.031,54,0.37,57,1.567,59,1.055,63,1.341,68,1.052,69,0.962,132,0.026,133,0.026,158,1.45,179,4.016,206,1.714,275,1.832,296,2.002,310,1.694,348,1.832,596,2.816,616,3.122,1124,4.016,1146,4.016,1153,3.504,1374,4.016,1580,4.016,1581,5.055,1582,4.016,1583,4.748,1584,4.748,1609,2.562,1698,4.794,1699,4.794,1700,4.794,1701,4.794,1702,4.794,1703,4.794,1704,4.794,1705,5.667,1706,4.794,1707,4.794,1708,4.794,1709,4.794,1710,4.794]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":301,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["0.0.0",{"_index":1697,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["0665",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0d24",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["100960c55891.jpg?1650599698",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"overview.html":{}}}],["160",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18.0.0",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1650,"title":{},"body":{"index.html":{}}}],["19",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1f9c",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["20",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["23d3",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3213",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3835",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["4/4",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1312,"title":{},"body":{"components/PaymentComponent.html":{}}}],["4138",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4350",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a64",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d25",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d71",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4df2",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7e73",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["8c01",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8cbf",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f2b",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9475",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9798",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["99e9",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9eb7",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a23f",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a70e",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":508,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1489,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["acion",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/PaymentComponent.html":{}}}],["aclcular",{"_index":1267,"title":{},"body":{"components/OrderListComponent.html":{}}}],["activatedroute",{"_index":1122,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["activo",{"_index":1238,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1447,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":542,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["additem",{"_index":1120,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1125,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1435,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":309,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":243,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":240,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":241,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":242,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":312,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1392,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":239,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":245,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1101,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":213,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1139,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":225,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":601,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('dirección",{"_index":212,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1372,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1515,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1244,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1422,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1102,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1138,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1375,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(this.submittext",{"_index":582,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacenar",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":1635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1647,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":198,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["antes",{"_index":1303,"title":{},"body":{"components/PaymentComponent.html":{}}}],["apellido",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1659,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1197,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1670,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["attach",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1660,"title":{},"body":{"index.html":{}}}],["av",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b45f",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["base",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["beast",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfe9",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bolleano",{"_index":1210,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["boolean",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1533,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1669,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1407,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1332,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1259,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1263,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1283,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1203,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1213,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1223,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1284,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcula",{"_index":1413,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calcular",{"_index":1215,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["cambiar",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1333,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1377,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":589,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":1687,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1380,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1107,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1109,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1071,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1111,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1110,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1108,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1475,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1476,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":490,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1467,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":1141,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1069,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1066,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.id",{"_index":1075,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1398,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1143,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1142,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":608,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":503,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1084,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":1221,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":492,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":496,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":502,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":500,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1395,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1254,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1144,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["carros",{"_index":1426,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1403,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":129,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1405,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1404,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1401,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:24",{"_index":1414,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:28",{"_index":1417,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:32",{"_index":1408,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:48",{"_index":1412,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:65",{"_index":1410,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1390,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1425,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:115",{"_index":1442,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1432,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":1439,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:51",{"_index":1445,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:67",{"_index":1437,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1400,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":484,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["cartitem.service",{"_index":1449,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":485,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1129,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":605,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cerrado",{"_index":1190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1198,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1662,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1691,"title":{},"body":{"index.html":{}}}],["checkstock",{"_index":609,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1683,"title":{},"body":{"index.html":{}}}],["choose",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1648,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["code",{"_index":1664,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":586,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1387,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1684,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["completo",{"_index":1132,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1216,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1394,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1376,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":587,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":497,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1226,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1236,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1327,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["const",{"_index":296,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1431,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":202,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1121,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1261,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":1328,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contega",{"_index":1625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":221,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contenido",{"_index":1402,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["contiene",{"_index":1171,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["contrario",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasenas",{"_index":1636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1386,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["contructor",{"_index":505,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["copy",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1240,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":236,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":537,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1218,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1501,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":538,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":1276,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1345,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["core/validators/validators",{"_index":201,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["correlativo",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":159,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":603,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1573,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["creacion",{"_index":164,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["creado",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":235,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":162,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:27",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:38",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:58",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:62",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:66",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:70",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:77",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":161,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":250,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":597,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":610,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createorupdatecarditem(card",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1428,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1438,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1397,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1196,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1112,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1492,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{}}}],["damage",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1514,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["dcon",{"_index":1409,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1211,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1391,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":1396,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1331,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":138,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1231,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["dependencies",{"_index":1595,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1535,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":486,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1239,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":489,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":488,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":483,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":516,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:109",{"_index":518,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:113",{"_index":520,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":522,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:121",{"_index":524,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:125",{"_index":526,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:129",{"_index":528,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:133",{"_index":530,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:137",{"_index":532,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":534,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:145",{"_index":536,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:152",{"_index":507,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1207,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1209,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":509,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1206,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":512,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":504,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1214,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":506,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":482,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1200,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1090,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["dev",{"_index":1656,"title":{},"body":{"index.html":{}}}],["development",{"_index":1651,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direccion",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":215,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1668,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1673,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1490,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1672,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["donde",{"_index":1295,"title":{},"body":{"components/PaymentComponent.html":{}}}],["double",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":1681,"title":{},"body":{"index.html":{}}}],["each",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":598,"title":{},"body":{"interfaces/CardItem.html":{},"components/UserManagementComponent.html":{}}}],["editar",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":291,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1195,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1487,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entrada",{"_index":1208,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["entre",{"_index":1379,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1610,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":584,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":216,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1440,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["espera",{"_index":1298,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esta",{"_index":1104,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1678,"title":{},"body":{"index.html":{}}}],["exile",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1237,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["existentes",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1370,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fabled",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":310,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["field1",{"_index":1640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1663,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["finalizacion",{"_index":1305,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1249,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":1227,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1229,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1228,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1225,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1230,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1232,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1224,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1235,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1323,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1325,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1324,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1321,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1342,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1344,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1334,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1329,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1330,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1336,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1338,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1339,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1341,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1320,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1507,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1505,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1506,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":163,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["four",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{}}}],["fromulario",{"_index":510,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["fucion",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1434,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1619,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1688,"title":{},"body":{"index.html":{}}}],["gain",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1666,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1646,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1429,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1441,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardname",{"_index":515,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":523,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":535,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":531,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":525,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1343,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1340,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1335,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":529,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1337,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":533,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":527,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":517,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getregion",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":519,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":521,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getting",{"_index":1643,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1536,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1690,"title":{},"body":{"index.html":{}}}],["god",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1085,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["habilidad",{"_index":599,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1488,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1250,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1513,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1406,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1465,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["heliod",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1689,"title":{},"body":{"index.html":{}}}],["henge",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1193,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1658,"title":{},"body":{"index.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["human",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1070,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(cardindex",{"_index":1471,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1220,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1474,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1076,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":581,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["if(search",{"_index":1067,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1468,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1307,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(this.authservice.getuser().id",{"_index":1099,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1512,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1418,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1242,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1246,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":540,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":499,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":590,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["imagenes",{"_index":1212,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["implements",{"_index":1686,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":232,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1485,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":1637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":1624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1103,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["inicio",{"_index":1234,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":244,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":246,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1217,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1204,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":134,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":135,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1483,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1291,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1256,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":511,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["items",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{},"components/ShoppingCartComponent.html":{}}}],["jegantha",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["juego",{"_index":600,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":604,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1680,"title":{},"body":{"index.html":{}}}],["khm",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":139,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":227,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":1628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":222,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1117,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1119,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1118,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1115,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1123,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:27",{"_index":1274,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:31",{"_index":1275,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:35",{"_index":1262,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:46",{"_index":1127,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:50",{"_index":1268,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:60",{"_index":1272,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:63",{"_index":1126,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:70",{"_index":1266,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:85",{"_index":1264,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1114,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":234,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":226,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/OrderListComponent.html":{}}}],["lo",{"_index":1381,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1316,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["loguear",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":592,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1081,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1083,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1082,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1080,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:25",{"_index":1087,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:42",{"_index":1091,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:50",{"_index":1093,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:58",{"_index":1088,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:24",{"_index":230,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1496,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1494,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:35",{"_index":231,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts:65",{"_index":1497,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:69",{"_index":1498,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:73",{"_index":1499,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:77",{"_index":1500,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:84",{"_index":1495,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":501,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":249,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{}}}],["manejo",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["many",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":1192,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":299,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":1629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1383,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1448,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1382,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["mensaje",{"_index":513,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["merfolk",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":1630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1384,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1609,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":1639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":248,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":292,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{}}}],["modules",{"_index":1696,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["mostrar",{"_index":1116,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["much",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1170,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1172,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1657,"title":{},"body":{"index.html":{}}}],["need",{"_index":1685,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":289,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":204,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":295,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":307,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":302,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":304,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":305,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":306,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":303,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":297,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1450,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1452,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1454,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1453,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1563,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1654,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1532,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":214,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":156,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":1626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":223,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":224,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1130,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{}}}],["obetener",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["objeto",{"_index":137,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":217,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["obteener",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["ocurrido",{"_index":1245,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":1622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":199,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":1627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":200,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1248,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1253,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1281,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1282,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1257,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1251,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1692,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1693,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1594,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1695,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1287,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parametros",{"_index":1128,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('categoria",{"_index":1134,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":1135,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["pasarela",{"_index":1411,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["passage",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordvalidator",{"_index":1346,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1288,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1290,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1289,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":122,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1393,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1194,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1682,"title":{},"body":{"index.html":{}}}],["play",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1318,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":588,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":498,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":1315,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proceso",{"_index":1286,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1645,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":293,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":220,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":493,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1314,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1443,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1306,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1255,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["redireccionar",{"_index":1089,"title":{},"body":{"components/CardManageComponent.html":{}}}],["redirecciones",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["redirect",{"_index":1292,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/ShoppingCartComponent.html":{}}}],["redirigiendo",{"_index":1317,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigir",{"_index":1304,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1694,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1433,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":1623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":228,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1369,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":125,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1326,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":124,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1322,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["región",{"_index":218,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1661,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":1641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":290,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1486,"title":{},"body":{"interfaces/User.html":{}}}],["respectivos",{"_index":1270,"title":{},"body":{"components/OrderListComponent.html":{}}}],["rest",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":579,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["result.filter(carditem",{"_index":1068,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":514,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{}}}],["results",{"_index":132,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":206,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1484,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":294,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1124,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":487,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{}}}],["routeroutlet",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1653,"title":{},"body":{"index.html":{}}}],["running",{"_index":1674,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1347,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1355,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1665,"title":{},"body":{"index.html":{}}}],["scute",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":1638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["segundos",{"_index":1299,"title":{},"body":{"components/PaymentComponent.html":{}}}],["seleccionada",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["seleccionado",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["seleccionar",{"_index":1094,"title":{},"body":{"components/CardManageComponent.html":{}}}],["selecionada",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selecionado",{"_index":1201,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["selected",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1463,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1472,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1258,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1462,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1478,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1470,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1469,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1477,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1473,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1260,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1271,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1655,"title":{},"body":{"index.html":{}}}],["server",{"_index":1652,"title":{},"body":{"index.html":{}}}],["service",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["sesión",{"_index":1191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":585,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":494,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setea",{"_index":1273,"title":{},"body":{"components/OrderListComponent.html":{}}}],["setear",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":495,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1086,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1092,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1309,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1480,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":429,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1460,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":1308,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1461,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":127,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1436,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1427,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":350,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1205,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":606,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":1631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulacion",{"_index":1302,"title":{},"body":{"components/PaymentComponent.html":{}}}],["simular",{"_index":1300,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sistema",{"_index":1482,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":596,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":219,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":1620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":160,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":481,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1113,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":136,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":595,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1389,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1481,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":247,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":288,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:107",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:124",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:134",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:143",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:156",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:167",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:178",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:186",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:194",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:202",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:210",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":607,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1424,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1534,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:53",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:83",{"_index":1537,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:94",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1590,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1169,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1199,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1285,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1293,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1294,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:59",{"_index":1301,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1319,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1399,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1491,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1644,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1671,"title":{},"body":{"index.html":{}}}],["strike",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["submittext",{"_index":491,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subtotal",{"_index":1222,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1140,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sumar",{"_index":1265,"title":{},"body":{"components/OrderListComponent.html":{}}}],["sun",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sus",{"_index":1269,"title":{},"body":{"components/OrderListComponent.html":{}}}],["suscribible",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1385,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tempo",{"_index":1297,"title":{},"body":{"components/PaymentComponent.html":{}}}],["tener",{"_index":1378,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":1621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":1677,"title":{},"body":{"index.html":{}}}],["testing",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1676,"title":{},"body":{"index.html":{}}}],["texto",{"_index":593,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":203,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":210,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":207,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":208,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":209,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":311,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":308,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":298,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":1137,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":211,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1241,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":237,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":539,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1503,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1100,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.registrationform.get('username')?.value,this.registrationform.get('password')?.value",{"_index":1371,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1097,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1247,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":543,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":555,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":578,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":556,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":557,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":558,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1078,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1074,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1073,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1072,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1077,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.createorupdatecarditem(this.selectedcard",{"_index":580,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1464,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":1136,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":1096,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["this.cardlist",{"_index":1095,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.createshoppingcar(userid",{"_index":1466,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1219,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1419,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1243,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1502,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1508,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":1186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":1079,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.gotodetail",{"_index":1098,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1420,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":1185,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1310,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1277,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":1278,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.redirect",{"_index":1311,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1348,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1361,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1359,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1368,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1356,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1365,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1357,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1366,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1360,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1367,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1358,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1364,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1362,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1133,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1106,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1105,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1313,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1423,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":544,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":548,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":554,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":552,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":549,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":551,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":553,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":550,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":545,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":546,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":547,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1280,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1479,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1456,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1455,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1451,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1458,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":1279,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.submittext",{"_index":541,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1421,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1504,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1511,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1509,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1510,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":238,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.userservice.createuser",{"_index":1363,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tine",{"_index":1416,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["tipo",{"_index":591,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["titan",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1202,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trae",{"_index":1131,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["trample",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1459,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1675,"title":{},"body":{"index.html":{}}}],["unless",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1446,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1457,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1493,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1430,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1444,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":602,"title":{},"body":{"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{}}}],["uro",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1667,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":300,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":229,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":349,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uso",{"_index":1374,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{}}}],["vacio",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1233,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["validaciones",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1352,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1354,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1351,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1350,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1349,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1353,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":205,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["valores",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":287,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":233,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1153,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["varieble",{"_index":1415,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vehicle",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1252,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["verifica",{"_index":1296,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":1649,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1679,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":594,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1388,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":583,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1373,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de creacion de direccion de entrega del cliente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Acion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de direccion\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente de formulario de creacion de direccion de entrega del cliente\n */\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  /**\n   * Formulario de direccion\n   */\n  addressForm!: FormGroup;\n\n  /**\n   * Constructor con dependencia a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n   */\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  /**\n   * Acion submit de formulario\n   */\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Titulo de aplicacion\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * @description\n * Componente principal de la aplicacion\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /**\n   * Titulo de aplicacion\n   */\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de usuario\n\n                                                        \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de direcciones\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:178\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:210\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n        this.loggedIn.next(false);\n        return false;\n    }\n\n    this.setUserIdToShoppingCart();\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para editar cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                            \n                        \n\n                \n                    \n                            Contructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de cartas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Iniciacion de Formulario de editar cartas\nIniciacion de valores de carta selecionada\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario para editar cartas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:29\n                        \n                    \n\n            \n                \n                    Fromulario para editar carta del catalogo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                        \n                    \n\n            \n                \n                    Variable para item de carta selecionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n            \n                \n                    Variable para mensaje de resultado de submit\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:113\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:125\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:141\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:145\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardItemService } from '../core/services/cartitem.service';\n\n/**\n * @description\n * Componente para formulario para editar cartas del catalogo\n */\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n  /**\n   * Fromulario para editar carta del catalogo\n   */\n  cardForm!: FormGroup;\n  /**\n   * Variable para mensaje de resultado de submit\n   */\n  submitText: string = '';\n  /**\n   * Variable para item de carta selecionada\n   */\n  selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Contructor con dependencias a la capa service\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de manejo de cartas\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService,\n  ){}\n\n  /**\n   * Iniciacion de Formulario de editar cartas\n   * Iniciacion de valores de carta selecionada\n   */\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  /**\n   * Accion de submit de formulario para editar cartas\n   */\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    const result = this.cardItemService.createOrUpdateCardItem(this.selectedCard);\n    if(result){\n      alert(this.submitText + ' con éxito');\n    }else{\n      alert(this.submitText + ' con error');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de administracion de cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Funcion para redireccionar a pantalla de detalle de carta\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Iniciacion de listado de cartas del catalogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Accion para seleccionar carta en la pantalla\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas del catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente de pantalla de administracion de cartas del catalogo\n */\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n  /**\n   * Listado de cartas del catalogo\n   */\n  cardList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a la capa service\n   * @param authService \n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de cartas del catalogo\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService\n  ){}\n\n  /**\n   * Iniciacion de listado de cartas del catalogo\n   */\n  ngOnInit(): void {\n    this.cardList = this.cardItemService.getCardsList();\n  }\n\n  /**\n   * Accion para seleccionar carta en la pantalla\n   * @param card \n   */\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  /**\n   * Funcion para redireccionar a pantalla de detalle de carta\n   */\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar catalogo de cartas.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de catalogo de cartas\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Accion para agregar una carta seleccionada a al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSe obtiene parametros de url:\n -categoria = tipo de carta\n -search = nombre de carta\nSe obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas a mostrar en el catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente para mostrar catalogo de cartas.\n */\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n  /**\n   * Listado de cartas a mostrar en el catalogo\n   */\n  carditemList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param route Manejo de redirecciones\n   * @param cardItemService Manejo de catalogo de cartas\n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  /**\n   * Iniciacion de componente.\n   * Se obtiene parametros de url:\n   *  -categoria = tipo de carta\n   *  -search = nombre de carta\n   * Se obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  /**\n   * Accion para agregar una carta seleccionada a al carrito de compras\n   * @param cardId Identificador de carta\n   * @param cardName Nombre de carta\n   */\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de ingreso a la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:59\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * @description\n * Componente de formulario de ingreso a la aplicacion\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar detalle de un carrito de compras selecionado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con iniciacion de objeto de carrito de compras\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:23\n                            \n                        \n                \n                    \n                        Valor de entrada del carrito selecionado\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:27\n                            \n                        \n                \n                    \n                        Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion para calcular precio total de la compra\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Precio total del carrito de compras\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Precio total de compra del carro\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n/**\n * @description\n * Componente para mostrar detalle de un carrito de compras selecionado\n */\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  /**\n   * Valor de entrada del carrito selecionado\n   */\n  @Input() currentShoppingCart: ShoppingCart;\n  /**\n   * Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n   */\n  @Input() showImage: boolean = false;\n  /**\n   * Precio total de compra del carro\n   */\n  total: number = 0;\n\n  /**\n   * Constructor con iniciacion de objeto de carrito de compras\n   */\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  /**\n   * Funcion para calcular precio total de la compra\n   * @param cardList Listado de cartas del carrito selecionado\n   * @returns Precio total del carrito de compras\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar los carritos de compra realizados por el usuario logueado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de carrito de compras\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Funcion para sumar el total de cartas de un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas de un carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                total de cartas del carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Funcion para aclcular el total de la compra del carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Valor total de la compra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Accion que setea carrito de compras seleccionado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:35\n                        \n                    \n\n            \n                \n                    Booleano para mostrar card con informacion del carrito de compras seleccionado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:27\n                        \n                    \n\n            \n                \n                    Listado de carritos de compra realizados por el usuario activo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:31\n                        \n                    \n\n            \n                \n                    Carrito de compras seleccionado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n/**\n * @description\n * Componente para listar los carritos de compra realizados por el usuario logueado\n */\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n  /**\n   * Listado de carritos de compra realizados por el usuario activo\n   */\n  orderList: ShoppingCart[] = [];\n  /**\n   * Carrito de compras seleccionado\n   */\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Booleano para mostrar card con informacion del carrito de compras seleccionado\n   */\n  isSelected: boolean = false;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param shoppingCartService Manejo de carrito de compras \n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  /**\n   * Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n   */\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  /**\n   * Accion que setea carrito de compras seleccionado\n   * @param selected Carrito de compras selecionado\n   */\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  /**\n   * Funcion para aclcular el total de la compra del carrito de compras\n   * @param cardList Listado de cartas del carrito de compras\n   * @returns Valor total de la compra\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  /**\n   * Funcion para sumar el total de cartas de un carrito de compras\n   * @param cardList Listado de cartas de un carrito de compras\n   * @returns total de cartas del carrito de compras\n   */\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de Mock de proceso de pago\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:24\n                            \n                        \n\n                \n                    \n                            Contructor de componente con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\nTempo de espera de 4 segundos para simular proceso de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n            \n                \n                    Booleano para indicar si se ha realizado el pago\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente de pantalla de Mock de proceso de pago\n */\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  /**\n   * Booleano para indicar si se ha realizado el pago\n   */\n  isPaymentSuccess: boolean = false;\n\n  /**\n   * Contructor de componente con dependencias a funciones de sesion\n   * @param authService Manejo de informacion de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\n   * Tempo de espera de 4 segundos para simular proceso de pago.\n   */\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  /**\n   * Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n   */\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de usuario\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      const result = this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n      if(result){\n        alert('Se ha registrado con exito');\n        this.authService.login(this.registrationForm.get('username')?.value,this.registrationForm.get('password')?.value);\n        this.router.navigate(['/']);\n      }else{\n        alert('El nombre de usuario ya esta en uso');\n      }\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar contenido de carrito de compras\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor dcon dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para simular pago, redirige a mock pasarela de pago\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras actual del cliente logueado.\nse calcula el precio del total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:24\n                        \n                    \n\n            \n                \n                    Varieble que contiene el carrito de compras actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                        \n                    \n\n            \n                \n                    Booleano que indica si el carrito tine items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:28\n                        \n                    \n\n            \n                \n                    Valor de precio total del carro de compras\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para mostrar contenido de carrito de compras\n */\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n  /**\n   * Varieble que contiene el carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Valor de precio total del carro de compras\n   */\n  total: number = 0;\n  /**\n   * Booleano que indica si el carrito tine items\n   */\n  hasItems: boolean = false;\n\n  /**\n   * Constructor dcon dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras actual del cliente logueado.\n   * se calcula el precio del total del carrito\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  /**\n   * Funcion para simular pago, redirige a mock pasarela de pago\n   */\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(private cardItemService: CardItemService){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con formulario de edicion de usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Iniciacion de informacion de usuario.\nIniciacion de formulario de edicion de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable con informacion de usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de edicion de usuario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente con formulario de edicion de usuario\n */\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n  /**\n   * Formulario de edicion de usuario\n   */\n  updateForm!: FormGroup;\n  /**\n   * Variable con informacion de usuario\n   */\n  currentUser: User = {} as User;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de informacion de usuario.\n   * Iniciacion de formulario de edicion de usuario\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
