var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.015,1,0.659]],["body/components/AccountManagementComponent.html",[0,0.024,1,1.119,2,1.011,3,0.346,4,0.304,5,0.821,6,0.821,7,0.821,8,0.304,9,4.63,10,4.63,11,2.239,12,0.726,13,1.806,14,3.359,15,0.78,16,4.596,17,0.482,18,4.596,19,2.7,20,0.821,21,1.566,22,1.566,23,1.445,24,1.236,25,1.097,26,0.711,27,1.097,28,1.119,29,1.119,30,1.119,31,1.119,32,1.448,33,1.097,34,3.359,35,1.097,36,3.359,37,0.187,38,0.352,39,5.177,40,0.78,41,1.546,42,1.216,43,1.314,44,1.225,45,0.801,46,4.596,47,1.011,48,2.065,49,1.806,50,1.953,51,0.532,52,0.031,53,0.586,54,0.3,55,0.532,56,3.438,57,1.502,58,4.596,59,1.319,60,2.993,61,3.599,62,1.011,63,1.546,64,2.456,65,0.532,66,1.011,67,1.502,68,0.638,69,0.584,70,0.849,71,0.482,72,0.52,73,2.513,74,4.596,75,0.801,76,2.513,77,1.216,78,2.513,79,3.438,80,1.139,81,2.513,82,3.438,83,0.889,84,0.962,85,0.346,86,0.532,87,0.821,88,1.124,89,3.438,90,3.438,91,3.85,92,4.63,93,5.526,94,2.993,95,5.526,96,4.596,97,2.7,98,0.821,99,1.097,100,1.097,101,0.821,102,1.216,103,0.821,104,1.097,105,0.696,106,0.821,107,0.696,108,0.821,109,0.696,110,1.097,111,0.696,112,0.482,113,1.097,114,0.821,115,0.696,116,0.821,117,0.696,118,0.821,119,0.696,120,0.696,121,0.821,122,0.696,123,0.821,124,0.696,125,0.821,126,0.821,127,0.696,128,0.756,129,0.821,130,0.821,131,0.821,132,0.021,133,0.021]],["title/interfaces/Address.html",[75,0.504,134,1.349]],["body/interfaces/Address.html",[3,0.434,4,0.382,8,0.382,12,0.606,15,0.904,17,0.505,37,0.234,38,0.407,52,0.031,53,0.682,54,0.411,57,1.74,62,1.171,67,2.123,72,0.603,75,0.823,85,0.434,132,0.024,133,0.024,134,1.789,135,2.538,136,3.62,137,2.363,138,3.158,139,1.489,140,2.813,141,2.113,142,2.538,143,1.941,144,2.813,145,3.921,146,2.406,147,2.003,148,4.1,149,3.537,150,3.127,151,3.786,152,2.203,153,1.489,154,3.127,155,2.603,156,5.322,157,1.489,158,1.74,159,5.322]],["title/components/AddressCreateComponent.html",[0,0.015,105,0.659]],["body/components/AddressCreateComponent.html",[0,0.022,1,0.619,2,0.934,3,0.307,4,0.27,5,0.73,6,0.73,7,0.73,8,0.27,12,0.683,13,1.387,17,0.504,20,0.73,21,1.546,22,1.546,23,0.73,24,0.73,25,1.013,26,0.656,27,1.013,28,0.619,29,0.619,30,0.619,31,0.619,32,1.363,33,1.013,35,1.013,37,0.166,38,0.325,40,0.72,41,1.472,42,1.072,43,1.168,44,1.188,45,0.925,47,1.158,49,1.387,50,1.86,51,0.473,52,0.031,53,0.664,54,0.277,55,0.473,62,0.934,65,0.656,66,1.072,70,0.776,71,0.429,72,0.346,75,0.925,77,1.072,80,0.934,83,0.79,84,0.855,85,0.307,86,0.473,87,0.73,98,0.73,99,1.013,100,1.013,101,0.73,102,1.158,103,0.73,104,1.013,105,1.065,106,0.73,107,0.619,108,0.73,109,0.619,110,1.013,111,0.619,112,0.429,113,1.013,114,0.73,115,0.619,116,0.73,117,0.619,118,0.73,119,0.619,120,0.619,121,0.73,122,0.619,123,0.73,124,0.619,125,0.73,126,0.73,127,0.619,128,0.673,129,0.73,130,0.73,131,0.73,132,0.019,133,0.019,142,2.492,145,3.427,147,1.592,148,3.427,150,3.092,151,3.362,160,4.441,161,4.441,162,2.561,163,3.896,164,5.263,165,3.554,166,3.554,167,2.604,168,3.562,169,4.242,170,4.242,171,4.872,172,3.092,173,2.492,174,4.242,175,3.554,176,1.499,177,3.057,178,1.906,179,3.554,180,3.554,181,3.057,182,3.554,183,3.101,184,2.813,185,3.057,186,3.057,187,3.057,188,3.057,189,3.057,190,3.057,191,3.057,192,3.057,193,2.704,194,1.796,195,2.235,196,2.235,197,1.991,198,1.495,199,2.862,200,2.763,201,1.991,202,1.634,203,3.057,204,2.289,205,3.092,206,1.592,207,3.057,208,3.057,209,3.057,210,3.057,211,3.057,212,3.057,213,3.057,214,3.554,215,5.012,216,2.926,217,3.515,218,4.409,219,3.362,220,2.798,221,3.726,222,3.427,223,3.427,224,3.554,225,2.075]],["title/components/AddressManagementComponent.html",[0,0.015,29,0.659]],["body/components/AddressManagementComponent.html",[0,0.024,1,0.712,2,1.027,3,0.354,4,0.311,5,0.839,6,0.839,7,0.839,8,0.311,11,2.29,12,0.654,13,1.525,15,0.792,17,0.491,20,0.839,21,1.57,22,1.57,23,0.839,24,1.25,25,1.114,26,0.722,27,1.114,28,0.712,29,1.129,30,0.712,31,0.712,32,1.465,33,1.114,34,3.41,35,1.114,36,3.41,37,0.191,38,0.357,40,0.792,41,1.56,42,1.152,43,1.344,44,1.232,45,0.81,47,1.027,49,1.525,50,1.97,51,0.544,52,0.031,53,0.593,54,0.304,55,0.544,62,1.313,63,1.56,65,0.544,66,1.027,68,0.653,69,0.597,70,0.814,71,0.493,72,0.398,75,1.003,76,4.076,77,1.152,80,1.027,83,0.909,84,0.984,85,0.354,86,0.544,87,0.839,94,3.884,98,0.839,99,1.114,100,1.114,101,0.839,102,1.227,103,0.839,104,1.114,105,1.129,106,0.839,107,0.712,108,0.839,109,0.712,110,1.114,111,0.712,112,0.493,113,1.114,114,0.839,115,0.712,116,0.839,117,0.712,118,0.839,119,0.712,120,0.712,121,0.839,122,0.712,123,0.839,124,0.712,125,0.839,126,0.839,127,0.712,128,0.774,129,0.839,130,0.839,131,0.839,132,0.021,133,0.021,150,2.741,160,4.076,161,2.57,175,3.909,176,1.97,202,1.879,215,3.909,218,3.909,223,3.038,226,3.909,227,2.096,228,4.665,229,5.236,230,4.665,231,3.516,232,3.909,233,2.741,234,1.97,235,3.516,236,3.516,237,3.516,238,3.516,239,2.946,240,4.665,241,4.665,242,4.665,243,4.665]],["title/injectables/AddressService.html",[244,1.151,245,2.122]],["body/injectables/AddressService.html",[3,0.309,4,0.271,8,0.271,12,0.777,15,0.973,17,0.512,37,0.167,38,0.326,40,0.723,45,0.816,47,0.937,49,1.392,51,0.756,52,0.031,53,0.71,54,0.344,55,0.756,59,1.368,60,2.773,62,1.161,63,1.722,65,0.857,66,0.676,67,1.988,68,0.571,69,0.522,70,0.597,71,0.431,72,0.348,75,0.962,85,0.309,86,0.475,87,1.403,94,3.901,132,0.019,133,0.019,137,2.016,139,1.476,141,2.082,142,3.099,143,2.575,144,2.773,145,3.96,146,2.29,147,1.959,148,4.051,149,3.617,150,2.501,151,3.686,152,1.763,153,1.191,154,2.501,157,1.476,158,1.392,206,1.478,216,2.082,227,1.913,234,2.025,239,4.641,244,1.504,245,2.773,246,1.642,247,2.575,248,3.367,249,3.567,250,3.567,251,4.258,252,5.275,253,4.258,254,3.073,255,2.373,256,2.773,257,4.258,258,3.567,259,2.501,260,4.258,261,4.258,262,4.258,263,3.073,264,4.258,265,3.567,266,2.016,267,4.258,268,3.073,269,4.258,270,3.112,271,2.773,272,1.086,273,1.913,274,2.276,275,1.763,276,2.773,277,2.773,278,4.258,279,3.607,280,5.275,281,3.567,282,5.275,283,4.258,284,4.258,285,3.856,286,4.258,287,5.275,288,3.073,289,4.258,290,4.258,291,1.627,292,2.575,293,1.805,294,1.642,295,3.073,296,1.086,297,2.001,298,3.073,299,2.001,300,2.246,301,1.086,302,3.073,303,3.073,304,3.073,305,3.073,306,3.073,307,3.073,308,3.073,309,3.073,310,1.086,311,3.073,312,3.073]],["title/components/AppComponent.html",[0,0.015,107,0.659]],["body/components/AppComponent.html",[0,0.026,1,0.823,2,1.128,3,0.409,4,0.359,5,0.971,6,0.971,7,0.971,8,0.359,12,0.719,13,1.675,14,3.747,17,0.451,19,3.462,20,0.971,21,1.592,22,1.592,23,0.971,24,0.971,25,1.224,26,0.793,27,1.224,28,0.823,29,0.823,30,0.823,31,0.823,33,1.224,35,1.224,37,0.221,38,0.392,45,0.629,52,0.031,53,0.58,54,0.265,67,1.329,68,0.755,69,0.691,70,0.787,71,0.57,72,0.46,75,0.793,77,1.235,80,1.128,85,0.409,86,0.629,98,0.971,99,1.224,100,1.224,101,0.971,102,1.297,103,0.971,104,1.224,105,0.823,106,0.971,107,1.193,108,0.971,109,0.823,110,1.224,111,0.823,112,0.57,113,1.224,114,0.971,115,0.823,116,0.971,117,1.193,118,0.971,119,0.823,120,0.823,121,0.971,122,0.823,123,0.971,124,0.823,125,0.971,126,0.971,127,0.823,128,0.895,129,0.971,130,0.971,131,0.971,132,0.023,133,0.023,139,1.434,294,2.739,313,3.407,314,5.613,315,5.126,316,5.126,317,5.613,318,4.294,319,4.067,320,5.126,321,1.329,322,4.067]],["title/injectables/AuthService.html",[44,0.659,244,1.151]],["body/injectables/AuthService.html",[3,0.178,4,0.156,8,0.156,12,0.734,14,2.062,15,1.097,17,0.509,19,2.356,26,0.274,37,0.096,38,0.216,40,0.479,42,0.882,44,0.571,45,0.941,47,0.621,48,1.268,49,1.661,50,1.896,51,0.757,52,0.031,53,0.593,54,0.341,55,0.757,57,1.754,59,1.331,60,1.837,61,2.611,62,1.227,63,1.767,64,2.868,65,0.96,66,0.964,67,2.037,68,0.813,69,0.744,70,0.769,71,0.248,72,0.593,75,0.544,85,0.178,86,0.274,87,1.4,88,1.964,94,3.308,112,0.753,128,0.39,132,0.013,133,0.013,137,1.078,139,1.729,141,1.961,142,1.658,145,2.611,146,1.533,147,1.623,148,3.038,150,1.658,151,2.985,152,1.168,153,1.421,154,1.658,155,1.38,157,1.305,158,1.875,176,1.97,204,1.931,206,1.657,220,1.38,225,1.961,227,1.802,233,3.153,234,0.997,244,0.997,245,3.308,246,0.947,250,2.364,255,2.58,256,2.611,266,2.051,271,1.837,272,1.729,273,2.283,274,2.143,275,2.375,276,1.837,291,1.533,292,1.484,293,1.041,294,0.947,296,0.626,301,0.997,310,0.626,321,0.579,323,1.484,324,2.821,325,2.821,326,2.364,327,2.364,328,2.29,329,3.516,330,3.516,331,2.946,332,3.516,333,2.364,334,4.01,335,4.01,336,4.01,337,4.01,338,4.01,339,4.01,340,3.36,341,2.364,342,3.36,343,2.821,344,4.01,345,2.821,346,2.821,347,1.484,348,1.87,349,2.985,350,2.985,351,2.821,352,1.658,353,1.658,354,1.38,355,2.312,356,2.821,357,1.771,358,2.356,359,2.427,360,2.051,361,2.356,362,2.821,363,2.821,364,1.837,365,2.364,366,2.364,367,1.837,368,2.821,369,1.771,370,3.36,371,3.736,372,2.821,373,1.771,374,2.931,375,1.771,376,1.771,377,1.771,378,2.821,379,2.821,380,4.01,381,3.36,382,1.771,383,2.821,384,1.771,385,2.364,386,1.771,387,2.611,388,2.143,389,2.821,390,2.356,391,1.771,392,4.01,393,1.508,394,1.837,395,2.364,396,1.771,397,2.821,398,2.821,399,1.837,400,2.821,401,1.771,402,2.821,403,2.946,404,2.821,405,1.771,406,2.821,407,2.821,408,2.821,409,2.821,410,2.821,411,2.821,412,2.573,413,2.573,414,1.771,415,2.364,416,2.356,417,1.268,418,2.931,419,2.931,420,2.066,421,3.909,422,2.821,423,2.356,424,1.771,425,2.821,426,2.611,427,2.57,428,4.379,429,1.456,430,1.771,431,4.665,432,4.01,433,1.771,434,2.821,435,1.771,436,2.821,437,1.837,438,1.771,439,2.821,440,1.771,441,1.484,442,1.484,443,1.771,444,1.484,445,0.947,446,1.484,447,1.295,448,1.153,449,1.484,450,3.516,451,1.771,452,1.771,453,1.648,454,4.01,455,3.516,456,2.821,457,1.771,458,2.821,459,1.771,460,1.771,461,1.771,462,1.771,463,1.771,464,1.771,465,1.771,466,1.041,467,3.516,468,2.821,469,1.295,470,1.771,471,1.771,472,1.771,473,1.771,474,1.771,475,2.821,476,1.771,477,1.771,478,1.771,479,1.771,480,2.364]],["title/components/CardDetailComponent.html",[0,0.015,109,0.659]],["body/components/CardDetailComponent.html",[0,0.019,1,0.486,2,0.785,3,0.242,4,0.212,5,0.573,6,0.573,7,0.573,8,0.212,17,0.501,20,0.573,21,1.498,22,1.498,23,0.573,24,0.573,25,0.852,26,0.552,27,0.852,28,0.486,29,0.486,30,0.486,31,0.486,32,1.191,33,0.852,35,0.852,37,0.13,38,0.273,40,0.606,41,1.318,42,0.785,43,0.918,44,1.067,45,0.965,47,0.785,51,0.372,52,0.031,53,0.482,54,0.307,55,0.372,65,0.552,66,1.037,67,1.166,68,0.663,69,0.606,70,0.787,71,0.337,72,0.272,75,0.552,77,0.937,80,1.234,83,0.621,84,0.672,85,0.242,86,0.372,88,1.391,98,0.573,99,0.852,100,0.852,101,0.573,102,1.037,103,0.573,104,0.852,105,0.486,106,0.573,107,0.486,108,0.573,109,0.953,110,0.852,111,0.486,112,0.74,113,0.852,114,0.573,115,0.486,116,0.573,117,0.486,118,0.573,119,0.486,120,0.486,121,0.573,122,0.486,123,0.573,124,0.486,125,0.573,126,0.573,127,0.486,128,0.529,129,0.573,130,0.573,131,0.573,132,0.016,133,0.016,153,1.569,155,2.304,167,2.275,172,2.767,173,2.096,184,2.518,193,2.929,194,1.411,198,1.175,200,3.067,201,1.564,204,2.479,205,3.476,206,1.789,216,3.122,217,3.75,219,3.098,220,2.579,221,3.434,223,3.067,224,4.418,225,1.175,296,0.849,321,0.785,331,3.566,348,2.087,359,2.643,453,0.849,480,2.013,481,4.586,482,5.256,483,1.756,484,2.608,485,2.772,486,2.989,487,2.989,488,4.256,489,5.033,490,3.067,491,3.443,492,3.443,493,3.443,494,3.443,495,3.443,496,3.067,497,3.443,498,3.443,499,3.443,500,3.443,501,2.67,502,3.568,503,2.402,504,2.402,505,2.013,506,2.402,507,2.402,508,2.402,509,2.402,510,2.402,511,2.402,512,2.402,513,2.402,514,2.402,515,2.402,516,2.402,517,2.402,518,2.402,519,2.402,520,2.402,521,2.402,522,2.402,523,2.402,524,2.402,525,2.402,526,2.402,527,2.402,528,2.402,529,1.411,530,1.756,531,2.402,532,2.402,533,3.568,534,1.564,535,2.402,536,3.568,537,3.568,538,3.568,539,3.568,540,3.568,541,3.568,542,3.568,543,3.568,544,3.568,545,3.568,546,3.568,547,2.402,548,2.402,549,2.402,550,2.402,551,2.402,552,2.402,553,2.402,554,2.402,555,2.402,556,2.402,557,2.402,558,4.256,559,2.013,560,2.402,561,2.402,562,2.402,563,2.402,564,2.402,565,2.402,566,2.402,567,2.402,568,2.402,569,2.402,570,2.402,571,1.564,572,2.402,573,1.756,574,3.568,575,2.402,576,1.756,577,4.1,578,3.946,579,3.946,580,2.767,581,2.767,582,3.946,583,3.067,584,3.443,585,4.71,586,3.568]],["title/interfaces/CardItem.html",[112,0.457,134,1.349]],["body/interfaces/CardItem.html",[3,0.357,4,0.314,8,0.314,12,0.498,15,0.894,17,0.517,37,0.193,38,0.36,52,0.031,54,0.421,57,1.535,59,0.848,62,0.782,67,2.179,85,0.357,112,0.659,132,0.021,133,0.021,134,1.47,135,2.087,137,2.011,138,2.596,139,1.873,140,2.313,146,2.286,147,1.971,152,1.944,153,1.566,154,2.759,157,1.314,291,1.795,359,2.76,417,1.596,421,3.935,426,3.058,490,3.646,491,4.093,492,4.093,493,4.093,494,4.093,495,4.093,496,3.646,497,4.093,498,4.093,499,4.093,500,4.093,580,2.759,582,3.935,583,3.058,587,2.976,588,1.47,589,3.421,590,2.087,591,4.691,592,5.982,593,4.696,594,5.598,595,4.696,596,3.935,597,4.696,598,4.696,599,4.696,600,4.696]],["title/injectables/CardItemService.html",[244,1.151,501,1.593]],["body/injectables/CardItemService.html",[3,0.093,4,0.194,8,0.082,12,0.424,15,0.838,17,0.46,26,0.253,37,0.089,38,0.125,40,0.278,45,0.516,49,0.535,51,0.41,52,0.031,53,0.3,54,0.235,55,0.41,57,0.535,59,0.391,62,0.583,65,0.624,67,1.091,68,0.172,69,0.373,70,0.23,71,0.13,77,0.583,80,1.212,85,0.093,86,0.144,87,0.633,88,0.718,97,3.663,102,0.204,112,0.692,132,0.007,133,0.007,137,1.275,146,2.31,147,1.159,152,1.097,153,0.741,157,0.458,158,0.866,166,4.488,206,1.273,225,0.801,234,1.354,244,0.579,246,0.496,248,1.557,255,1.743,259,0.962,272,0.936,273,0.736,274,0.875,275,1.097,279,2.496,285,3.466,293,0.546,294,0.496,296,0.579,297,1.067,299,0.605,301,2.153,310,0.328,359,2.111,361,0.962,364,1.969,367,1.725,374,2.439,385,1.372,437,1.067,449,0.778,453,0.328,490,3.911,491,4.39,492,4.39,493,4.39,494,4.39,495,4.39,496,3.911,497,4.39,498,4.39,499,4.39,500,4.39,501,0.801,571,1.969,577,1.937,583,1.725,584,3.829,588,2.044,589,2.786,591,5.032,601,0.778,602,1.841,603,1.638,604,1.638,605,1.638,606,1.638,607,2.649,608,1.638,609,0.929,610,1.067,611,1.638,612,0.929,613,1.638,614,0.929,615,2.252,616,1.372,617,1.638,618,2.634,619,0.929,620,1.638,621,1.638,622,2.22,623,2.22,624,1.638,625,1.372,626,1.197,627,0.929,628,2.649,629,1.638,630,1.638,631,4.741,632,4.741,633,4.741,634,1.638,635,6.006,636,1.638,637,5.46,638,3.336,639,5.63,640,3.833,641,1.638,642,5.356,643,4.741,644,6.312,645,1.638,646,1.638,647,3.336,648,3.833,649,2.649,650,1.638,651,3.833,652,1.638,653,1.638,654,1.638,655,5.356,656,4.504,657,3.336,658,3.833,659,1.638,660,1.638,661,1.638,662,1.638,663,1.638,664,3.336,665,1.638,666,1.638,667,1.638,668,3.833,669,3.833,670,3.833,671,3.833,672,1.638,673,3.212,674,3.336,675,1.638,676,5.237,677,5.46,678,3.833,679,1.638,680,1.638,681,4.209,682,3.833,683,2.649,684,3.336,685,5.356,686,4.741,687,3.336,688,3.336,689,1.638,690,4.209,691,2.649,692,4.504,693,1.638,694,1.638,695,1.638,696,1.638,697,1.638,698,1.638,699,2.649,700,2.649,701,1.638,702,3.336,703,4.936,704,2.649,705,2.649,706,1.638,707,1.638,708,3.527,709,2.649,710,1.638,711,1.638,712,1.638,713,1.638,714,1.638,715,1.638,716,3.293,717,2.649,718,1.638,719,3.833,720,1.638,721,4.209,722,1.638,723,3.833,724,3.336,725,3.833,726,4.741,727,2.649,728,1.638,729,1.638,730,1.638,731,1.638,732,3.336,733,1.638,734,1.638,735,1.638,736,1.638,737,1.638,738,1.638,739,1.638,740,1.638,741,1.638,742,1.638,743,1.638,744,1.197,745,2.649,746,4.741,747,1.638,748,3.833,749,1.638,750,3.527,751,1.638,752,1.638,753,1.638,754,2.649,755,2.649,756,1.638,757,1.638,758,1.638,759,1.638,760,1.638,761,2.649,762,2.649,763,1.638,764,1.638,765,1.638,766,1.638,767,1.638,768,4.741,769,3.336,770,1.638,771,1.638,772,1.638,773,1.638,774,1.638,775,2.649,776,1.638,777,1.638,778,2.649,779,3.833,780,3.833,781,3.336,782,1.638,783,1.638,784,2.649,785,1.638,786,1.638,787,1.638,788,1.638,789,1.638,790,2.649,791,1.638,792,3.336,793,2.22,794,2.649,795,1.638,796,1.638,797,1.638,798,1.638,799,1.638,800,2.795,801,2.649,802,2.649,803,1.638,804,3.833,805,1.638,806,1.638,807,2.649,808,3.833,809,3.336,810,1.638,811,2.649,812,2.649,813,2.649,814,1.638,815,1.638,816,1.638,817,1.638,818,1.638,819,1.638,820,1.638,821,1.638,822,1.638,823,2.649,824,1.638,825,1.638,826,2.649,827,1.638,828,2.649,829,1.638,830,1.638,831,1.638,832,1.638,833,1.638,834,1.638,835,1.638,836,1.638,837,1.638,838,2.649,839,4.504,840,1.638,841,2.649,842,1.638,843,1.638,844,3.336,845,1.638,846,1.638,847,4.209,848,1.638,849,1.638,850,3.336,851,1.638,852,1.638,853,4.741,854,1.638,855,1.638,856,1.638,857,1.638,858,1.638,859,1.638,860,1.638,861,1.638,862,2.649,863,2.649,864,2.649,865,1.638,866,1.638,867,4.741,868,1.638,869,3.336,870,1.638,871,1.638,872,2.649,873,1.638,874,1.638,875,1.638,876,3.833,877,2.649,878,3.336,879,3.336,880,3.336,881,3.336,882,1.638,883,3.336,884,1.638,885,2.649,886,4.504,887,3.833,888,1.638,889,1.638,890,1.638,891,1.638,892,1.638,893,1.638,894,1.638,895,1.638,896,1.638,897,1.638,898,1.638,899,1.638,900,1.638,901,1.638,902,3.336,903,1.638,904,1.638,905,2.649,906,1.638,907,1.638,908,1.638,909,1.638,910,1.638,911,1.638,912,1.638,913,2.649,914,1.638,915,1.638,916,1.638,917,1.638,918,2.649,919,1.638,920,1.638,921,1.638,922,1.638,923,1.638,924,1.638,925,1.638,926,1.638,927,1.638,928,2.649,929,2.649,930,1.638,931,1.638,932,1.638,933,1.638,934,2.649,935,1.638,936,1.372,937,2.649,938,3.336,939,1.638,940,1.638,941,1.638,942,1.638,943,1.638,944,1.197,945,2.649,946,3.336,947,3.833,948,3.833,949,1.638,950,1.638,951,1.638,952,1.638,953,2.649,954,1.638,955,1.638,956,1.638,957,1.638,958,1.638,959,1.638,960,4.209,961,1.638,962,3.833,963,2.649,964,2.649,965,1.638,966,1.638,967,1.638,968,1.638,969,1.638,970,1.638,971,2.649,972,1.638,973,1.638,974,1.638,975,3.336,976,1.638,977,1.638,978,1.638,979,1.638,980,1.638,981,1.638,982,1.638,983,1.638,984,1.638,985,1.638,986,3.336,987,3.336,988,1.638,989,1.372,990,1.638,991,1.638,992,1.638,993,1.638,994,1.638,995,1.638,996,1.638,997,1.638,998,1.638,999,1.638,1000,1.638,1001,1.638,1002,1.638,1003,1.638,1004,1.638,1005,1.638,1006,1.638,1007,3.833,1008,1.638,1009,2.649,1010,2.649,1011,1.638,1012,1.638,1013,1.638,1014,1.638,1015,1.638,1016,1.638,1017,1.638,1018,1.638,1019,1.638,1020,1.638,1021,2.649,1022,1.638,1023,1.638,1024,1.638,1025,1.638,1026,1.638,1027,1.638,1028,1.638,1029,1.638,1030,1.638,1031,1.638,1032,1.638,1033,1.638,1034,1.638,1035,1.638,1036,1.638,1037,1.638,1038,1.638,1039,1.638,1040,1.638,1041,1.638,1042,1.638,1043,1.638,1044,1.638,1045,1.638,1046,1.638,1047,1.638,1048,1.638,1049,1.638,1050,1.638,1051,1.638,1052,1.638,1053,1.638,1054,1.638,1055,1.638,1056,1.638,1057,0.929,1058,1.372,1059,1.638,1060,0.929,1061,0.929,1062,0.778,1063,0.929,1064,0.929,1065,0.929,1066,2.21,1067,0.929,1068,0.929,1069,0.929,1070,0.929,1071,0.679,1072,0.929,1073,0.929,1074,0.929]],["title/components/CardManageComponent.html",[0,0.015,31,0.659]],["body/components/CardManageComponent.html",[0,0.024,1,0.705,2,1.021,3,0.35,4,0.308,5,0.832,6,0.832,7,0.832,8,0.308,17,0.425,20,0.832,21,1.568,22,1.568,23,0.832,24,0.832,25,1.107,26,0.717,27,1.107,28,0.705,29,0.705,30,0.705,31,1.125,32,1.458,33,1.107,35,1.107,37,0.189,38,0.355,40,0.788,41,1.555,42,1.021,43,1.332,44,1.204,45,0.895,51,0.717,52,0.031,53,0.629,54,0.34,55,0.717,65,0.806,66,1.223,68,0.647,69,0.592,70,0.835,71,0.489,72,0.395,75,0.717,77,1.147,80,1.374,81,4.349,83,0.901,84,0.975,85,0.35,86,0.539,88,1.704,98,0.832,99,1.107,100,1.107,101,0.832,102,1.223,103,0.832,104,1.107,105,0.705,106,0.832,107,0.705,108,0.832,109,0.705,110,1.107,111,0.705,112,0.852,113,1.107,114,0.832,115,0.705,116,0.832,117,0.705,118,0.832,119,0.705,120,0.705,121,0.832,122,0.705,123,0.832,124,0.705,125,0.832,126,0.832,127,0.705,128,0.767,129,0.832,130,0.832,131,0.832,132,0.021,133,0.021,146,1.773,153,1.297,220,1.704,225,2.268,234,1.639,255,1.443,321,1.139,348,2.321,359,1.92,415,3.886,453,1.231,481,4.349,484,2.548,501,2.97,529,2.048,530,2.548,577,3.39,578,3.886,579,3.886,580,2.725,581,2.725,588,1.92,1066,3.39,1075,2.92,1076,4.638,1077,4.638,1078,4.638,1079,3.394,1080,5.557,1081,4.638,1082,4.638,1083,3.485,1084,3.485,1085,4.638,1086,3.485,1087,3.485,1088,2.92,1089,3.485,1090,3.485,1091,2.92,1092,3.485,1093,2.92,1094,2.92,1095,2.27,1096,2.92,1097,2.92,1098,3.485,1099,3.39,1100,4.638,1101,4.638,1102,3.02,1103,3.02,1104,2.725]],["title/components/CarditemListComponent.html",[0,0.015,111,0.659]],["body/components/CarditemListComponent.html",[0,0.022,1,0.589,2,0.902,3,0.293,4,0.257,5,0.695,6,0.695,7,0.695,8,0.257,12,0.723,13,1.684,15,0.922,17,0.506,20,0.695,21,1.537,22,1.537,23,0.695,24,0.695,25,0.979,26,0.634,27,0.979,28,0.589,29,0.589,30,0.589,31,0.589,32,1.328,33,0.979,35,0.979,37,0.158,38,0.314,40,0.696,41,1.441,42,1.134,44,1.196,45,0.797,47,0.902,48,1.842,50,1.449,51,0.634,52,0.031,53,0.583,54,0.31,55,0.634,57,1.775,59,1.23,60,3.355,65,0.634,66,1.044,67,1.551,68,0.541,69,0.494,70,0.79,71,0.408,72,0.33,75,0.634,77,1.044,80,0.902,83,0.753,84,0.814,85,0.293,86,0.45,87,1.296,88,1.551,98,0.695,99,0.979,100,0.979,101,0.695,102,1.134,103,0.695,104,0.979,105,0.589,106,0.695,107,0.589,108,0.695,109,0.589,110,0.979,111,1.043,112,0.854,113,0.979,114,0.695,115,0.589,116,0.695,117,0.589,118,0.695,119,0.589,120,0.589,121,0.695,122,0.589,123,0.695,124,0.589,125,0.695,126,0.695,127,0.589,128,0.641,129,0.695,130,0.695,131,0.695,132,0.019,133,0.019,147,1.435,152,1.697,153,1.441,158,1.841,176,1.991,178,1.842,225,2.519,234,1.82,259,2.409,291,1.567,296,1.677,321,0.951,352,2.409,353,2.409,354,2.005,355,1.814,358,2.409,359,2.573,360,1.567,361,1.71,364,2.67,367,1.896,381,3.435,388,1.556,490,3.669,501,2.89,529,1.71,530,2.128,571,1.896,573,2.128,583,2.67,588,2.332,589,3.472,596,3.435,602,3.976,618,3.766,626,2.997,1058,3.435,1088,2.439,1094,2.439,1104,2.409,1105,4.55,1106,4.55,1107,2.128,1108,4.118,1109,3.435,1110,3.435,1111,3.435,1112,4.1,1113,2.911,1114,5.152,1115,4.1,1116,3.976,1117,4.1,1118,2.911,1119,2.409,1120,2.911,1121,4.1,1122,5.152,1123,3.435,1124,4.1,1125,4.1,1126,2.911,1127,2.911,1128,2.911,1129,2.911,1130,2.911,1131,1.71,1132,2.911,1133,2.911,1134,4.1,1135,4.1,1136,4.1,1137,3.435]],["title/components/LoginComponent.html",[0,0.015,115,0.659]],["body/components/LoginComponent.html",[0,0.023,1,0.639,2,0.955,3,0.317,4,0.279,5,0.754,6,0.754,7,0.754,8,0.279,12,0.695,13,1.418,15,0.737,17,0.51,19,2.549,20,0.754,21,1.551,22,1.551,23,0.754,24,0.754,25,1.036,26,0.671,27,1.036,28,0.639,29,0.639,30,0.639,31,0.639,32,1.387,33,1.036,35,1.036,37,0.171,38,0.332,40,0.737,41,1.493,42,1.091,43,1.207,44,1.17,45,0.894,47,0.955,48,1.949,49,1.744,50,1.886,51,0.489,52,0.031,53,0.561,54,0.283,55,0.489,59,1.274,62,1.174,63,1.617,65,0.671,66,1.174,70,0.785,71,0.443,72,0.358,75,0.671,77,1.091,80,0.955,83,0.817,84,0.883,85,0.317,86,0.489,87,1.036,98,0.754,99,1.036,100,1.036,101,0.754,102,1.174,103,0.754,104,1.036,105,0.639,106,0.754,107,0.639,108,0.754,109,0.639,110,1.036,111,0.639,112,0.443,113,1.036,114,0.754,115,1.08,116,0.754,117,0.639,118,0.754,119,0.639,120,0.639,121,0.754,122,0.639,123,0.754,124,0.639,125,0.754,126,0.754,127,0.639,128,0.695,129,0.754,130,0.754,131,0.754,132,0.02,133,0.02,139,1.214,153,1.617,155,2.61,163,4.104,167,2.649,172,3.135,173,2.549,176,1.533,178,1.949,183,3.172,184,2.852,193,2.424,194,1.855,198,1.544,202,1.688,204,2.052,205,2.549,206,1.312,216,2.122,217,3.135,321,1.032,341,4.842,348,2.305,354,2.122,366,4.471,371,2.057,388,1.688,390,3.395,393,3.089,466,1.855,485,3.228,1095,2.825,1119,2.549,1123,2.646,1131,1.855,1138,2.646,1139,3.635,1140,4.339,1141,4.339,1142,4.956,1143,4.339,1144,3.158,1145,3.158,1146,3.172,1147,2.309,1148,3.158,1149,2.646,1150,3.158,1151,3.158,1152,3.158,1153,3.158,1154,3.158,1155,3.158,1156,3.158,1157,4.96,1158,3.158,1159,3.475,1160,5.336,1161,3.172]],["title/components/NavbarComponent.html",[0,0.015,117,0.659]],["body/components/NavbarComponent.html",[0,0.022,1,0.596,2,0.91,3,0.296,4,0.26,5,0.703,6,0.703,7,0.703,8,0.26,12,0.67,13,1.693,15,1.085,17,0.502,20,0.703,21,1.539,22,1.539,23,0.703,24,0.703,25,0.987,26,0.639,27,0.987,28,0.596,29,0.596,30,0.596,31,0.596,32,1.336,33,0.987,35,0.987,37,0.16,38,0.316,40,0.702,41,1.449,42,1.051,44,1.2,45,0.875,47,0.91,48,1.857,49,1.351,50,1.46,51,0.456,52,0.031,53,0.541,54,0.311,55,0.456,59,1.415,63,1.658,64,2.209,65,0.739,66,1.139,68,0.547,69,0.5,70,0.765,71,0.413,72,0.333,75,0.639,77,1.051,80,0.91,83,0.761,84,0.824,85,0.296,86,0.456,87,0.987,88,0.963,91,3.463,98,0.703,99,0.987,100,0.987,101,0.703,102,1.139,103,0.703,104,0.987,105,0.596,106,0.703,107,0.596,108,0.703,109,0.596,110,0.987,111,0.596,112,0.413,113,0.987,114,0.703,115,0.596,116,0.703,117,1.048,118,0.703,119,0.596,120,0.596,121,0.703,122,0.596,123,0.703,124,0.596,125,0.703,126,0.703,127,0.596,128,0.648,129,0.703,130,0.703,131,0.703,132,0.019,133,0.019,139,1.449,143,1.857,153,1.156,157,1.449,158,1.351,163,3.372,167,2.552,176,1.998,178,2.327,184,2.768,193,2.021,198,1.44,202,1.574,204,1.711,233,2.428,249,3.463,259,2.428,272,1.46,273,1.857,274,2.209,275,2.144,277,2.692,291,1.58,296,1.041,310,1.46,321,0.963,326,3.463,327,3.463,340,4.001,342,4.338,347,2.467,348,2.22,352,2.428,353,2.428,354,2.021,355,1.58,360,1.58,361,2.428,371,3.372,387,2.692,388,1.574,427,2.153,437,2.692,485,3.11,584,3.785,588,1.711,589,2.428,615,2.428,618,3.021,622,3.463,623,3.463,625,4.966,626,3.785,1062,2.467,1095,2.692,1119,3.322,1131,1.73,1161,3.021,1162,2.467,1163,5.178,1164,3.463,1165,4.133,1166,4.133,1167,4.776,1168,5.178,1169,4.133,1170,2.945,1171,5.178,1172,4.133,1173,2.945,1174,4.133,1175,2.945,1176,2.945,1177,2.945,1178,2.945,1179,2.945,1180,2.945,1181,2.945,1182,2.945,1183,2.945,1184,4.776,1185,5.178,1186,4.133,1187,4.133,1188,4.133,1189,4.133,1190,4.133,1191,4.133]],["title/components/OrderDetailComponent.html",[0,0.015,119,0.659]],["body/components/OrderDetailComponent.html",[0,0.022,1,0.625,2,0.94,3,0.311,4,0.273,5,0.737,6,0.737,7,0.737,8,0.273,12,0.687,13,1.397,15,0.975,17,0.504,20,0.737,21,1.547,22,1.547,23,0.737,24,0.737,25,1.02,26,0.661,27,1.02,28,0.625,29,0.625,30,0.625,31,0.625,32,1.371,33,1.02,35,1.02,37,0.168,38,0.327,40,0.726,42,1.221,45,0.859,47,0.94,51,0.478,52,0.031,53,0.555,54,0.345,55,0.478,62,1.356,65,0.661,68,0.794,69,0.726,70,0.742,71,0.433,72,0.35,75,0.661,77,1.34,80,0.94,83,0.799,85,0.311,86,0.478,87,0.737,98,0.737,99,1.02,100,1.02,101,0.737,102,1.163,103,0.737,104,1.02,105,0.625,106,0.737,107,0.625,108,0.737,109,0.625,110,1.02,111,0.625,112,0.778,113,1.02,114,0.737,115,0.625,116,0.737,117,0.625,118,0.737,119,1.07,120,0.625,121,0.737,122,0.625,123,0.737,124,0.625,125,0.737,126,0.737,127,0.625,128,0.68,129,0.737,130,0.737,131,0.737,132,0.02,133,0.02,137,1.633,139,1.195,147,1.599,155,2.09,158,1.397,178,1.92,206,0.934,227,2.375,234,1.51,255,1.769,266,1.633,272,1.51,275,1.769,301,1.731,310,1.51,328,3.19,355,2.4,359,1.769,360,2.194,387,2.783,429,2.189,445,1.651,453,1.091,483,2.258,484,3.124,486,3.58,487,3.58,505,2.588,529,1.815,580,3.524,581,2.511,588,2.189,1079,2.783,1099,3.124,1102,3.614,1103,3.614,1104,3.372,1108,3.864,1137,3.58,1192,3.738,1193,3.738,1194,3.58,1195,4.809,1196,4.054,1197,4.057,1198,4.273,1199,4.899,1200,4.273,1201,5.286,1202,3.089,1203,4.273,1204,3.124,1205,4.273,1206,3.58,1207,3.089,1208,4.273,1209,3.106,1210,4.899,1211,2.012,1212,2.258,1213,2.588,1214,2.588,1215,3.58,1216,4.273]],["title/components/OrderFinishComponent.html",[0,0.015,120,0.659]],["body/components/OrderFinishComponent.html",[0,0.023,1,0.664,2,0.98,3,0.33,4,0.29,5,0.783,6,0.783,7,0.783,8,0.29,12,0.625,13,1.456,15,0.756,17,0.509,20,0.783,21,1.558,22,1.558,23,0.783,24,0.783,25,1.063,26,0.689,27,1.063,28,0.664,29,0.664,30,0.664,31,0.664,33,1.063,35,1.063,37,0.178,38,0.341,40,0.756,41,1.517,42,1.193,43,1.254,44,1.21,45,0.782,47,0.98,49,1.456,50,1.916,51,0.508,52,0.031,53,0.572,54,0.29,55,0.508,57,1.456,62,0.98,64,2.38,65,0.508,66,0.722,68,0.609,69,0.557,70,0.82,71,0.46,72,0.372,75,0.689,77,1.372,80,0.98,84,0.918,85,0.33,86,0.508,87,1.063,88,1.456,92,3.731,98,0.783,99,1.063,100,1.063,101,0.783,102,1.193,103,0.783,104,1.063,105,0.664,106,0.783,107,0.664,108,0.783,109,0.664,110,1.063,111,0.664,112,0.46,113,1.063,114,0.783,115,0.664,116,0.783,117,0.664,118,0.783,119,1.098,120,1.098,121,0.783,122,0.664,123,0.783,124,0.664,125,0.783,126,0.783,127,0.664,128,0.722,129,0.783,130,0.783,131,0.783,132,0.02,133,0.02,157,1.246,176,2.066,178,2.001,233,3.186,266,1.932,301,1.159,321,1.073,328,3.292,348,2.326,354,2.178,355,2.235,360,2.235,399,2.9,423,1.928,429,2.42,445,1.754,448,2.137,453,1.159,466,1.928,469,2.399,485,3.292,576,2.399,1192,3.531,1193,2.137,1209,3.186,1211,2.137,1212,2.399,1217,4.543,1218,2.749,1219,4.454,1220,4.454,1221,4.454,1222,4.454,1223,4.454,1224,4.454,1225,3.281,1226,4.454,1227,4.454,1228,4.454,1229,3.731,1230,3.731,1231,3.256,1232,2.749,1233,3.281,1234,2.399,1235,3.281,1236,3.281,1237,2.749,1238,2.749,1239,3.281,1240,3.281,1241,3.731,1242,4.454,1243,4.454,1244,4.454,1245,3.731,1246,4.454]],["title/components/OrderListComponent.html",[0,0.015,30,0.659]],["body/components/OrderListComponent.html",[0,0.02,1,0.51,2,0.813,3,0.253,4,0.223,5,0.602,6,0.602,7,0.602,8,0.223,12,0.753,13,1.208,15,0.966,17,0.513,20,0.602,21,1.508,22,1.508,23,0.602,24,0.602,25,0.882,26,0.677,27,0.882,28,0.51,29,0.51,30,0.976,31,0.51,32,1.225,33,0.882,35,0.882,37,0.137,38,0.283,40,0.628,41,1.349,42,1.061,44,1.151,45,0.88,47,1.061,48,1.661,50,1.306,51,0.746,52,0.031,53,0.608,54,0.362,55,0.746,59,1.358,62,1.251,63,1.501,64,1.976,65,0.83,66,0.963,68,0.813,69,0.743,70,0.778,71,0.354,72,0.285,75,0.572,77,1.298,78,4.241,80,1.061,83,0.652,84,0.705,85,0.253,86,0.39,87,1.226,88,1.208,98,0.602,99,0.882,100,0.882,101,0.602,102,1.061,103,0.602,104,0.882,105,0.51,106,0.602,107,0.51,108,0.602,109,0.51,110,0.882,111,0.51,112,0.798,113,0.882,114,0.602,115,0.51,116,0.602,117,0.51,118,0.602,119,0.976,120,0.51,121,0.602,122,0.51,123,0.602,124,0.51,125,0.602,126,0.602,127,0.51,128,0.555,129,0.602,130,0.602,131,0.602,132,0.017,133,0.017,139,1.349,141,1.808,143,1.661,146,1.413,147,1.458,149,1.481,155,1.808,157,1.034,176,1.704,178,1.661,206,1.118,226,3.097,234,1.896,255,1.996,266,1.843,272,1.306,273,1.661,296,0.891,301,1.306,310,1.547,350,3.257,352,2.172,353,2.172,355,2.436,360,2.436,365,4.495,371,2.407,403,3.667,417,1.661,426,2.407,429,2.442,445,1.347,446,2.112,453,1.306,529,1.481,559,2.112,581,2.172,588,2.442,615,2.833,1079,3.14,1102,2.407,1103,1.641,1104,2.172,1107,1.842,1108,2.702,1109,3.097,1110,3.097,1111,3.097,1119,2.172,1192,3.778,1193,1.641,1194,3.097,1195,3.097,1196,3.841,1197,3.753,1206,3.097,1209,3.465,1211,1.641,1213,3.097,1214,3.097,1231,2.702,1232,2.112,1241,3.097,1245,3.097,1247,4.495,1248,4.495,1249,4.377,1250,4.377,1251,4.377,1252,5.134,1253,3.696,1254,2.52,1255,3.696,1256,3.696,1257,2.52,1258,3.696,1259,2.52,1260,3.696,1261,2.52,1262,3.696,1263,3.696,1264,3.696,1265,2.52,1266,3.696,1267,2.52,1268,2.52,1269,2.52,1270,3.696,1271,2.52,1272,2.52,1273,2.52,1274,3.696,1275,3.696,1276,3.696,1277,3.696]],["title/components/PaymentComponent.html",[0,0.015,122,0.659]],["body/components/PaymentComponent.html",[0,0.023,1,0.633,2,0.948,3,0.314,4,0.276,5,0.747,6,0.747,7,0.747,8,0.276,12,0.692,13,1.883,15,0.902,17,0.515,20,0.747,21,1.55,22,1.55,23,0.747,24,0.747,25,1.029,26,0.763,27,1.029,28,0.633,29,0.633,30,0.633,31,0.633,32,1.38,33,1.029,35,1.029,37,0.17,38,0.33,40,0.732,41,1.487,42,0.948,43,1.195,44,1.195,45,0.822,47,0.948,48,1.936,49,1.409,50,2.036,51,0.484,52,0.031,53,0.558,54,0.281,55,0.484,57,1.409,59,1.029,65,0.667,66,0.948,68,0.581,69,0.531,70,0.745,71,0.439,72,0.354,75,0.667,77,1.085,80,0.948,83,0.809,84,0.875,85,0.314,86,0.484,87,1.029,88,1.409,98,0.747,99,1.029,100,1.029,101,0.747,102,1.169,103,0.747,104,1.029,105,0.633,106,0.747,107,0.633,108,0.747,109,0.633,110,1.029,111,0.633,112,0.439,113,1.029,114,0.747,115,0.633,116,0.747,117,0.633,118,0.747,119,0.633,120,0.633,121,0.747,122,1.076,123,0.747,124,0.633,125,0.747,126,0.747,127,0.633,128,0.688,129,0.747,130,0.747,131,0.747,132,0.02,133,0.02,139,1.206,141,2.108,157,1.206,158,1.737,176,1.878,178,1.936,182,3.611,248,2.532,266,1.885,272,1.523,273,1.936,275,1.784,291,1.647,301,1.105,310,1.523,321,1.022,348,2.299,354,2.108,355,2.031,360,1.647,387,2.807,388,2.303,399,3.461,453,1.105,466,1.837,576,2.286,716,3.885,1230,3.611,1231,3.15,1234,2.286,1237,2.62,1238,2.62,1278,2.62,1279,5.314,1280,6.292,1281,4.31,1282,4.31,1283,4.31,1284,4.931,1285,5.314,1286,4.31,1287,4.31,1288,3.127,1289,4.31,1290,4.31,1291,4.31,1292,5.314,1293,5.314,1294,4.31,1295,3.127,1296,4.31,1297,4.31,1298,4.31,1299,4.31,1300,5.314,1301,3.127,1302,2.62,1303,4.31,1304,3.127,1305,3.127,1306,4.31,1307,3.127,1308,3.127,1309,4.31,1310,5.314,1311,4.31,1312,4.31]],["title/components/RegistrationFormComponent.html",[0,0.015,124,0.659]],["body/components/RegistrationFormComponent.html",[0,0.02,1,0.496,2,0.796,3,0.246,4,0.216,5,0.585,6,0.585,7,0.585,8,0.216,12,0.604,13,1.183,17,0.499,20,0.585,21,1.502,22,1.502,23,0.585,24,0.585,25,0.864,26,0.56,27,0.864,28,0.496,29,0.496,30,0.496,31,0.496,32,1.204,33,0.864,35,0.864,37,0.133,38,0.277,40,0.615,41,1.33,42,1.046,44,1.142,45,0.906,47,1.116,48,1.626,50,1.279,51,0.379,52,0.031,53,0.487,54,0.236,55,0.379,62,0.539,63,1.537,65,0.56,66,1.046,70,0.771,71,0.343,72,0.277,75,0.56,77,0.947,80,0.796,83,0.633,84,0.685,85,0.246,86,0.379,87,1.028,88,1.407,97,3.12,98,0.585,99,0.864,100,0.864,101,0.585,102,1.046,103,0.585,104,0.864,105,0.496,106,0.585,107,0.496,108,0.585,109,0.496,110,0.864,111,0.496,112,0.343,113,0.864,114,0.585,115,0.496,116,0.585,117,0.496,118,0.585,119,0.496,120,0.496,121,0.585,122,0.496,123,0.585,124,0.962,125,1.312,126,0.585,127,0.496,128,0.539,129,0.585,130,0.585,131,0.585,132,0.017,133,0.017,139,1.33,141,1.77,143,1.1,153,1.611,163,3.75,167,2.301,168,3.147,172,2.793,173,2.126,176,1.876,180,3.032,183,2.645,184,2.541,193,2.687,194,2.126,195,1.79,196,1.79,197,1.595,198,1.198,199,2.793,201,1.595,204,2.274,205,3.12,206,1.606,216,2.865,217,3.533,219,3.12,220,2.597,221,3.815,222,3.458,223,3.096,227,1.626,232,3.032,266,2.156,291,0.936,296,0.865,321,0.8,348,2.156,349,3.228,352,2.126,353,2.126,354,1.77,358,3.313,388,1.309,390,2.793,393,2.541,399,2.357,412,2.793,413,3.442,416,2.793,417,2.754,420,2.793,466,1.439,571,1.595,573,1.79,673,3.032,744,3.476,800,3.984,944,3.476,1096,2.052,1119,2.126,1131,1.439,1147,1.79,1149,2.052,1157,5.038,1159,2.357,1161,2.645,1204,4.48,1229,3.984,1313,4.978,1314,4.978,1315,2.052,1316,5.31,1317,3.619,1318,3.619,1319,3.619,1320,4.304,1321,4.755,1322,2.449,1323,3.619,1324,2.449,1325,3.619,1326,3.619,1327,3.032,1328,2.449,1329,2.052,1330,2.449,1331,2.052,1332,2.449,1333,2.449,1334,2.052,1335,2.449,1336,2.449,1337,2.449,1338,2.449,1339,2.449,1340,3.147,1341,1.79,1342,2.449,1343,3.606,1344,3.032,1345,2.449,1346,2.052,1347,3.619,1348,3.619,1349,2.449,1350,2.449,1351,2.449,1352,2.449,1353,2.449,1354,2.449,1355,2.449,1356,2.449,1357,2.449,1358,2.449,1359,2.449,1360,2.449,1361,2.449,1362,2.449,1363,2.449,1364,2.449,1365,2.449,1366,2.449,1367,2.052,1368,2.052,1369,2.449,1370,2.449,1371,2.449,1372,4.908,1373,4.908,1374,4.908,1375,3.984,1376,4.755,1377,4.755,1378,4.755,1379,4.755,1380,3.619,1381,3.619,1382,3.032]],["title/interfaces/ShoppingCart.html",[134,1.349,429,1.349]],["body/interfaces/ShoppingCart.html",[3,0.411,4,0.361,8,0.361,12,0.722,17,0.502,37,0.222,38,0.394,52,0.031,54,0.405,59,1.228,62,1.426,63,1.439,70,0.722,85,0.411,112,0.828,132,0.023,133,0.023,134,1.693,135,2.403,137,2.257,139,1.439,140,3.35,142,3.022,146,2.257,147,1.981,149,3.469,151,3.022,152,2.13,155,2.516,157,1.738,227,2.311,234,1.818,291,1.966,355,2.374,360,2.437,423,3.649,426,3.35,427,4.317,429,2.13,447,2.99,448,2.664,496,3.845,588,2.13,590,3.022,1079,3.845,1164,4.31,1196,3.35,1383,3.427,1384,3.427,1385,4.31,1386,5.905,1387,5.144,1388,4.31,1389,5.144,1390,5.144,1391,5.144,1392,4.09]],["title/components/ShoppingCartComponent.html",[0,0.015,127,0.659]],["body/components/ShoppingCartComponent.html",[0,0.023,1,0.687,2,1.003,3,0.341,4,0.3,5,0.81,6,0.81,7,0.81,8,0.3,15,0.576,17,0.349,20,0.81,21,1.564,22,1.564,23,0.81,24,0.81,25,1.088,26,0.796,27,1.088,28,0.687,29,0.687,30,0.687,31,0.687,32,1.439,33,1.088,35,1.088,37,0.184,38,0.349,40,0.774,41,1.538,42,1.003,43,1.298,44,1.195,45,0.914,51,0.525,52,0.031,53,0.582,54,0.359,55,0.525,57,1.11,65,0.705,66,1.132,68,0.955,69,0.874,70,0.804,71,0.476,72,0.384,75,0.705,77,1.132,80,1.003,83,0.878,84,0.95,85,0.341,86,0.525,88,1.49,98,0.81,99,1.088,100,1.088,101,0.81,102,1.21,103,0.81,104,1.088,105,0.687,106,0.81,107,0.687,108,0.81,109,0.687,110,1.088,111,0.687,112,0.476,113,1.088,114,0.81,115,0.687,116,0.81,117,0.687,118,0.81,119,0.687,120,0.687,121,0.81,122,0.687,123,0.81,124,0.687,125,0.81,126,0.81,127,1.113,128,1.327,129,0.81,130,0.81,131,0.81,132,0.021,133,0.021,139,0.95,147,1.378,272,1.61,277,2.211,301,1.818,310,1.61,321,1.11,328,3.35,348,2.306,355,1.742,359,1.887,360,1.742,429,2.445,445,1.814,453,1.61,580,2.677,581,2.677,590,1.994,1091,2.844,1095,2.211,1097,2.844,1099,3.331,1102,3.735,1103,3.735,1104,3.469,1196,3.928,1197,3.76,1209,1.994,1211,2.211,1212,2.482,1215,3.818,1234,2.482,1388,3.818,1393,5.054,1394,5.054,1395,2.844,1396,4.557,1397,4.557,1398,4.557,1399,5.144,1400,5.498,1401,4.557,1402,3.395,1403,3.395,1404,3.395,1405,3.395,1406,3.395,1407,3.395,1408,3.395,1409,3.395,1410,3.395,1411,3.395]],["title/injectables/ShoppingCartService.html",[244,1.151,350,1.914]],["body/injectables/ShoppingCartService.html",[3,0.275,4,0.241,8,0.241,12,0.797,15,1.074,17,0.513,26,0.423,37,0.249,38,0.3,40,0.666,42,1.009,45,0.854,47,0.863,49,1.637,51,0.82,52,0.031,53,0.6,54,0.36,55,0.82,57,1.637,59,1.195,62,1.102,63,1.719,64,2.095,65,0.879,68,0.508,69,0.464,70,0.702,71,0.383,72,0.309,85,0.275,86,0.423,87,1.357,132,0.018,133,0.018,137,1.498,143,2.25,147,1.901,149,3.416,152,2.487,157,1.282,158,1.281,176,1.95,202,1.461,206,1.669,225,2.449,234,1.385,244,1.385,246,1.461,248,2.942,255,2.407,256,2.553,265,4.195,266,2.109,270,2.866,271,1.78,272,1.385,273,2.059,274,1.461,275,1.898,276,2.553,279,3.786,293,1.606,294,1.461,296,1.769,297,2.553,299,1.78,300,1.998,301,0.966,310,1.385,333,3.284,350,2.303,355,2.429,358,2.303,359,2.073,360,2.417,361,1.606,364,3.452,367,1.78,374,2.866,395,3.284,417,1.228,423,1.606,429,2.602,444,2.29,445,1.461,447,1.998,448,1.78,453,0.966,469,2.866,501,2.779,534,3.261,588,1.623,589,2.942,590,2.303,615,2.303,1066,1.998,1071,2.866,1209,3.242,1247,4.623,1248,3.284,1302,3.284,1412,4.761,1413,2.29,1414,3.92,1415,4.584,1416,3.92,1417,3.92,1418,3.92,1419,2.733,1420,3.92,1421,3.92,1422,3.92,1423,3.92,1424,5.302,1425,2.733,1426,3.92,1427,2.733,1428,5.007,1429,3.92,1430,2.733,1431,3.92,1432,3.92,1433,2.733,1434,4.584,1435,3.284,1436,3.92,1437,2.733,1438,3.92,1439,2.733,1440,2.733,1441,2.733,1442,2.733,1443,2.733,1444,3.92,1445,2.733,1446,3.92,1447,2.733,1448,2.733,1449,2.733,1450,2.733,1451,4.584,1452,3.92,1453,2.733,1454,4.584,1455,2.733,1456,3.92,1457,2.733,1458,2.733,1459,2.733,1460,2.733,1461,3.92,1462,3.92,1463,3.92,1464,2.733,1465,2.733,1466,2.733,1467,2.733,1468,2.733,1469,2.733]],["title/interfaces/User.html",[72,0.369,134,1.349]],["body/interfaces/User.html",[3,0.411,4,0.361,8,0.361,12,0.573,15,0.955,17,0.431,37,0.222,38,0.394,52,0.031,54,0.416,59,1.227,61,3.348,62,1.447,63,1.847,67,2.181,72,0.582,85,0.411,132,0.023,133,0.023,134,1.691,135,2.4,137,2.15,138,2.987,140,2.661,144,2.661,146,2.256,147,1.701,152,2.128,153,1.651,157,1.737,158,1.68,220,2.514,227,2.31,272,1.987,277,3.348,390,3.468,393,3.155,394,3.348,412,3.468,413,3.468,416,3.02,418,3.758,419,3.758,420,3.468,1385,4.307,1470,3.423,1471,4.085,1472,4.945,1473,4.945,1474,5.14,1475,5.14,1476,4.307,1477,5.14,1478,5.14,1479,5.14]],["title/components/UserManagementComponent.html",[0,0.015,28,0.659]],["body/components/UserManagementComponent.html",[0,0.023,1,0.642,2,0.957,3,0.319,4,0.28,5,0.757,6,0.757,7,0.757,8,0.28,11,2.064,17,0.409,20,0.757,21,1.552,22,1.552,23,0.757,24,1.186,25,1.038,26,0.673,27,1.038,28,1.082,29,0.642,30,0.642,31,0.642,32,1.389,33,1.038,34,3.179,35,1.038,36,3.179,37,0.172,38,0.333,40,0.739,41,1.495,42,0.697,43,1.211,44,1.171,45,0.947,51,0.49,52,0.031,53,0.562,54,0.324,55,0.49,57,1.036,63,1.217,65,0.673,66,1.093,68,0.589,69,0.538,70,0.812,71,0.445,72,0.714,73,4.528,75,0.673,77,1.093,80,0.957,83,0.82,84,0.887,85,0.319,86,0.49,97,3.14,98,0.757,99,1.038,100,1.038,101,0.757,102,1.176,103,0.757,104,1.038,105,0.642,106,0.757,107,0.642,108,0.757,109,0.642,110,1.038,111,0.642,112,0.445,113,1.038,114,0.757,115,0.642,116,0.757,117,0.642,118,0.757,119,0.642,120,0.642,121,0.757,122,0.642,123,0.757,124,0.642,125,0.757,126,0.757,127,0.642,128,0.697,129,0.757,130,0.757,131,0.757,132,0.02,133,0.02,143,1.954,153,1.619,167,2.654,168,3.63,172,3.14,173,2.555,184,2.856,193,1.55,194,1.862,195,2.317,196,2.317,197,2.064,198,1.55,199,2.917,201,2.064,202,1.694,204,2.213,205,2.917,206,1.616,216,2.829,217,3.399,219,3.14,220,2.614,221,3.48,222,3.48,271,2.064,393,2.654,412,3.14,413,3.639,416,3.14,417,2.401,420,3.14,534,3.234,744,3.907,1131,1.862,1147,2.317,1159,2.832,1204,3.907,1329,2.655,1331,2.655,1334,2.655,1343,3.644,1344,3.644,1346,2.655,1372,4.478,1373,4.478,1374,4.478,1382,3.644,1480,5.19,1481,4.966,1482,4.966,1483,4.349,1484,3.169,1485,3.169,1486,3.169,1487,3.169,1488,3.169,1489,3.169,1490,3.169,1491,3.169,1492,3.169,1493,3.169,1494,3.169,1495,3.169,1496,3.169,1497,3.169,1498,3.169,1499,3.169,1500,3.169,1501,3.169,1502,3.169,1503,3.169,1504,5.344,1505,3.169]],["title/injectables/UserService.html",[244,1.151,349,1.914]],["body/injectables/UserService.html",[3,0.268,4,0.235,8,0.235,12,0.736,15,1.014,17,0.482,19,2.262,26,0.873,37,0.209,38,0.295,40,0.654,45,0.812,47,1.271,49,1.258,51,0.699,52,0.031,53,0.512,54,0.323,55,0.699,59,1.379,61,2.507,62,1.204,63,1.826,65,0.873,66,0.586,67,2.105,68,0.495,69,0.453,70,0.54,71,0.374,72,0.729,85,0.268,86,0.412,87,1.379,132,0.018,133,0.018,137,2.207,139,1.385,141,2.421,143,2.224,144,3.223,146,2.283,153,1.671,157,1.615,158,2.033,165,3.225,206,1.655,214,3.225,216,1.883,234,1.933,244,1.36,246,1.424,248,3.592,255,2.391,256,3.223,258,3.225,259,2.262,266,2.207,270,2.814,272,1.749,273,1.73,274,2.057,275,2.265,276,3.223,279,3.223,285,2.814,291,1.471,293,1.566,294,1.424,296,1.36,297,2.507,299,1.735,300,2.814,301,0.942,310,1.36,349,2.262,370,3.225,390,3.654,393,3.233,394,3.223,412,3.457,413,3.457,416,2.262,417,1.73,418,2.814,419,2.814,420,3.457,437,2.507,441,2.233,453,0.942,534,3.223,610,2.507,615,2.262,616,3.225,1071,1.948,1093,4.583,1367,3.225,1375,3.225,1435,3.225,1472,4.147,1473,4.147,1476,3.225,1506,2.233,1507,3.85,1508,4.519,1509,3.85,1510,4.95,1511,3.85,1512,3.85,1513,3.85,1514,2.665,1515,4.95,1516,3.85,1517,4.95,1518,3.85,1519,4.95,1520,3.85,1521,3.85,1522,3.85,1523,3.85,1524,2.665,1525,3.85,1526,3.85,1527,2.665,1528,3.85,1529,3.85,1530,3.85,1531,3.85,1532,2.665,1533,3.85,1534,3.85,1535,4.519,1536,3.225,1537,3.85,1538,3.85,1539,3.85,1540,4.95,1541,3.85,1542,3.85,1543,2.665,1544,2.665,1545,4.519,1546,2.665,1547,2.665,1548,2.665,1549,2.665,1550,2.665,1551,2.665,1552,2.665,1553,2.665,1554,2.665,1555,2.665,1556,2.665,1557,2.665,1558,2.665,1559,2.665,1560,2.665,1561,2.665,1562,2.665]],["title/coverage.html",[1563,3.713]],["body/coverage.html",[0,0.03,1,0.803,8,0.35,9,3.323,10,3.323,11,3.613,28,0.803,29,0.803,30,0.803,31,0.803,44,0.803,52,0.031,54,0.259,72,0.449,73,2.899,75,0.614,76,2.899,78,2.899,81,2.899,105,0.803,107,0.803,109,0.803,111,0.803,112,0.556,115,0.803,117,0.803,119,0.803,120,0.803,122,0.803,124,0.803,127,0.803,132,0.023,133,0.023,134,2.417,136,3.323,160,3.688,161,2.899,162,3.323,199,2.33,200,2.583,204,1.642,233,2.964,244,2.13,245,2.583,247,3.323,301,2.063,313,3.323,323,3.323,349,2.33,350,2.33,429,1.642,481,3.688,482,3.323,483,3.688,501,1.94,587,3.323,601,3.323,936,5.163,989,3.323,1075,3.323,1105,3.323,1106,3.323,1107,3.688,1138,3.323,1162,3.323,1192,3.613,1193,2.583,1217,3.323,1218,3.323,1278,3.323,1313,3.323,1314,3.323,1315,3.323,1340,2.899,1341,2.899,1383,3.323,1384,3.323,1393,3.323,1394,3.323,1395,3.323,1412,3.323,1413,3.323,1470,3.323,1480,3.323,1506,3.323,1563,3.323,1564,3.966,1565,3.966,1566,3.966,1567,6.743,1568,5.548,1569,6.162,1570,3.323,1571,3.323,1572,3.323,1573,3.323,1574,3.323,1575,5.045,1576,5.045,1577,6.029,1578,3.966,1579,5.045,1580,3.966,1581,5.045,1582,4.892,1583,5.839,1584,3.966,1585,3.966]],["title/dependencies.html",[1586,1.994,1587,3.28]],["body/dependencies.html",[52,0.031,71,0.699,83,1.289,132,0.026,133,0.026,198,2.438,321,1.629,442,4.176,1587,4.176,1588,4.985,1589,6.607,1590,4.985,1591,5.798,1592,5.798,1593,4.985,1594,4.985,1595,4.985,1596,4.985,1597,4.985,1598,4.985,1599,4.985,1600,4.985]],["title/miscellaneous/enumerations.html",[1601,1.458,1602,3.28]],["body/miscellaneous/enumerations.html",[37,0.275,52,0.03,69,1.096,132,0.027,133,0.027,423,3.438,1601,2.706,1602,4.242,1603,5.063,1604,5.851,1605,5.063,1606,5.851,1607,5.851,1608,5.851,1609,5.851,1610,5.851]],["title/miscellaneous/functions.html",[1601,1.458,1611,3.28]],["body/miscellaneous/functions.html",[12,0.638,15,1.041,17,0.348,37,0.247,47,1.001,51,0.704,52,0.029,53,0.515,54,0.297,55,0.704,59,1.086,65,0.948,67,2.003,132,0.025,133,0.025,154,2.672,157,1.714,193,2.997,197,3.99,199,3.466,200,3.842,219,3.227,222,2.962,227,2.044,255,2.537,266,2.099,291,2.342,358,3.227,394,3.842,417,2.044,610,3.99,1159,2.962,1327,4.601,1340,4.313,1341,4.015,1582,3.811,1601,2.431,1611,3.811,1612,6.128,1613,5.492,1614,4.548,1615,4.548,1616,4.548,1617,4.548,1618,4.548,1619,4.548,1620,4.548,1621,4.548,1622,4.548,1623,4.548,1624,4.548,1625,4.548,1626,5.492,1627,4.548,1628,4.548,1629,4.548,1630,4.548,1631,4.548,1632,4.548,1633,4.548,1634,4.548]],["title/index.html",[37,0.148,1635,2.728,1636,2.728]],["body/index.html",[0,0.027,4,0.405,52,0.025,53,0.519,132,0.025,133,0.025,204,1.898,281,3.84,318,3.84,708,3.84,750,3.84,793,5.35,1536,3.84,1586,3.351,1637,5.518,1638,4.584,1639,5.92,1640,5.92,1641,3.84,1642,4.584,1643,4.584,1644,5.518,1645,6.286,1646,6.458,1647,4.584,1648,4.584,1649,4.584,1650,4.584,1651,4.584,1652,4.584,1653,4.584,1654,4.584,1655,4.584,1656,4.584,1657,4.584,1658,5.92,1659,5.92,1660,4.584,1661,6.144,1662,4.584,1663,4.584,1664,4.584,1665,4.584,1666,5.518,1667,5.518,1668,6.144,1669,4.584,1670,5.518,1671,5.518,1672,4.584,1673,4.584,1674,4.584,1675,4.584,1676,5.518,1677,4.584,1678,4.584,1679,4.584,1680,4.584,1681,5.92,1682,4.584,1683,4.584,1684,4.584,1685,3.351,1686,4.584,1687,4.584]],["title/modules.html",[1688,3.713]],["body/modules.html",[52,0.027,132,0.027,133,0.027,1688,4.419]],["title/overview.html",[1685,3.24]],["body/overview.html",[2,1.15,52,0.027,97,3.072,132,0.027,133,0.027,135,3.072,246,2.794,716,3.822,944,3.822,1685,3.822]],["title/properties.html",[38,0.3,1586,1.994]],["body/properties.html",[38,0.402,52,0.029,132,0.027,133,0.027,1641,4.4,1689,5.251]],["title/miscellaneous/variables.html",[1146,2.862,1601,1.458]],["body/miscellaneous/variables.html",[15,0.811,17,0.433,26,0.875,37,0.259,44,0.967,52,0.031,54,0.369,57,1.561,59,1.14,63,1.336,68,1.05,69,0.96,132,0.026,133,0.026,158,1.561,179,4.001,206,1.71,275,1.977,296,1.998,310,1.688,348,1.825,590,2.806,610,3.11,1116,4.001,1139,4.001,1146,3.491,1368,4.001,1570,4.001,1571,5.047,1572,4.001,1573,4.738,1574,4.738,1601,2.553,1690,4.776,1691,4.776,1692,4.776,1693,4.776,1694,4.776,1695,4.776,1696,4.776,1697,5.655,1698,4.776,1699,4.776,1700,4.776,1701,4.776,1702,4.776]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":301,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1689,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["0/6",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["0665",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0d24",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["100960c55891.jpg?1650599698",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"overview.html":{}}}],["160",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18.0.0",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1642,"title":{},"body":{"index.html":{}}}],["19",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1f9c",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["20",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["23d3",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3213",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3835",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["4/4",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1306,"title":{},"body":{"components/PaymentComponent.html":{}}}],["4138",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4350",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a64",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d25",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d71",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4df2",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7e73",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["8c01",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8cbf",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f2b",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1579,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9475",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9798",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["99e9",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9eb7",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a23f",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a70e",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1507,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":1119,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["acciones",{"_index":1478,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["acion",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/PaymentComponent.html":{}}}],["aclcular",{"_index":1260,"title":{},"body":{"components/OrderListComponent.html":{}}}],["activatedroute",{"_index":1114,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["activo",{"_index":1231,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1435,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":534,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["additem",{"_index":1112,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1117,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1423,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":309,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":243,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":240,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":241,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":242,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":312,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1386,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":239,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":245,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1093,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":213,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1132,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":225,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":595,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('dirección",{"_index":212,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1366,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1505,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1237,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1410,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1094,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1131,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1369,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(this.submittext",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacenar",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":1627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1639,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":198,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["antes",{"_index":1297,"title":{},"body":{"components/PaymentComponent.html":{}}}],["apellido",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1651,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1662,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["attach",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1652,"title":{},"body":{"index.html":{}}}],["av",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b45f",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["base",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1533,"title":{},"body":{"injectables/UserService.html":{}}}],["beast",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfe9",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bolleano",{"_index":1203,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["boolean",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1523,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1171,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1661,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1400,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1326,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1252,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1256,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1276,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1197,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1206,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1216,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1277,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcular",{"_index":1208,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["cambiar",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1327,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1371,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":581,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":1679,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1374,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1099,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1101,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1066,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1103,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1102,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1100,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1464,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1465,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":488,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1456,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":1134,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.id",{"_index":1070,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1392,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1136,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1135,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":602,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":501,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1079,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":1214,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":490,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":494,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":500,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":498,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1389,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1247,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1137,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{}}}],["carros",{"_index":1414,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1396,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":129,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1398,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1397,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1395,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:18",{"_index":1404,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:19",{"_index":1405,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:20",{"_index":1401,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:27",{"_index":1403,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:41",{"_index":1402,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1384,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1413,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:115",{"_index":1430,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1420,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":1427,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:51",{"_index":1433,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:67",{"_index":1425,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1394,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":588,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["cartitem.service",{"_index":1437,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":589,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1122,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":599,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cerrado",{"_index":1183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1654,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1683,"title":{},"body":{"index.html":{}}}],["checkstock",{"_index":603,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":608,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1675,"title":{},"body":{"index.html":{}}}],["choose",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1640,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["code",{"_index":1656,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":578,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1381,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1676,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["completo",{"_index":1125,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1209,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1388,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1370,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":579,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":495,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1219,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1229,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1321,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["const",{"_index":296,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1419,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":202,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1113,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1254,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":1322,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contega",{"_index":1617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":221,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contiene",{"_index":1164,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["contrario",{"_index":1530,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasenas",{"_index":1628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1380,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["contructor",{"_index":1287,"title":{},"body":{"components/PaymentComponent.html":{}}}],["copy",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1233,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":236,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":529,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1211,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1491,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":530,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":1269,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1339,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["core/validators/validators",{"_index":201,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["correlativo",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":159,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":597,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1563,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["creacion",{"_index":164,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["creado",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":235,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":162,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:27",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:38",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:58",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:62",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:66",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:70",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:77",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":161,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":250,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":591,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":604,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createorupdatecarditem(card",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1416,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1426,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1509,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1513,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1528,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1391,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1104,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1481,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{}}}],["damage",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1504,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1510,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1204,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1520,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1385,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":1390,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1325,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":138,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1224,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["dependencies",{"_index":1587,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1525,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":484,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1232,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":487,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":486,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":483,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:103",{"_index":518,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:107",{"_index":520,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:111",{"_index":522,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:115",{"_index":524,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:119",{"_index":526,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":528,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:127",{"_index":504,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":505,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":506,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":502,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1202,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1200,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":503,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1207,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:83",{"_index":508,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:87",{"_index":510,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:91",{"_index":512,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:95",{"_index":514,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:99",{"_index":516,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":482,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1193,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1194,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["dev",{"_index":1648,"title":{},"body":{"index.html":{}}}],["development",{"_index":1643,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direccion",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":215,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1660,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1665,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1479,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1664,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["donde",{"_index":1289,"title":{},"body":{"components/PaymentComponent.html":{}}}],["double",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":1673,"title":{},"body":{"index.html":{}}}],["each",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":592,"title":{},"body":{"interfaces/CardItem.html":{}}}],["editar",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":291,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1529,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1476,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entrada",{"_index":1201,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["entre",{"_index":1373,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1602,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":216,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1428,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["espera",{"_index":1292,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esta",{"_index":1096,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1670,"title":{},"body":{"index.html":{}}}],["exile",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1230,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["existentes",{"_index":1519,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1364,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fabled",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":310,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{}}}],["field1",{"_index":1632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1655,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1167,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["finalizacion",{"_index":1299,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1242,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":1220,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1222,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1221,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1218,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1223,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1225,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1217,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1536,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1228,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1317,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1319,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1318,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1315,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1336,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1338,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1328,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1323,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1324,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1330,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1332,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1333,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1335,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1314,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1497,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1495,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1496,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":163,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["four",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{}}}],["fucion",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1422,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1611,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1680,"title":{},"body":{"index.html":{}}}],["gain",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1658,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1638,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1417,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1429,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":605,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":606,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardname",{"_index":507,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":515,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":607,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":527,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":523,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":517,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1337,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1334,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1329,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":521,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1331,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":525,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":519,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":509,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getregion",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":511,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":513,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getting",{"_index":1635,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1511,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1526,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1682,"title":{},"body":{"index.html":{}}}],["god",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1080,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["habilidad",{"_index":593,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1477,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1243,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1503,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1399,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1454,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["heliod",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1681,"title":{},"body":{"index.html":{}}}],["henge",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1650,"title":{},"body":{"index.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["human",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(cardindex",{"_index":1460,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1213,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1463,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1071,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["if(search",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1457,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1301,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(this.authservice.getuser().id",{"_index":1091,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1502,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1406,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1235,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1239,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":532,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":497,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":582,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["imagenes",{"_index":1205,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["implements",{"_index":1678,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":232,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1474,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":1629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":1616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1095,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["inicio",{"_index":1227,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":244,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":246,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1210,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1198,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":134,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":135,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1472,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1284,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1249,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":1448,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["items",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{}}}],["jegantha",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{}}}],["juego",{"_index":594,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":598,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1672,"title":{},"body":{"index.html":{}}}],["khm",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":139,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":227,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":1620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":222,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1109,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1111,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1110,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1107,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1115,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:27",{"_index":1267,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:31",{"_index":1268,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:35",{"_index":1255,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:46",{"_index":1120,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:50",{"_index":1261,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:60",{"_index":1265,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:63",{"_index":1118,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:70",{"_index":1259,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:85",{"_index":1257,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1106,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":234,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":226,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/OrderListComponent.html":{}}}],["lo",{"_index":1375,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1310,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{}}}],["loguear",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1542,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1538,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":584,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1076,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1078,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1077,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1075,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:19",{"_index":1082,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:27",{"_index":1084,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:31",{"_index":1086,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:36",{"_index":1083,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:21",{"_index":1486,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:22",{"_index":1483,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:24",{"_index":230,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:26",{"_index":1484,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:35",{"_index":231,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:48",{"_index":1487,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:52",{"_index":1488,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:56",{"_index":1489,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:60",{"_index":1490,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:64",{"_index":1485,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":499,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":249,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{}}}],["manejo",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["many",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":1185,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":299,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":1621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1377,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1436,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1376,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["merfolk",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":1622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1378,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1601,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":1631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":248,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":292,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{}}}],["modules",{"_index":1688,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["mostrar",{"_index":1108,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["much",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1163,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1166,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1165,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1649,"title":{},"body":{"index.html":{}}}],["need",{"_index":1677,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":289,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":204,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":295,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":307,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":302,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":304,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":305,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":306,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":303,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":297,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1438,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1440,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1442,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1441,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1646,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1522,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":214,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":156,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":1618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":223,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":224,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1123,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{}}}],["obetener",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["objeto",{"_index":137,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":217,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["obteener",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["ocurrido",{"_index":1238,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":1614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":199,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":1619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":200,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1168,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1241,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1246,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1274,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1275,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1250,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1244,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1684,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1685,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1586,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1687,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1280,"title":{},"body":{"components/PaymentComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parametros",{"_index":1121,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('categoria",{"_index":1127,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":1128,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["passage",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordvalidator",{"_index":1340,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1281,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1283,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1282,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":122,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1387,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1534,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1674,"title":{},"body":{"index.html":{}}}],["play",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1312,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":580,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":496,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":1309,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proceso",{"_index":1279,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1637,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":293,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1540,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":220,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":491,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1541,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1308,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1431,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1300,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1248,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["redirecciones",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["redirect",{"_index":1285,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirigiendo",{"_index":1311,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigir",{"_index":1298,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1686,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1421,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":1615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":228,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1363,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":125,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1320,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":124,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1316,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["región",{"_index":218,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1653,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":1633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1518,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1521,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":290,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1475,"title":{},"body":{"interfaces/User.html":{}}}],["respectivos",{"_index":1263,"title":{},"body":{"components/OrderListComponent.html":{}}}],["rest",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["result.filter(carditem",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["results",{"_index":132,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":206,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1473,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":294,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1116,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":485,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{}}}],["routeroutlet",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1645,"title":{},"body":{"index.html":{}}}],["running",{"_index":1666,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1172,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1341,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1349,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1657,"title":{},"body":{"index.html":{}}}],["scute",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":1630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1537,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["segundos",{"_index":1293,"title":{},"body":{"components/PaymentComponent.html":{}}}],["seleccionada",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["seleccionado",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selecionada",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["selecionado",{"_index":1195,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["selected",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1452,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1461,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1251,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1451,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1467,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1459,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1458,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1466,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1462,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1253,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1264,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1647,"title":{},"body":{"index.html":{}}}],["server",{"_index":1644,"title":{},"body":{"index.html":{}}}],["service",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesión",{"_index":1184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":492,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setea",{"_index":1266,"title":{},"body":{"components/OrderListComponent.html":{}}}],["setear",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":493,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1081,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1085,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1303,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1469,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":429,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1449,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":1302,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1450,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":127,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1424,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1415,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":350,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1199,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":600,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":1623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulacion",{"_index":1296,"title":{},"body":{"components/PaymentComponent.html":{}}}],["simular",{"_index":1294,"title":{},"body":{"components/PaymentComponent.html":{}}}],["sistema",{"_index":1471,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":590,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":219,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":1612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":160,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":481,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1105,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":136,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":587,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1383,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1470,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":247,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":288,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:107",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:124",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:134",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:143",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:156",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:167",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:178",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:186",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:194",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:202",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:210",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":601,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":609,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1412,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1506,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1524,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1543,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:53",{"_index":1514,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:83",{"_index":1527,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:94",{"_index":1532,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1162,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1169,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1170,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1192,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1278,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1286,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1288,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:59",{"_index":1295,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1313,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1393,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1480,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1636,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1663,"title":{},"body":{"index.html":{}}}],["strike",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["submittext",{"_index":489,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subtotal",{"_index":1215,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1133,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sumar",{"_index":1258,"title":{},"body":{"components/OrderListComponent.html":{}}}],["sun",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sus",{"_index":1262,"title":{},"body":{"components/OrderListComponent.html":{}}}],["suscribible",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1379,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1584,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tempo",{"_index":1291,"title":{},"body":{"components/PaymentComponent.html":{}}}],["tener",{"_index":1372,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":1613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":1669,"title":{},"body":{"index.html":{}}}],["testing",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1668,"title":{},"body":{"index.html":{}}}],["texto",{"_index":585,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":203,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":210,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":207,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":208,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":209,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":311,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":308,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":298,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":1130,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":211,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1234,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":237,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":531,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1493,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1092,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.registrationform.get('username')?.value,this.registrationform.get('password')?.value",{"_index":1365,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1089,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1240,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":535,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":547,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":551,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":557,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":555,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":552,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":554,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":556,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":553,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":548,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":549,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":550,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1073,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1069,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1068,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1067,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1072,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.createorupdatecarditem(this.selectedcard",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1453,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":1129,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":1088,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["this.cardlist",{"_index":1087,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.createshoppingcar(userid",{"_index":1455,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1212,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1407,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1236,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1492,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1498,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":1074,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.gotodetail",{"_index":1090,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1408,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1304,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1270,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":1271,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.redirect",{"_index":1305,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1342,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1355,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1353,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1362,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1350,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1359,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1351,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1360,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1354,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1361,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1352,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1358,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1356,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1126,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1098,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1097,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1307,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1411,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":536,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":540,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":546,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":544,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":541,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":558,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":543,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":545,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":542,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":537,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":538,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":539,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1273,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1468,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1444,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1443,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1439,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1446,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":1272,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.submittext",{"_index":533,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1409,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1494,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1501,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1499,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1500,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":238,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.userservice.createuser",{"_index":1357,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["tipo",{"_index":583,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["titan",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1196,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trae",{"_index":1124,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["trample",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1447,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1667,"title":{},"body":{"index.html":{}}}],["unless",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1434,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1445,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1535,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1482,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1418,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1432,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1512,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1531,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":596,"title":{},"body":{"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{}}}],["uro",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1659,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":300,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1539,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":229,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1508,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":349,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uso",{"_index":1368,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{}}}],["vacio",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1226,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["validaciones",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":610,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1346,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1348,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1345,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1344,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1343,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1347,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":205,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["valores",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":287,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":233,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1146,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["vehicle",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1245,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["verifica",{"_index":1290,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":1641,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1671,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":586,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1382,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1367,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de creacion de direccion de entrega del cliente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Acion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de direccion\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente de formulario de creacion de direccion de entrega del cliente\n */\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  /**\n   * Formulario de direccion\n   */\n  addressForm!: FormGroup;\n\n  /**\n   * Constructor con dependencia a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n   */\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  /**\n   * Acion submit de formulario\n   */\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Titulo de aplicacion\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * @description\n * Componente principal de la aplicacion\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /**\n   * Titulo de aplicacion\n   */\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de usuario\n\n                                                        \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de direcciones\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:178\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:210\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n        this.loggedIn.next(false);\n        return false;\n    }\n\n    this.setUserIdToShoppingCart();\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:111\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:115\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:119\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:123\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardItemService } from '../core/services/cartitem.service';\n\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n\n  cardForm!: FormGroup;\n  submitText: string = '';\n  selectedCard: CardItem = {} as CardItem;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService,\n  ){}\n\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    const result = this.cardItemService.createOrUpdateCardItem(this.selectedCard);\n    if(result){\n      alert(this.submitText + ' con éxito');\n    }else{\n      alert(this.submitText + ' con error');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n\n  cardList: CardItem[] = [];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService\n  ){}\n\n  ngOnInit(): void {\n    this.cardList = this.cardItemService.getCardsList();\n  }\n\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar catalogo de cartas.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de catalogo de cartas\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Accion para agregar una carta seleccionada a al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSe obtiene parametros de url:\n -categoria = tipo de carta\n -search = nombre de carta\nSe obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas a mostrar en el catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente para mostrar catalogo de cartas.\n */\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n  /**\n   * Listado de cartas a mostrar en el catalogo\n   */\n  carditemList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param route Manejo de redirecciones\n   * @param cardItemService Manejo de catalogo de cartas\n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  /**\n   * Iniciacion de componente.\n   * Se obtiene parametros de url:\n   *  -categoria = tipo de carta\n   *  -search = nombre de carta\n   * Se obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  /**\n   * Accion para agregar una carta seleccionada a al carrito de compras\n   * @param cardId Identificador de carta\n   * @param cardName Nombre de carta\n   */\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de ingreso a la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:59\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * @description\n * Componente de formulario de ingreso a la aplicacion\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar detalle de un carrito de compras selecionado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con iniciacion de objeto de carrito de compras\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:23\n                            \n                        \n                \n                    \n                        Valor de entrada del carrito selecionado\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:27\n                            \n                        \n                \n                    \n                        Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion para calcular precio total de la compra\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Precio total del carrito de compras\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Precio total de compra del carro\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n/**\n * @description\n * Componente para mostrar detalle de un carrito de compras selecionado\n */\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  /**\n   * Valor de entrada del carrito selecionado\n   */\n  @Input() currentShoppingCart: ShoppingCart;\n  /**\n   * Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n   */\n  @Input() showImage: boolean = false;\n  /**\n   * Precio total de compra del carro\n   */\n  total: number = 0;\n\n  /**\n   * Constructor con iniciacion de objeto de carrito de compras\n   */\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  /**\n   * Funcion para calcular precio total de la compra\n   * @param cardList Listado de cartas del carrito selecionado\n   * @returns Precio total del carrito de compras\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar los carritos de compra realizados por el usuario logueado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de carrito de compras\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Funcion para sumar el total de cartas de un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas de un carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                total de cartas del carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Funcion para aclcular el total de la compra del carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Valor total de la compra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Accion que setea carrito de compras seleccionado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:35\n                        \n                    \n\n            \n                \n                    Booleano para mostrar card con informacion del carrito de compras seleccionado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:27\n                        \n                    \n\n            \n                \n                    Listado de carritos de compra realizados por el usuario activo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:31\n                        \n                    \n\n            \n                \n                    Carrito de compras seleccionado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n/**\n * @description\n * Componente para listar los carritos de compra realizados por el usuario logueado\n */\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n  /**\n   * Listado de carritos de compra realizados por el usuario activo\n   */\n  orderList: ShoppingCart[] = [];\n  /**\n   * Carrito de compras seleccionado\n   */\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Booleano para mostrar card con informacion del carrito de compras seleccionado\n   */\n  isSelected: boolean = false;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param shoppingCartService Manejo de carrito de compras \n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  /**\n   * Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n   */\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  /**\n   * Accion que setea carrito de compras seleccionado\n   * @param selected Carrito de compras selecionado\n   */\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  /**\n   * Funcion para aclcular el total de la compra del carrito de compras\n   * @param cardList Listado de cartas del carrito de compras\n   * @returns Valor total de la compra\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  /**\n   * Funcion para sumar el total de cartas de un carrito de compras\n   * @param cardList Listado de cartas de un carrito de compras\n   * @returns total de cartas del carrito de compras\n   */\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de Mock de proceso de pago\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:24\n                            \n                        \n\n                \n                    \n                            Contructor de componente con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\nTempo de espera de 4 segundos para simular proceso de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n            \n                \n                    Booleano para indicar si se ha realizado el pago\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente de pantalla de Mock de proceso de pago\n */\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  /**\n   * Booleano para indicar si se ha realizado el pago\n   */\n  isPaymentSuccess: boolean = false;\n\n  /**\n   * Contructor de componente con dependencias a funciones de sesion\n   * @param authService Manejo de informacion de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\n   * Tempo de espera de 4 segundos para simular proceso de pago.\n   */\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  /**\n   * Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n   */\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de usuario\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      const result = this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n      if(result){\n        alert('Se ha registrado con exito');\n        this.authService.login(this.registrationForm.get('username')?.value,this.registrationForm.get('password')?.value);\n        this.router.navigate(['/']);\n      }else{\n        alert('El nombre de usuario ya esta en uso');\n      }\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  total: number = 0;\n  hasItems: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(private cardItemService: CardItemService){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:60\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n\n  updateForm!: FormGroup;\n  currentUser: User = {} as User;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
