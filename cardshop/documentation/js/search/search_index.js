var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.082,1,0.718]],["body/components/AccountManagementComponent.html",[0,0.135,1,1.257,2,1.166,3,0.404,4,0.354,5,0.977,6,0.977,7,0.977,8,0.354,9,3.067,10,3.067,11,2.13,12,0.977,13,1.718,14,1.718,15,1.613,16,1.409,17,1.269,18,0.893,19,1.269,20,1.257,21,1.257,22,1.257,23,1.269,24,3.463,25,1.269,26,3.463,27,0.864,28,0.032,29,0.566,30,0.591,31,2.368,32,4.771,33,0.902,34,2.667,35,1.371,36,2.667,37,3.674,38,0.404,39,0.625,40,3.982,41,4.681,42,5.608,43,4.771,44,5.608,45,4.771,46,3.463,47,2.765,48,0.977,49,1.269,50,1.269,51,0.977,52,1.371,53,0.977,54,0.591,55,1.269,56,0.824,57,0.977,58,0.824,59,0.977,60,0.824,61,0.625,62,1.269,63,0.824,64,0.977,65,0.824,66,0.977,67,0.824,68,0.977,69,0.824,70,0.977,71,0.824,72,0.977,73,0.824,74,0.977,75,0.977,76,0.824,77,0.898,78,0.977,79,0.977,80,0.977,81,0.024,82,0.024]],["title/interfaces/Address.html",[33,0.545,83,1.29]],["body/interfaces/Address.html",[3,0.431,4,0.378,8,0.378,28,0.033,30,0.617,33,0.848,38,0.431,54,0.712,81,0.025,82,0.025,83,1.582,84,2.277,85,3.279,86,2.532,87,3.824,88,2.887,89,2.851,90,3.21,91,2.532,92,3.928,93,2.186,94,3.279,95,2.851,96,3.279,97,0.279,98,0.48,99,3.706,100,2.905,101,1.862,102,3.907,103,3.333,104,2.145,105,0.506,106,3.615,107,5.201,108,3.21,109,2.617,110,4.157,111,4.157,112,4.98,113,3.21,114,3.615,115,4.98,116,2.617,117,2.887]],["title/components/AddressCreateComponent.html",[0,0.082,56,0.718]],["body/components/AddressCreateComponent.html",[0,0.115,1,0.608,2,0.948,3,0.298,4,0.261,5,0.722,6,0.722,7,0.722,8,0.261,12,0.722,13,1.653,14,1.653,15,0.722,16,0.722,17,1.032,18,0.726,19,1.032,20,0.608,21,0.608,22,0.608,23,1.032,25,1.032,27,0.761,28,0.033,29,0.418,30,0.336,33,0.974,35,1.106,38,0.497,39,0.462,48,0.722,49,1.032,50,1.032,51,0.722,52,1.207,53,0.722,54,0.693,55,1.032,56,1.108,57,0.722,58,0.608,59,0.722,60,0.608,61,0.462,62,1.032,63,0.608,64,0.722,65,0.608,66,0.722,67,0.608,68,0.722,69,0.608,70,0.722,71,0.608,72,0.722,73,0.608,74,0.722,75,0.722,76,0.608,77,0.663,78,0.722,79,0.722,80,0.722,81,0.019,82,0.019,97,0.192,98,0.374,99,3.184,101,1.428,102,3.184,105,0.323,106,3.585,118,3.755,119,3.755,120,1.969,121,3.237,122,2.624,123,3.285,124,1.544,125,3.878,126,3.878,127,4.526,128,0.796,129,1.684,130,3.184,131,2.499,132,0.722,133,1.3,134,1.446,135,1.071,136,3.878,137,0.508,138,0.508,139,2.712,140,0.726,141,1.106,142,2.712,143,2.863,144,2.712,145,2.712,146,2.712,147,2.712,148,2.712,149,2.712,150,2.712,151,2.712,152,0.852,153,3.029,154,1.748,155,3.285,156,3.285,157,2.917,158,1.426,159,1.005,160,1.3,161,2.712,162,2.293,163,3.184,164,2.815,165,3.285,166,1.797,167,2.712,168,2.712,169,2.712,170,2.712,171,2.712,172,2.712,173,2.712,174,2.499,175,2.499,176,3.585,177,1.322,178,3.585,179,1.969,180,1.969,181,2.712,182,0.66,183,2.815,184,2.712,185,2.712,186,3.878,187,4.776,188,3.688,189,3.688,190,4.123,191,3.945,192,3.503,193,3.945,194,3.585,195,3.585,196,3.878,197,3.237]],["title/components/AddressManagementComponent.html",[0,0.082,21,0.718]],["body/components/AddressManagementComponent.html",[0,0.13,1,0.761,2,1.107,3,0.373,4,0.327,5,0.903,6,0.903,7,0.903,8,0.327,11,1.967,12,0.903,13,1.702,14,1.702,15,0.903,16,1.356,17,1.205,18,0.848,19,1.205,20,0.761,21,1.219,22,0.761,23,1.205,24,3.287,25,1.205,26,3.287,27,0.872,28,0.033,29,0.523,30,0.42,33,1.08,34,3.946,35,1.246,38,0.373,39,0.578,48,0.903,49,1.205,50,1.205,51,0.903,52,1.329,53,0.903,54,0.631,55,1.205,56,1.219,57,0.903,58,0.761,59,0.903,60,0.761,61,0.578,62,1.205,63,0.761,64,0.903,65,0.761,66,0.903,67,0.761,68,0.903,69,0.761,70,0.903,71,0.761,72,0.903,73,0.761,74,0.903,75,0.903,76,0.761,77,0.83,78,0.903,79,0.903,80,0.903,81,0.022,82,0.022,97,0.241,98,0.436,105,0.378,106,3.287,118,3.504,119,2.187,124,1.738,128,0.929,129,1.854,132,0.903,133,1.627,134,1.55,135,0.954,137,0.635,138,0.635,140,0.635,141,1.107,152,1.066,159,1.257,160,1.627,182,0.578,187,3.779,190,3.779,195,3.287,198,5.095,199,4.528,200,3.394,201,0.761,202,3.394,203,3.394,204,3.394,205,3.394,206,2.833,207,4.528,208,4.528,209,4.528,210,4.528]],["title/injectables/AddressService.html",[211,1.092,212,2.065]],["body/injectables/AddressService.html",[3,0.38,4,0.333,8,0.333,27,0.706,28,0.033,29,0.532,30,0.428,33,1.045,38,0.38,39,0.588,54,0.774,81,0.023,82,0.023,97,0.245,98,0.442,99,3.91,100,2.625,101,1.86,102,3.91,103,3.517,104,2.094,105,0.457,128,0.94,135,1.025,137,0.963,138,0.963,140,0.963,141,0.845,166,1.615,177,1.179,182,0.588,201,0.775,206,4.292,211,1.563,212,2.954,213,1.817,214,2.885,215,3.826,216,4.583,217,5.142,218,4.583,219,3.456,220,4.583,221,3.456,222,4.583,223,3.456,224,1.28,225,3.673,226,5.476,227,3.826,228,5.476,229,4.583,230,4.583,231,3.975,232,4.583,233,5.476,234,3.456,235,2.885,236,2.003,237,1.817,238,3.456,239,2.509,240,3.456,241,2.509,242,2.509,243,1.179,244,3.456,245,3.456,246,3.456,247,3.456,248,3.456,249,3.456,250,3.456,251,3.456,252,1.392,253,3.456,254,3.456]],["title/components/AppComponent.html",[0,0.082,58,0.718]],["body/components/AppComponent.html",[0,0.138,1,0.859,2,1.198,3,0.421,4,0.369,5,1.019,6,1.019,7,1.019,8,0.369,12,1.019,13,1.726,14,1.726,15,1.019,16,1.019,17,1.304,18,0.917,19,1.304,20,0.859,21,0.859,22,0.859,23,1.304,25,1.304,27,0.832,28,0.032,29,0.59,30,0.474,33,0.834,35,1.321,38,0.421,39,0.652,48,1.019,49,1.304,50,1.304,51,1.019,52,1.392,53,1.019,54,0.607,55,1.304,56,0.859,57,1.019,58,1.277,59,1.019,60,0.859,61,0.652,62,1.304,63,0.859,64,1.019,65,1.277,66,1.019,67,0.859,68,1.019,69,0.859,70,1.019,71,0.859,72,1.019,73,0.859,74,1.019,75,1.019,76,0.859,77,0.936,78,1.019,79,1.019,80,1.019,81,0.024,82,0.024,97,0.272,98,0.472,104,1.306,105,0.319,135,0.717,182,0.652,201,0.859,237,2.575,255,3.197,256,5.403,257,4.9,258,4.9,259,5.403,260,4.09,261,3.83,262,1.543,263,3.83]],["title/injectables/AuthService.html",[134,0.852,211,1.092]],["body/injectables/AuthService.html",[3,0.283,4,0.249,8,0.249,18,0.483,27,0.9,28,0.033,29,0.397,30,0.683,33,0.749,38,0.283,39,0.439,54,0.683,77,0.631,81,0.018,82,0.018,97,0.183,98,0.36,99,2.837,101,1.664,102,2.837,104,2.182,105,0.46,128,0.768,132,0.995,134,0.995,135,1.161,137,1.001,138,1.001,140,1.121,141,1.076,162,2.345,166,1.836,177,0.88,182,0.822,201,1.082,211,1.276,212,3.553,213,1.356,215,3.123,224,2.042,235,2.154,236,1.496,237,1.356,243,1.276,252,1.039,262,1.039,264,2.154,265,2.707,266,2.837,267,4.401,268,4.401,269,4.401,270,3.123,271,4.827,272,4.827,273,4.827,274,4.827,275,4.827,276,4.029,277,3.123,278,4.029,279,3.741,280,3.741,281,2.154,282,2.561,283,3.195,284,3.195,285,3.741,286,3.741,287,2.58,288,1.663,289,3.741,290,2.58,291,2.58,292,2.58,293,2.58,294,2.58,295,2.58,296,2.58,297,3.741,298,2.551,299,2.58,300,1.356,301,2.58,302,3.741,303,2.798,304,2.798,305,2.58,306,2.169,307,3.741,308,2.798,309,2.58,310,2.716,311,5.124,312,1.773,313,2.58,314,3.741,315,2.58,316,2.58,317,2.58,318,2.154,319,2.154,320,2.58,321,2.154,322,1.356,323,2.154,324,1.873,325,1.663,326,4.401,327,2.58,328,2.58,329,4.401,330,3.741,331,3.741,332,2.58,333,2.58,334,2.58,335,2.58,336,2.58,337,2.58,338,2.58,339,1.663,340,3.741,341,2.118,342,3.741,343,2.58,344,2.58,345,2.58,346,2.58,347,2.58,348,2.58,349,2.58,350,2.58,351,2.58,352,2.58]],["title/interfaces/CardItem.html",[61,0.545,83,1.29]],["body/interfaces/CardItem.html",[3,0.336,4,0.295,8,0.295,28,0.033,38,0.336,61,0.718,81,0.021,82,0.021,83,1.232,84,1.773,86,1.971,87,3.113,88,2.8,89,2.22,90,4.193,91,1.971,93,2.245,97,0.217,98,0.407,100,2.707,101,1.818,104,2.207,105,0.518,108,2.719,109,2.737,110,3.522,113,2.719,116,2.218,117,1.773,353,2.553,354,2.22,355,5.463,356,2.22,357,1.773,358,2.22,359,3.78,360,4.347,361,4.347,362,4.347,363,4.347,364,4.347,365,4.347,366,4.347,367,3.78,368,4.347,369,4.347,370,4.347,371,4.697,372,5.648,373,4.219,374,5.207,375,4.219,376,3.063,377,4.219,378,4.219,379,4.219,380,4.219,381,4.219,382,4.219,383,3.063,384,4.219,385,3.522,386,4.219]],["title/injectables/CardItemService.html",[211,1.092,387,1.857]],["body/injectables/CardItemService.html",[3,0.086,4,0.184,8,0.076,27,0.217,28,0.033,29,0.121,35,0.57,38,0.086,39,0.134,46,3.012,47,3.482,52,0.192,54,0.237,61,0.682,81,0.007,82,0.007,97,0.056,98,0.136,100,2.757,101,1.004,104,1.018,105,0.249,121,4.21,128,0.289,135,0.559,137,0.358,138,0.358,140,0.503,141,0.192,166,0.938,175,3.251,182,0.326,201,0.176,211,0.48,213,0.413,224,0.521,225,1.925,231,3.19,236,0.455,237,0.413,243,1.982,265,0.839,288,1.233,359,4.174,360,4.8,361,4.8,362,4.8,363,4.8,364,4.8,365,4.8,366,4.8,367,4.174,368,4.8,369,4.8,370,4.8,387,0.816,388,0.655,389,1.597,390,2.332,391,1.407,392,1.407,393,1.407,394,2.332,395,0.785,396,1.407,397,0.785,398,1.407,399,0.785,400,1.407,401,2.168,402,0.785,403,0.785,404,0.785,405,2.332,406,1.407,407,1.407,408,4.395,409,4.395,410,4.395,411,1.407,412,5.751,413,1.407,414,5.154,415,2.986,416,5.339,417,3.473,418,1.407,419,5.043,420,4.395,421,6.093,422,1.407,423,1.407,424,2.986,425,3.473,426,2.332,427,1.407,428,3.473,429,1.407,430,1.407,431,1.407,432,4.15,433,2.986,434,3.473,435,2.986,436,1.407,437,1.407,438,1.407,439,3.473,440,3.473,441,3.473,442,3.473,443,1.407,444,2.899,445,2.986,446,1.407,447,4.916,448,5.154,449,3.473,450,1.407,451,1.407,452,3.85,453,3.473,454,2.332,455,2.986,456,5.043,457,5.043,458,4.395,459,2.986,460,2.986,461,1.407,462,3.85,463,2.332,464,4.15,465,1.407,466,2.332,467,2.332,468,1.407,469,2.986,470,4.598,471,2.332,472,2.332,473,1.407,474,1.407,475,3.214,476,2.332,477,1.407,478,2.332,479,1.407,480,3.473,481,1.407,482,3.85,483,1.407,484,3.473,485,2.986,486,3.473,487,4.395,488,2.332,489,1.407,490,1.407,491,1.407,492,1.407,493,2.986,494,1.407,495,1.407,496,1.407,497,1.407,498,1.407,499,1.407,500,1.022,501,2.332,502,4.395,503,1.407,504,3.473,505,1.407,506,3.214,507,1.407,508,1.407,509,1.407,510,2.332,511,2.332,512,2.332,513,2.332,514,1.407,515,1.407,516,1.407,517,1.407,518,1.407,519,4.395,520,4.104,521,2.986,522,2.332,523,1.407,524,1.407,525,2.332,526,3.473,527,3.473,528,2.986,529,1.407,530,1.407,531,2.332,532,1.407,533,1.407,534,1.407,535,1.407,536,1.407,537,2.332,538,1.407,539,2.986,540,1.947,541,2.332,542,2.493,543,2.332,544,2.332,545,1.407,546,3.473,547,1.407,548,1.407,549,2.332,550,3.473,551,2.986,552,1.407,553,2.332,554,2.332,555,2.332,556,1.407,557,1.407,558,1.407,559,1.407,560,2.332,561,1.407,562,1.407,563,2.332,564,1.407,565,2.332,566,1.407,567,1.407,568,1.407,569,1.407,570,2.332,571,4.15,572,1.407,573,2.332,574,1.407,575,1.407,576,2.986,577,1.407,578,1.407,579,3.85,580,1.407,581,1.407,582,2.986,583,1.407,584,1.407,585,4.395,586,1.407,587,1.407,588,1.407,589,2.332,590,2.332,591,2.332,592,2.332,593,1.407,594,1.407,595,4.395,596,1.407,597,2.986,598,1.407,599,3.473,600,2.332,601,2.986,602,2.986,603,2.986,604,2.986,605,1.407,606,2.986,607,1.407,608,2.332,609,4.15,610,3.473,611,1.407,612,1.407,613,1.407,614,1.407,615,1.407,616,1.407,617,1.407,618,1.407,619,1.407,620,2.986,621,1.407,622,1.407,623,2.332,624,1.407,625,1.175,626,2.332,627,1.407,628,1.407,629,1.407,630,1.407,631,2.332,632,1.407,633,1.407,634,1.407,635,1.407,636,2.332,637,2.332,638,1.407,639,1.407,640,1.407,641,1.407,642,2.332,643,1.407,644,1.175,645,2.332,646,2.986,647,1.175,648,2.332,649,2.986,650,3.473,651,3.473,652,1.407,653,1.407,654,1.407,655,1.407,656,2.332,657,1.407,658,3.85,659,1.407,660,3.473,661,2.332,662,2.332,663,1.407,664,1.407,665,1.407,666,1.407,667,1.407,668,1.407,669,2.332,670,1.407,671,1.407,672,1.407,673,2.986,674,1.407,675,1.407,676,1.407,677,1.407,678,1.407,679,1.407,680,2.986,681,2.986,682,1.407,683,1.407,684,1.407,685,1.407,686,1.407,687,1.407,688,1.407,689,1.407,690,1.407,691,1.407,692,1.407,693,1.407,694,1.407,695,1.407,696,3.473,697,1.407,698,2.332,699,2.332,700,1.407,701,1.407,702,1.407,703,1.407,704,1.407,705,2.332,706,1.407,707,1.407,708,1.407,709,1.407,710,1.407,711,1.407,712,1.407,713,1.407,714,1.407,715,1.407,716,1.407,717,1.407,718,1.407,719,1.407,720,1.407,721,1.407,722,1.407,723,1.407,724,1.407,725,1.407,726,1.407,727,1.407,728,1.407,729,1.407,730,1.407,731,0.785,732,0.785,733,1.175,734,2.241,735,1.407,736,0.785,737,0.785,738,0.655,739,0.785,740,0.785,741,0.785,742,0.655,743,0.785]],["title/components/CarditemListComponent.html",[0,0.082,60,0.718]],["body/components/CarditemListComponent.html",[0,0.122,1,0.672,2,1.017,3,0.329,4,0.289,5,0.798,6,0.798,7,0.798,8,0.289,12,0.798,13,1.676,14,1.676,15,0.798,16,0.798,17,1.107,18,0.779,19,1.107,20,0.672,21,0.672,22,0.672,23,1.107,25,1.107,27,0.865,28,0.033,29,0.462,30,0.371,33,0.708,35,1.169,38,0.329,39,0.51,48,0.798,49,1.107,50,1.107,51,0.798,52,1.262,53,0.798,54,0.64,55,1.107,56,0.672,57,0.798,58,0.672,59,0.798,60,1.158,61,1.027,62,1.107,63,0.672,64,0.798,65,0.672,66,0.798,67,0.672,68,0.798,69,0.672,70,0.798,71,0.672,72,0.798,73,0.672,74,0.798,75,0.798,76,0.672,77,0.733,78,0.798,79,0.798,80,0.798,81,0.021,82,0.021,88,1.738,97,0.213,98,0.401,101,1.382,104,1.63,105,0.399,116,2.512,124,1.63,128,0.854,129,1.761,132,1.107,134,1.532,135,0.967,137,0.779,138,0.779,140,0.779,141,1.169,152,0.942,159,1.111,177,1.63,182,0.51,197,3.474,201,0.672,262,1.208,265,2.098,288,1.933,359,3.938,387,3.337,389,3.99,401,3.021,733,3.474,734,2.503,744,4.528,745,4.528,746,2.176,747,3.474,748,3.474,749,3.474,750,4.162,751,2.998,752,5.163,753,4.162,754,3.474,755,4.162,756,2.998,757,2.998,758,2.176,759,2.998,760,2.998,761,4.162,762,2.998,763,2.998,764,2.998,765,2.998,766,2.998,767,2.998,768,1.738,769,1.933,770,2.998,771,1.933,772,2.998,773,2.998,774,2.998,775,2.998,776,4.162,777,4.162,778,4.162,779,2.682,780,4.162]],["title/components/LoginComponent.html",[0,0.082,63,0.718]],["body/components/LoginComponent.html",[0,0.124,1,0.694,2,1.04,3,0.34,4,0.298,5,0.824,6,0.824,7,0.824,8,0.298,12,0.824,13,1.683,14,1.683,15,0.824,16,0.824,17,1.132,18,0.797,19,1.132,20,0.694,21,0.694,22,0.694,23,1.132,25,1.132,27,0.845,28,0.033,29,0.477,30,0.384,33,0.724,35,1.189,38,0.34,39,0.527,48,0.824,49,1.132,50,1.132,51,0.824,52,1.28,53,0.824,54,0.602,55,1.132,56,0.694,57,0.824,58,0.694,59,0.824,60,0.694,61,0.527,62,1.132,63,1.174,64,0.824,65,0.694,66,0.824,67,0.694,68,0.824,69,0.694,70,0.824,71,0.694,72,0.824,73,0.694,74,0.824,75,0.824,76,0.694,77,0.757,78,0.824,79,0.824,80,0.824,81,0.021,82,0.021,93,1.934,97,0.22,98,0.41,105,0.355,109,2.98,122,2.818,124,1.658,128,0.873,129,1.785,130,3.375,131,2.743,132,0.824,133,1.484,134,1.46,135,1.062,137,0.58,138,0.58,140,0.797,141,1.28,143,3.035,152,0.973,153,2.818,154,1.996,158,1.628,159,1.147,160,1.484,162,2.134,163,2.743,166,1.337,188,2.743,189,3.375,262,1.248,277,3.552,282,2.784,298,3.035,300,2.752,339,1.996,357,3.035,768,1.795,769,1.996,781,2.585,782,4.256,783,4.256,784,4.862,785,4.256,786,3.097,787,3.097,788,2.248,789,3.097,790,2.585,791,3.097,792,3.097,793,3.097,794,3.097,795,3.097,796,3.097,797,3.097,798,3.097,799,3.097,800,4.848,801,3.097,802,2.718,803,5.235,804,3.8,805,5.235,806,3.552]],["title/components/NavbarComponent.html",[0,0.082,65,0.718]],["body/components/NavbarComponent.html",[0,0.124,1,0.694,2,1.04,3,0.34,4,0.298,5,0.824,6,0.824,7,0.824,8,0.298,12,0.824,13,1.683,14,1.683,15,0.824,16,0.824,17,1.132,18,0.797,19,1.132,20,0.694,21,0.694,22,0.694,23,1.132,25,1.132,27,0.845,28,0.033,29,0.477,30,0.384,33,0.724,35,1.189,38,0.34,39,0.527,40,3.552,48,0.824,49,1.132,50,1.132,51,0.824,52,1.28,53,0.824,54,0.602,55,1.132,56,0.694,57,0.824,58,0.694,59,0.824,60,0.694,61,0.527,62,1.132,63,0.694,64,0.824,65,1.174,66,0.824,67,0.694,68,0.824,69,0.694,70,0.824,71,0.694,72,0.824,73,0.694,74,0.824,75,0.824,76,0.694,77,0.757,78,0.824,79,0.824,80,0.824,81,0.021,82,0.021,93,1.451,97,0.22,98,0.41,105,0.406,122,2.818,124,1.658,128,0.873,129,1.785,132,0.824,134,1.545,135,1.062,137,0.58,138,0.58,140,0.91,141,1.28,143,3.035,152,0.973,153,2.467,158,1.628,159,1.147,160,1.484,162,1.868,177,1.056,182,0.527,201,0.694,224,1.577,252,1.714,262,1.248,265,1.359,276,4.059,278,4.37,281,2.585,282,2.718,310,2.248,401,3.089,520,4.37,738,2.585,768,1.795,769,1.996,771,2.743,802,2.04,806,3.552,807,2.585,808,4.256,809,4.862,810,4.256,811,4.256,812,4.862,813,5.235,814,4.256,815,3.097,816,3.097,817,3.097,818,3.097,819,3.097,820,3.097,821,3.097,822,3.097,823,3.097,824,3.097,825,3.097,826,4.862,827,5.235,828,3.089,829,4.256,830,4.256,831,4.256,832,4.256,833,4.256,834,4.256,835,3.552,836,4.256]],["title/components/OrderDetailComponent.html",[0,0.082,67,0.718]],["body/components/OrderDetailComponent.html",[0,0.126,1,0.722,2,1.068,3,0.354,4,0.31,5,0.856,6,0.856,7,0.856,8,0.31,12,0.856,13,1.692,14,1.692,15,0.856,16,0.856,17,1.163,18,0.818,19,1.163,20,0.722,21,0.722,22,0.722,23,1.163,25,1.163,27,0.819,28,0.033,29,0.496,30,0.399,33,0.744,35,1.48,38,0.354,39,0.548,48,0.856,49,1.163,50,1.163,51,0.856,52,1.301,53,0.856,54,0.615,55,1.163,56,0.722,57,0.856,58,0.722,59,0.856,60,0.722,61,0.947,62,1.163,63,0.722,64,0.856,65,0.722,66,0.856,67,1.193,68,0.856,69,0.722,70,0.856,71,0.722,72,0.856,73,0.722,74,0.856,75,0.856,76,0.722,77,0.787,78,0.856,79,0.856,80,0.856,81,0.022,82,0.022,97,0.228,98,0.421,101,1.539,105,0.414,124,1.692,128,0.897,132,1.32,135,0.996,137,0.603,138,0.603,140,0.603,152,1.011,166,1.011,182,0.548,201,0.722,243,1.692,266,3.198,312,2.143,322,1.692,341,1.413,371,3.172,383,3.172,758,2.337,779,3.698,837,3.586,838,3.586,839,2.687,840,4.37,841,4.37,842,4.37,843,3.586,844,4.038,845,4.37,846,4.37,847,3.219,848,3.648,849,3.219,850,2.337,851,4.37,852,2.075,853,2.337,854,2.687,855,2.687,856,4.038,857,4.038,858,3.172,859,3.648,860,3.648,861,4.37]],["title/components/OrderFinishComponent.html",[0,0.082,69,0.718]],["body/components/OrderFinishComponent.html",[0,0.127,1,0.73,2,1.076,3,0.357,4,0.313,5,0.866,6,0.866,7,0.866,8,0.313,12,0.866,13,1.694,14,1.694,15,0.866,16,0.866,17,1.171,18,0.824,19,1.171,20,0.73,21,0.73,22,0.73,23,1.171,25,1.171,27,0.886,28,0.033,29,0.501,30,0.403,33,0.749,35,1.499,38,0.357,39,0.554,41,3.674,48,0.866,49,1.171,50,1.171,51,0.866,52,1.306,53,0.866,54,0.618,55,1.171,56,0.73,57,0.866,58,0.73,59,0.866,60,0.73,61,0.554,62,1.171,63,0.73,64,0.866,65,0.73,66,0.866,67,1.198,68,0.866,69,1.198,70,0.866,71,0.73,72,0.866,73,0.73,74,0.866,75,0.866,76,0.73,77,0.795,78,0.866,79,0.866,80,0.866,81,0.022,82,0.022,97,0.231,98,0.424,105,0.367,128,0.903,129,1.822,132,1.171,133,1.56,134,1.531,135,0.934,137,0.609,138,0.609,140,0.609,141,0.795,159,1.205,182,0.554,201,0.73,243,1.11,262,1.311,265,1.931,266,3.215,282,2.82,308,1.886,312,2.318,322,1.71,325,2.097,339,2.097,341,1.428,837,3.445,838,2.097,852,2.097,853,2.362,862,4.461,863,2.716,864,4.401,865,4.401,866,4.401,867,4.401,868,3.254,869,2.716,870,3.254,871,2.362,872,2.716,873,2.362,874,2.716,875,2.716,876,2.362,877,2.716,878,3.254,879,2.716,880,3.254,881,3.674,882,4.401,883,4.401,884,4.401,885,4.401,886,3.674,887,4.401]],["title/components/OrderListComponent.html",[0,0.082,22,0.718]],["body/components/OrderListComponent.html",[0,0.119,1,0.639,2,0.982,3,0.313,4,0.275,5,0.759,6,0.759,7,0.759,8,0.275,12,0.759,13,1.665,14,1.665,15,0.759,16,0.759,17,1.069,18,0.871,19,1.069,20,0.639,21,0.639,22,1.133,23,1.069,25,1.069,27,0.874,28,0.033,29,0.439,30,0.353,33,0.684,35,1.46,36,4.208,38,0.313,39,0.485,48,0.759,49,1.069,50,1.069,51,0.759,52,1.235,53,0.759,54,0.66,55,1.069,56,0.639,57,0.759,58,0.639,59,0.759,60,0.639,61,0.906,62,1.069,63,0.639,64,0.759,65,0.639,66,0.759,67,1.133,68,0.759,69,0.639,70,0.759,71,0.639,72,0.759,73,0.639,74,0.759,75,0.759,76,0.639,77,0.697,78,0.759,79,0.759,80,0.759,81,0.02,82,0.02,93,1.37,97,0.202,98,0.387,101,1.162,103,1.653,105,0.461,124,1.587,128,0.825,129,1.723,132,1.069,134,1.51,135,1.063,137,0.871,138,0.871,140,0.871,141,1.137,152,0.895,159,1.056,166,0.895,177,0.972,182,0.792,201,1.043,224,1.488,243,0.972,252,1.874,265,1.763,284,3.203,312,2.406,322,1.499,323,2.38,341,1.251,354,2.917,376,2.917,746,2.07,747,3.354,748,3.354,749,3.354,758,2.07,779,2.59,837,3.736,838,1.838,843,2.59,844,3.865,848,3.354,850,2.07,852,1.838,854,2.38,855,2.38,856,2.07,857,2.07,858,2.917,869,2.38,881,3.354,886,3.354,888,4.652,889,4.652,890,4.652,891,4.018,892,2.851,893,4.018,894,2.851,895,2.851,896,4.018,897,2.851,898,4.018,899,2.851,900,2.851,901,2.851,902,4.018,903,2.851,904,2.851,905,2.851,906,2.851,907,4.018,908,4.018,909,4.018,910,4.018,911,4.018]],["title/components/PaymentComponent.html",[0,0.082,71,0.718]],["body/components/PaymentComponent.html",[0,0.128,1,0.738,2,1.085,3,0.362,4,0.317,5,0.876,6,0.876,7,0.876,8,0.317,12,0.876,13,1.696,14,1.696,15,0.876,16,0.876,17,1.181,18,0.94,19,1.181,20,0.738,21,0.738,22,0.738,23,1.181,25,1.181,27,0.827,28,0.033,29,0.507,30,0.408,33,0.755,35,1.227,38,0.362,39,0.56,48,0.876,49,1.181,50,1.181,51,0.876,52,1.313,53,0.876,54,0.622,55,1.181,56,0.738,57,0.876,58,0.738,59,0.876,60,0.738,61,0.56,62,1.181,63,0.738,64,0.876,65,0.738,66,0.876,67,0.738,68,0.876,69,0.738,70,0.876,71,1.204,72,0.876,73,0.738,74,0.876,75,0.876,76,0.738,77,0.805,78,0.876,79,0.876,80,0.876,81,0.022,82,0.022,97,0.234,98,0.428,105,0.37,116,2.332,124,1.712,128,0.911,129,1.831,132,1.181,133,1.578,134,1.536,135,1.005,137,0.617,138,0.617,140,0.831,141,1.085,152,1.034,159,1.22,182,0.56,201,0.738,224,1.644,243,1.123,252,1.788,262,1.327,265,1.947,282,2.829,339,2.123,341,1.445,871,2.39,872,2.749,873,2.39,874,2.749,875,2.749,876,2.39,877,2.749,912,2.749,913,4.437,914,4.437,915,4.437,916,5.019,917,5.37,918,4.437,919,3.293,920,3.293,921,4.437,922,3.293,923,3.293,924,4.437,925,3.293,926,3.293,927,4.437,928,5.37,929,5.37,930,4.437,931,4.437,932,4.437]],["title/components/RegistrationFormComponent.html",[0,0.082,73,0.718]],["body/components/RegistrationFormComponent.html",[0,0.098,1,0.46,2,0.77,3,0.225,4,0.198,5,0.545,6,0.545,7,0.545,8,0.198,12,0.545,13,1.58,14,1.58,15,0.545,16,0.545,17,0.838,18,0.59,19,0.838,20,0.46,21,0.46,22,0.46,23,0.838,25,0.838,27,0.663,28,0.033,29,0.316,30,0.254,33,0.536,35,0.938,38,0.473,39,0.349,47,2.844,48,0.545,49,0.838,50,0.838,51,0.545,52,1.053,53,0.545,54,0.475,55,0.838,56,0.46,57,0.545,58,0.46,59,0.545,60,0.46,61,0.349,62,0.838,63,0.46,64,0.545,65,0.46,66,0.545,67,0.46,68,0.545,69,0.46,70,0.545,71,0.46,72,0.545,73,0.966,74,1.359,75,0.545,76,0.46,77,0.501,78,0.545,79,0.545,80,0.545,81,0.016,82,0.016,90,2.776,93,1.673,95,1.488,97,0.145,98,0.304,104,1.074,105,0.263,109,2.772,117,1.188,122,2.224,123,2.785,124,1.309,128,0.647,129,1.469,130,2.776,131,2.031,132,0.545,135,1.034,137,0.384,138,0.384,140,0.59,141,1.053,143,2.496,152,0.644,153,2.962,154,2.031,155,3.126,156,3.126,157,2.776,158,1.078,160,0.983,162,2.242,163,3.162,166,1.79,174,2.473,175,2.473,176,3.561,177,1.585,178,3.561,179,1.488,180,1.488,182,0.653,183,2.287,188,3.559,189,3.674,191,3.561,192,3.162,193,4.008,194,3.561,195,3.126,283,2.844,298,3.057,300,2.263,303,2.496,304,3.2,306,2.496,356,4.235,444,2.63,500,3.126,542,3.594,647,3.594,768,1.188,769,1.321,788,1.488,790,1.711,800,4.758,802,2.064,804,2.287,835,2.63,876,3.828,933,4.077,934,4.077,935,1.488,936,3.15,937,3.15,938,3.15,939,3.837,940,5.408,941,2.05,942,3.15,943,2.05,944,2.05,945,1.711,946,2.05,947,1.711,948,2.05,949,2.05,950,1.711,951,2.05,952,2.05,953,2.05,954,2.05,955,2.05,956,2.05,957,2.776,958,3.203,959,2.63,960,2.05,961,1.711,962,2.785,963,3.15,964,3.15,965,2.05,966,2.05,967,2.05,968,2.05,969,2.05,970,2.05,971,2.05,972,2.05,973,2.05,974,2.05,975,2.05,976,2.05,977,2.05,978,2.05,979,2.05,980,2.05,981,2.05,982,2.05,983,2.05,984,2.05,985,2.05,986,2.05,987,1.711,988,2.05,989,2.05,990,2.05,991,2.05,992,2.05,993,1.711,994,1.711,995,2.05,996,2.05,997,2.05,998,2.05,999,4.87,1000,4.609,1001,4.609,1002,4.609,1003,4.306,1004,4.306,1005,5.273,1006,4.306,1007,4.306,1008,4.306,1009,4.306,1010,2.287,1011,3.15,1012,3.15,1013,3.126,1014,2.63]],["title/interfaces/ShoppingCart.html",[83,1.29,312,1.29]],["body/interfaces/ShoppingCart.html",[3,0.402,4,0.352,8,0.352,27,0.733,28,0.033,38,0.402,61,0.953,81,0.023,82,0.023,83,1.473,84,2.12,86,3.066,87,3.608,90,3.066,91,3.066,93,2.164,94,3.971,97,0.26,98,0.458,100,2.683,101,1.835,103,3.245,105,0.496,107,3.971,108,3.066,111,3.971,113,3.834,117,3.63,308,3.448,310,4.063,312,1.916,324,2.655,325,2.358,354,3.453,357,2.757,358,3.453,367,4.063,376,3.453,385,3.971,771,3.834,802,2.28,828,4.458,843,3.066,850,4.063,1010,3.453,1015,3.053,1016,3.053,1017,3.971,1018,5.598,1019,4.757,1020,4.757,1021,4.757,1022,3.971,1023,4.757,1024,4.757,1025,4.757,1026,3.658]],["title/components/ShoppingCartComponent.html",[0,0.082,76,0.718]],["body/components/ShoppingCartComponent.html",[0,0.121,1,0.667,2,1.011,3,0.327,4,0.286,5,0.791,6,0.791,7,0.791,8,0.286,12,0.791,13,1.674,14,1.674,15,0.791,16,0.791,17,1.101,18,0.891,19,1.101,20,0.667,21,0.667,22,0.667,23,1.101,25,1.101,27,0.833,28,0.033,29,0.458,30,0.368,33,0.704,35,1.163,38,0.327,39,0.506,48,0.791,49,1.101,50,1.101,51,0.791,52,1.258,53,0.791,54,0.59,55,1.101,56,0.667,57,0.791,58,0.667,59,0.791,60,0.667,61,0.506,62,1.101,63,0.667,64,0.791,65,0.667,66,0.791,67,0.667,68,0.791,69,0.667,70,0.791,71,0.667,72,0.791,73,0.667,74,0.791,75,0.791,76,1.154,77,1.404,78,0.791,79,0.791,80,0.791,81,0.02,82,0.02,93,1.411,97,0.211,98,0.399,101,1.196,105,0.429,124,1.623,128,0.849,129,1.754,132,1.101,133,1.425,134,1.49,135,1.048,137,0.557,138,0.557,140,0.775,141,1.163,152,0.934,159,1.101,182,0.81,201,1.067,224,1.533,243,1.623,252,1.667,262,1.198,265,1.815,266,3.067,282,2.753,312,2.255,322,1.562,341,1.304,371,3.003,383,3.003,771,2.667,779,3.609,828,3.003,843,3.702,844,3.454,852,1.916,853,2.158,856,3.925,857,3.925,858,3.003,859,3.453,860,3.453,871,2.158,1022,3.453,1027,4.795,1028,4.795,1029,2.481,1030,4.137,1031,4.137,1032,4.137,1033,4.758,1034,5.144,1035,4.137,1036,2.973,1037,2.973,1038,2.973,1039,2.973,1040,2.973,1041,2.973,1042,2.973,1043,2.973,1044,2.973]],["title/injectables/ShoppingCartService.html",[211,1.092,284,1.857]],["body/injectables/ShoppingCartService.html",[3,0.342,4,0.3,8,0.3,18,0.584,27,0.808,28,0.033,29,0.48,30,0.386,38,0.342,39,0.53,54,0.681,81,0.021,82,0.021,97,0.346,98,0.412,101,1.823,103,3.188,105,0.474,128,0.877,132,0.829,135,1.064,137,1.03,138,1.03,140,0.913,160,1.494,166,1.784,177,1.79,182,0.53,201,0.699,211,1.458,213,1.638,224,1.584,225,3.819,236,1.807,237,1.638,239,3.103,241,2.262,242,2.262,243,1.063,252,1.722,270,3.568,284,2.478,288,3.384,308,1.807,312,2.539,321,2.602,322,1.638,324,2.262,325,2.009,341,1.368,387,3.293,742,2.602,873,3.103,879,3.568,1045,4.856,1046,2.602,1047,4.878,1048,4.274,1049,4.274,1050,4.274,1051,3.117,1052,4.274,1053,4.274,1054,5.249,1055,3.117,1056,4.274,1057,3.117,1058,4.274,1059,3.117,1060,4.274,1061,3.117,1062,4.274,1063,3.117,1064,4.274,1065,3.117,1066,3.117,1067,3.117,1068,3.117,1069,3.117,1070,4.274,1071,3.117,1072,3.568,1073,4.274,1074,3.117,1075,3.117,1076,4.878,1077,4.274,1078,3.117,1079,4.878,1080,3.117,1081,4.274,1082,3.117,1083,3.117,1084,3.117,1085,3.117,1086,3.117,1087,3.117,1088,4.274,1089,4.274,1090,4.274,1091,3.117,1092,3.117,1093,3.117,1094,3.117,1095,3.117,1096,3.117]],["title/interfaces/User.html",[30,0.397,83,1.29]],["body/interfaces/User.html",[3,0.401,4,0.352,8,0.352,28,0.033,30,0.589,38,0.401,81,0.023,82,0.023,83,1.471,84,2.117,86,2.354,87,3.405,88,3.062,89,2.651,91,2.354,93,1.802,96,3.049,97,0.259,98,0.458,100,2.682,101,1.528,104,2.213,105,0.512,108,3.063,109,2.941,113,3.833,114,3.45,117,3.697,192,3.063,224,1.957,298,3.243,300,2.941,303,3.243,304,3.243,306,3.243,357,2.755,802,3.07,1010,3.45,1013,3.45,1017,3.967,1097,3.049,1098,3.652,1099,4.67,1100,4.67,1101,4.752,1102,4.752,1103,4.752,1104,4.752,1105,4.752,1106,4.752,1107,4.752,1108,4.752,1109,4.752,1110,4.752,1111,4.752]],["title/components/UserManagementComponent.html",[0,0.082,20,0.718]],["body/components/UserManagementComponent.html",[0,0.113,1,0.588,2,0.925,3,0.288,4,0.253,5,0.698,6,0.698,7,0.698,8,0.253,11,1.52,12,0.698,13,1.645,14,1.645,15,0.698,16,1.182,17,1.007,18,0.709,19,1.007,20,1.09,21,0.588,22,0.588,23,1.007,24,2.747,25,1.007,26,2.747,27,0.794,28,0.033,29,0.404,30,0.744,31,3.781,33,0.644,35,1.086,38,0.416,39,0.446,47,2.819,48,0.698,49,1.007,50,1.007,51,0.698,52,1.189,53,0.698,54,0.55,55,1.007,56,0.588,57,0.698,58,0.588,59,0.698,60,0.588,61,0.446,62,1.007,63,0.588,64,0.698,65,0.588,66,0.698,67,0.588,68,0.698,69,0.588,70,0.698,71,0.588,72,0.698,73,0.588,74,0.698,75,0.698,76,0.588,77,0.641,78,0.698,79,0.698,80,0.698,81,0.019,82,0.019,93,1.658,95,2.747,97,0.186,98,0.365,105,0.37,109,2.824,116,1.378,122,2.574,123,3.224,124,1.515,128,0.777,129,1.658,130,3.135,131,2.439,132,0.698,133,1.257,134,1.429,135,1.082,137,0.491,138,0.491,140,0.709,141,1.086,143,2.819,152,0.823,153,1.52,154,1.69,155,2.747,156,2.747,157,2.439,158,1.378,159,0.971,160,1.257,162,2.134,163,2.863,166,1.687,174,1.69,175,1.69,176,2.747,177,0.894,178,2.747,179,1.903,180,1.903,182,0.644,183,1.903,188,3.463,189,3.463,191,3.53,192,3.135,193,3.53,194,3.53,201,0.588,300,2.334,303,2.819,304,3.4,306,2.819,356,3.53,500,3.53,768,1.52,788,1.903,802,1.814,804,2.747,945,2.189,947,2.189,950,2.189,957,2.863,958,3.159,959,3.159,961,2.189,987,2.189,999,4.059,1000,4.059,1001,4.059,1002,4.059,1013,3.53,1014,3.159,1112,4.258,1113,4.441,1114,4.441,1115,3.785,1116,2.622,1117,2.622,1118,2.622,1119,2.622,1120,2.622,1121,2.622,1122,2.622,1123,2.622,1124,2.622,1125,2.622,1126,2.622,1127,2.622,1128,2.622,1129,2.622,1130,2.622,1131,2.622,1132,2.622,1133,2.622,1134,2.622,1135,2.622,1136,2.622,1137,4.863,1138,2.622,1139,4.441]],["title/injectables/UserService.html",[211,1.092,283,1.857]],["body/injectables/UserService.html",[3,0.334,4,0.293,8,0.293,18,1.082,27,0.648,28,0.033,29,0.469,30,0.778,38,0.334,39,0.518,54,0.597,81,0.021,82,0.021,97,0.298,98,0.405,100,2.491,104,2.19,105,0.433,128,0.863,135,1.056,137,0.902,138,0.902,140,1.021,141,1.028,166,1.771,177,1.434,182,0.518,201,0.682,211,1.434,213,1.599,224,1.925,225,3.349,231,3.052,236,1.764,237,1.599,239,3.052,241,2.209,242,3.497,243,1.038,252,1.694,283,2.437,298,3.574,300,3.182,303,3.415,304,3.415,306,3.415,318,2.54,341,1.335,1072,2.54,1099,4.338,1100,4.338,1140,2.54,1141,4.817,1142,5.196,1143,4.204,1144,5.196,1145,4.204,1146,4.204,1147,3.043,1148,4.204,1149,3.043,1150,3.043,1151,4.204,1152,3.043,1153,4.204,1154,3.043,1155,4.204,1156,5.64,1157,3.51,1158,4.204,1159,4.204,1160,4.204,1161,5.196,1162,4.204,1163,4.204,1164,3.043,1165,3.043,1166,5.196,1167,3.043,1168,3.043,1169,3.043,1170,3.043,1171,3.043,1172,3.043,1173,3.043,1174,3.043,1175,3.043,1176,3.043,1177,3.043,1178,3.043,1179,3.043,1180,3.043,1181,3.043,1182,3.043,1183,3.043,1184,3.043,1185,3.043,1186,3.043]],["title/coverage.html",[1187,3.635]],["body/coverage.html",[0,0.162,1,0.779,8,0.335,9,2.901,10,2.901,11,3.181,20,0.779,21,0.779,22,0.779,28,0.033,30,0.431,31,2.965,33,0.592,34,2.523,36,2.523,56,0.779,58,0.779,60,0.779,61,0.592,63,0.779,65,0.779,67,0.779,69,0.779,71,0.779,73,0.779,76,0.779,81,0.023,82,0.023,83,2.211,85,2.901,105,0.29,118,3.537,119,3.324,120,3.743,134,0.925,162,1.525,164,2.523,165,2.523,174,3.781,211,1.947,212,2.24,214,2.901,243,2.237,255,2.901,264,2.901,283,2.015,284,2.015,312,1.4,353,2.901,387,2.015,388,2.901,644,2.901,744,2.901,745,2.901,746,3.339,781,2.901,807,2.901,837,3.324,838,2.24,839,2.901,862,2.901,863,2.901,912,2.901,933,3.984,934,3.984,935,3.984,957,2.965,962,2.523,1015,2.901,1016,2.901,1027,2.901,1028,2.901,1029,2.901,1045,2.901,1046,2.901,1097,2.901,1112,3.339,1140,2.901,1187,2.901,1188,3.476,1189,3.476,1190,3.476,1191,6.074,1192,5.983,1193,4.6,1194,3.476,1195,2.901,1196,4.6,1197,2.901,1198,2.901,1199,2.901,1200,2.901,1201,5.708,1202,4.6,1203,3.476,1204,3.476,1205,3.476,1206,5.708,1207,3.476,1208,2.901,1209,3.476,1210,3.476,1211,3.476]],["title/dependencies.html",[1212,1.948,1213,3.212]],["body/dependencies.html",[28,0.033,29,0.733,81,0.028,82,0.028,152,1.496,158,2.503,262,1.918,319,3.975,1213,3.975,1214,4.762,1215,6.455,1216,4.762,1217,5.602,1218,5.602,1219,4.762,1220,4.762,1221,4.762,1222,4.762,1223,4.762,1224,4.762,1225,4.762,1226,4.762]],["title/miscellaneous/enumerations.html",[1227,1.41,1228,3.212]],["body/miscellaneous/enumerations.html",[28,0.032,81,0.028,82,0.028,97,0.345,182,1.072,308,3.288,1227,2.558,1228,4.062,1229,4.866,1230,5.673,1231,4.866,1232,5.673,1233,5.673,1234,5.673,1235,5.673,1236,5.673]],["title/miscellaneous/functions.html",[1227,1.41,1237,3.212]],["body/miscellaneous/functions.html",[11,3.132,28,0.032,31,2.889,54,0.555,81,0.027,82,0.027,97,0.318,104,2.054,105,0.374,118,2.889,119,2.889,120,4.211,137,0.839,138,0.839,140,1.172,157,4.036,164,4.211,165,4.211,933,3.254,934,3.254,935,4.371,957,4.036,962,4.211,993,3.742,994,4.511,1112,3.254,1208,4.511,1227,2.356,1237,3.742,1238,5.403,1239,5.801,1240,4.483,1241,4.483]],["title/index.html",[97,0.19,1242,2.683,1243,2.683]],["body/index.html",[0,0.144,4,0.409,28,0.026,54,0.526,81,0.026,82,0.026,162,1.865,227,3.547,260,3.547,475,3.547,506,3.547,540,5.16,1157,3.547,1212,3.084,1244,5.23,1245,4.249,1246,5.666,1247,5.666,1248,3.547,1249,4.249,1250,4.249,1251,5.23,1252,6.071,1253,6.263,1254,4.249,1255,4.249,1256,4.249,1257,4.249,1258,4.249,1259,4.249,1260,4.249,1261,4.249,1262,4.249,1263,4.249,1264,4.249,1265,5.666,1266,5.666,1267,4.249,1268,5.913,1269,4.249,1270,4.249,1271,4.249,1272,4.249,1273,5.23,1274,5.23,1275,5.913,1276,4.249,1277,5.23,1278,5.23,1279,4.249,1280,4.249,1281,4.249,1282,4.249,1283,5.23,1284,4.249,1285,4.249,1286,4.249,1287,4.249,1288,5.666,1289,4.249,1290,4.249,1291,4.249,1292,3.084,1293,4.249,1294,4.249]],["title/modules.html",[1295,3.635]],["body/modules.html",[28,0.029,81,0.029,82,0.029,1295,4.302]],["title/overview.html",[1292,3.161]],["body/overview.html",[2,1.244,28,0.029,46,3.694,47,2.95,81,0.029,82,0.029,84,2.95,213,2.675,625,4.248,1292,3.694]],["title/properties.html",[98,0.371,1212,1.948]],["body/properties.html",[28,0.03,81,0.029,82,0.029,98,0.493,1248,4.275,1296,5.121]],["title/miscellaneous/variables.html",[1227,1.41,1297,3.212]],["body/miscellaneous/variables.html",[18,1.015,28,0.033,81,0.027,82,0.027,88,2.613,93,1.537,97,0.32,105,0.452,114,3.272,116,2.369,134,1.199,166,1.703,177,1.849,182,0.923,201,1.216,252,1.816,282,2.161,357,2.613,358,3.272,754,3.763,802,2.161,1195,3.763,1197,4.526,1198,3.763,1199,4.526,1200,4.526,1227,2.369,1297,3.763,1298,4.508,1299,4.508,1300,4.508,1301,4.508,1302,4.508,1303,4.508,1304,4.508,1305,5.421,1306,4.508,1307,4.508,1308,4.508,1309,4.508,1310,4.508,1311,4.508,1312,4.508,1313,4.508,1314,4.508,1315,4.508]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":243,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1296,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":225,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":493,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":526,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":586,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":598,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":479,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":228,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["14/14",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":593,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":546,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":514,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":499,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":563,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":572,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":525,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18.0.0",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1249,"title":{},"body":{"index.html":{}}}],["19",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":411,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":231,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["20",{"_index":444,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":592,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["222",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":443,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":468,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":416,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":430,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":413,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"overview.html":{}}}],["4000",{"_index":924,"title":{},"body":{"components/PaymentComponent.html":{}}}],["5",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":500,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["6",{"_index":482,"title":{},"body":{"injectables/CardItemService.html":{}}}],["67",{"_index":605,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":480,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":545,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":542,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["9",{"_index":501,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["abierto",{"_index":1232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":423,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abstractcontrol",{"_index":155,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accessors",{"_index":131,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1109,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":752,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizado",{"_index":1136,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["actualizar",{"_index":1139,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["add",{"_index":506,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["addcarditem",{"_index":390,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additem",{"_index":750,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":755,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1053,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":568,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":566,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":33,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":210,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":207,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":208,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":209,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":56,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":127,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1018,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":206,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":21,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":212,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1156,"title":{},"body":{"injectables/UserService.html":{}}}],["administrar",{"_index":44,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agregada",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":770,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CarditemListComponent.html":{}}}],["agrego",{"_index":378,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":116,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{},"components/PaymentComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('dirección",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('error",{"_index":1138,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":874,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('no",{"_index":772,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":768,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":983,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["angular",{"_index":1246,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":152,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["another",{"_index":536,"title":{},"body":{"injectables/CardItemService.html":{}}}],["apellido",{"_index":1013,"title":{},"body":{"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1258,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":833,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":420,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1269,"title":{},"body":{"index.html":{}}}],["attach",{"_index":490,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":488,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":452,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":134,"title":{"injectables/AuthService.html":{}},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1259,"title":{},"body":{"index.html":{}}}],["av",{"_index":226,"title":{},"body":{"injectables/AddressService.html":{}}}],["base",{"_index":427,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":471,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":448,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":461,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beast",{"_index":571,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":424,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":604,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":441,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":515,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":577,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":551,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boolean",{"_index":224,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bottom",{"_index":554,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1268,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":834,"title":{},"body":{"components/NavbarComponent.html":{}}}],["buy",{"_index":1034,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calctotal",{"_index":844,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":848,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":861,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":910,"title":{},"body":{"components/OrderListComponent.html":{}}}],["campos",{"_index":985,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":576,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":858,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capabilities",{"_index":1286,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1002,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":456,"title":{},"body":{"injectables/CardItemService.html":{}}}],["card.cardname",{"_index":860,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.id",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":856,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":857,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["cardcopy",{"_index":1091,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1092,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardid",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1081,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":61,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":776,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1026,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":778,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":777,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":389,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":60,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":387,"title":{"injectables/CardItemService.html":{}},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":850,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":855,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardname",{"_index":359,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":360,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":464,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":361,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":362,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1023,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":771,"title":{},"body":{"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["carro",{"_index":780,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["cart",{"_index":1030,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1032,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1031,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1029,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:18",{"_index":1038,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:19",{"_index":1039,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:20",{"_index":1035,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:27",{"_index":1037,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:41",{"_index":1036,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1016,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1046,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:12",{"_index":1052,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:16",{"_index":1057,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:30",{"_index":1061,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:39",{"_index":1055,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:84",{"_index":1059,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1028,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":371,"title":{},"body":{"interfaces/CardItem.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["cartas",{"_index":354,"title":{},"body":{"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cartitem.service",{"_index":1063,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":879,"title":{},"body":{"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":486,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":355,"title":{},"body":{"interfaces/CardItem.html":{}}}],["categoria",{"_index":761,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":403,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":384,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cerrado",{"_index":825,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":836,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1261,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1290,"title":{},"body":{"index.html":{}}}],["checkstock",{"_index":391,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":396,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1282,"title":{},"body":{"index.html":{}}}],["choose",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1247,"title":{},"body":{"index.html":{}}}],["code",{"_index":1263,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":1012,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":521,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":583,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1283,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":124,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":99,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":885,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["comprar",{"_index":1022,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":828,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["comprobar",{"_index":984,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":106,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["con",{"_index":974,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["condition",{"_index":363,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmar",{"_index":1009,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":940,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["console.log",{"_index":997,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["console.log('id",{"_index":1186,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(authservice.isloggedin",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(selectedcarditem.quantity",{"_index":1086,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1087,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(this.registrationform.value",{"_index":976,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["consolelogfortesting",{"_index":1142,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":133,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1051,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":160,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":751,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":892,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":941,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contener",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contiene",{"_index":1021,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["contrasena",{"_index":1107,"title":{},"body":{"interfaces/User.html":{}}}],["contraseña",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1011,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["control.\\ncrew",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":491,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":489,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":535,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":505,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.get(field1)?.value",{"_index":995,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control.get(field2)?.value",{"_index":996,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control.value",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["controls",{"_index":433,"title":{},"body":{"injectables/CardItemService.html":{}}}],["copy",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":590,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":870,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":203,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":758,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":852,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1123,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":159,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":759,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":901,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":955,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["correcto",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{}}}],["correo",{"_index":1101,"title":{},"body":{"interfaces/User.html":{}}}],["corresponde",{"_index":115,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":381,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":485,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":511,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1187,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":121,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":202,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":126,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":125,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":120,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["create.component.ts:20",{"_index":136,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:24",{"_index":139,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:44",{"_index":145,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:48",{"_index":147,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:52",{"_index":149,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:56",{"_index":151,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:60",{"_index":142,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":119,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createaddress",{"_index":215,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":218,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":364,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1048,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1056,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1143,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1148,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":421,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":534,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":504,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creo",{"_index":1025,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":832,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":524,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":407,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":779,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1113,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d)(?=.*[a",{"_index":988,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["d+$/g.test(control.value",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["damage",{"_index":579,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1137,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["de",{"_index":93,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1144,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":594,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":582,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":580,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":442,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":574,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":999,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":201,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1017,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":135,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definido",{"_index":1024,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definir",{"_index":89,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":117,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["dependencies",{"_index":1213,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":86,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["detail",{"_index":840,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":869,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":842,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":841,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":839,"title":{},"body":{"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:16",{"_index":847,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:17",{"_index":846,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":849,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail/order",{"_index":838,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":911,"title":{},"body":{"components/OrderListComponent.html":{}}}],["dev",{"_index":1255,"title":{},"body":{"index.html":{}}}],["development",{"_index":1250,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":531,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direccion",{"_index":107,"title":{},"body":{"interfaces/Address.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["dirección",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1267,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1272,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":1110,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1271,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["double",{"_index":494,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":455,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":560,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dynamic",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1280,"title":{},"body":{"index.html":{}}}],["each",{"_index":487,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":372,"title":{},"body":{"interfaces/CardItem.html":{}}}],["el",{"_index":357,"title":{},"body":{"interfaces/CardItem.html":{},"components/LoginComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":408,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":445,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":410,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":1102,"title":{},"body":{"interfaces/User.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":426,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":588,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":478,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":385,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{}}}],["encantamientos",{"_index":831,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":527,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encuentre",{"_index":1105,"title":{},"body":{"interfaces/User.html":{}}}],["end",{"_index":540,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":447,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entre",{"_index":1001,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":94,"title":{},"body":{"interfaces/Address.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1228,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":557,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":481,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":877,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["escaped.\\nwhenever",{"_index":451,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["estado",{"_index":376,"title":{},"body":{"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":91,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":431,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1277,"title":{},"body":{"index.html":{}}}],["exile",{"_index":462,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exito",{"_index":975,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["fabled",{"_index":466,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["field1",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":994,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["fiery",{"_index":587,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1262,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":812,"title":{},"body":{"components/NavbarComponent.html":{}}}],["finalizada",{"_index":882,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":864,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":866,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":865,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":863,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:19",{"_index":867,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:26",{"_index":868,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":862,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1157,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":463,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":483,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying",{"_index":610,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":516,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":417,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forbidden",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["forces",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":936,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":75,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":938,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":937,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":935,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form.component.ts:18",{"_index":942,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:22",{"_index":943,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:63",{"_index":946,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:67",{"_index":948,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:71",{"_index":949,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:75",{"_index":951,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:79",{"_index":952,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:83",{"_index":954,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:87",{"_index":944,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":934,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formato",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formcontrol",{"_index":153,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1129,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1127,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1128,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":143,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":986,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["four",{"_index":474,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":232,"title":{},"body":{"injectables/AddressService.html":{}}}],["function",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1237,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1287,"title":{},"body":{"index.html":{}}}],["g.test(control.value",{"_index":991,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["gain",{"_index":453,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":537,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":559,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1265,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1245,"title":{},"body":{"index.html":{}}}],["generic",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":216,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":220,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1049,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1058,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":392,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":398,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":393,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":400,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardslist",{"_index":394,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcommune",{"_index":150,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getconfirmpassword",{"_index":953,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":950,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":945,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getlastname",{"_index":947,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getname",{"_index":144,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":146,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getregion",{"_index":148,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":492,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getting",{"_index":1242,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1145,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1151,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":446,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":512,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1289,"title":{},"body":{"index.html":{}}}],["god",{"_index":528,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":513,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyard",{"_index":465,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":497,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":556,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":503,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":425,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":562,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g}{g",{"_index":507,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":769,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["habilidad",{"_index":373,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1106,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":883,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1135,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":459,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1033,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1079,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":575,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":773,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["heliod",{"_index":522,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1288,"title":{},"body":{"index.html":{}}}],["henge",{"_index":498,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":829,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1257,"title":{},"body":{"index.html":{}}}],["human",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":100,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identificador",{"_index":108,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["if(cardindex",{"_index":1085,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":854,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1090,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1072,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":767,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["if(search",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1082,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":872,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["if(shoppingcart.status",{"_index":878,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1134,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1040,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.userlist.find(user",{"_index":1165,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":601,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":602,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":561,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":365,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":380,"title":{},"body":{"interfaces/CardItem.html":{}}}],["implements",{"_index":1285,"title":{},"body":{"index.html":{}}}],["import",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["incorretos",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":529,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":97,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicador",{"_index":1103,"title":{},"body":{"interfaces/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":92,"title":{},"body":{"interfaces/Address.html":{}}}],["ingresar",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ingreso",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":211,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":213,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":851,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":845,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":597,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":83,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1099,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":533,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":916,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":888,"title":{},"body":{"components/OrderListComponent.html":{}}}],["jegantha",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["juego",{"_index":374,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":382,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1279,"title":{},"body":{"index.html":{}}}],["khm",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":90,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["lair",{"_index":603,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":458,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":476,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":1010,"title":{},"body":{"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["lastname",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":414,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":434,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":578,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letras",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["library",{"_index":470,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":454,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":508,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":538,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":747,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":37,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":749,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":748,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":746,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":753,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:21",{"_index":899,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:22",{"_index":900,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:23",{"_index":893,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:27",{"_index":757,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:30",{"_index":895,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:36",{"_index":897,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:39",{"_index":756,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:41",{"_index":894,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":745,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":1020,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["lo",{"_index":1003,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["loading",{"_index":929,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":63,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logueado",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["long",{"_index":530,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":549,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":95,"title":{},"body":{"interfaces/Address.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["loses",{"_index":422,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":589,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1163,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1159,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":520,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["management",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["management.component.ts:19",{"_index":199,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:20",{"_index":1118,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:21",{"_index":1115,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:23",{"_index":200,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:25",{"_index":1116,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:47",{"_index":1119,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:51",{"_index":1120,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:55",{"_index":1121,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:59",{"_index":1122,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:63",{"_index":1117,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":31,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manavalue",{"_index":366,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["many",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":827,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":241,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayúscula",{"_index":1006,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menos",{"_index":1004,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["merfolk",{"_index":547,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":128,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":229,"title":{},"body":{"injectables/AddressService.html":{}}}],["minúscula",{"_index":1007,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1227,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/address.model",{"_index":235,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modules",{"_index":1295,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monstrous",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":475,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["much",{"_index":584,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":437,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":808,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":811,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":810,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":65,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1256,"title":{},"body":{"index.html":{}}}],["need",{"_index":1284,"title":{},"body":{"index.html":{}}}],["new",{"_index":162,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":238,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":249,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":244,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":246,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":247,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":248,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":245,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":239,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1064,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1066,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1068,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1067,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1167,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1174,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1171,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1169,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1176,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1172,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1173,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1175,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1170,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1253,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":123,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":129,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":412,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":109,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["non",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":607,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":509,"title":{},"body":{"injectables/CardItemService.html":{}}}],["notsamepassword",{"_index":998,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["nueva",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["null",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["number",{"_index":101,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":112,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":110,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{}}}],["nymph",{"_index":564,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["o",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["objeto",{"_index":87,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["obligatorio",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ocurrido",{"_index":875,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":405,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":519,"title":{},"body":{"injectables/CardItemService.html":{}}}],["only_letters",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["onlyletters",{"_index":987,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onlyletters_validator",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":957,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["onlynumbersvalidator",{"_index":164,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":813,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":130,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":460,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":432,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":138,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":544,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":881,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":887,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.cardlist.length",{"_index":909,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.id",{"_index":907,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":908,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":67,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":69,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":889,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":22,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":884,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1291,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1292,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1212,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1294,"title":{},"body":{"index.html":{}}}],["pago",{"_index":928,"title":{},"body":{"components/PaymentComponent.html":{}}}],["para",{"_index":88,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params.get('categoria",{"_index":762,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":763,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["passage",{"_index":467,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":992,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["passwordvalidator",{"_index":962,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":913,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":72,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":915,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":914,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":71,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1019,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":595,"title":{},"body":{"injectables/CardItemService.html":{}}}],["petty",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalker",{"_index":415,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":830,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1281,"title":{},"body":{"index.html":{}}}],["play",{"_index":565,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":585,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["portal",{"_index":932,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":428,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":383,"title":{},"body":{"interfaces/CardItem.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":581,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":367,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["private",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":927,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1244,"title":{},"body":{"index.html":{}}}],["properties",{"_index":98,"title":{"properties.html":{}},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":236,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":457,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":368,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":113,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["questing",{"_index":570,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1162,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":555,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":122,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":926,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizado",{"_index":930,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizar",{"_index":1111,"title":{},"body":{"interfaces/User.html":{}}}],["redirect",{"_index":917,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigiendo",{"_index":931,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1293,"title":{},"body":{"index.html":{}}}],["region",{"_index":102,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registrado",{"_index":973,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":835,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":939,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":73,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["región",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1260,"title":{},"body":{"index.html":{}}}],["representar",{"_index":1104,"title":{},"body":{"interfaces/User.html":{}}}],["rest",{"_index":553,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["result.filter(carditem",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["results",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":140,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":1108,"title":{},"body":{"interfaces/User.html":{}}}],["role",{"_index":1100,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":237,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":754,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":809,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1252,"title":{},"body":{"index.html":{}}}],["running",{"_index":1273,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":449,"title":{},"body":{"injectables/CardItemService.html":{}}}],["same",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1208,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":965,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":993,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["santiago",{"_index":230,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1264,"title":{},"body":{"index.html":{}}}],["scute",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":114,"title":{},"body":{"interfaces/Address.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":401,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1158,"title":{},"body":{"injectables/UserService.html":{}}}],["selected",{"_index":898,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedcarditem",{"_index":1077,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1088,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":890,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1076,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1094,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1084,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1083,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1093,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1089,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":891,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":896,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1254,"title":{},"body":{"index.html":{}}}],["server",{"_index":1251,"title":{},"body":{"index.html":{}}}],["sesión",{"_index":826,"title":{},"body":{"components/NavbarComponent.html":{}}}],["set",{"_index":591,"title":{},"body":{"injectables/CardItemService.html":{}}}],["setcode",{"_index":369,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setname",{"_index":370,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["settimeout",{"_index":921,"title":{},"body":{"components/PaymentComponent.html":{}}}],["shark",{"_index":599,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1096,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":312,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1074,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":873,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1075,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":76,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1054,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1047,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":284,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shuffle",{"_index":473,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sigla",{"_index":386,"title":{},"body":{"interfaces/CardItem.html":{}}}],["sistema",{"_index":1098,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":358,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["solo",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":484,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../address",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../registration",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":118,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/carditem",{"_index":744,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":85,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":353,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1015,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1097,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":214,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:10",{"_index":234,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:29",{"_index":219,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":223,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:49",{"_index":221,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:16",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:17",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:18",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:28",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:57",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:61",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:67",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:71",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:80",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:87",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:91",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:95",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":388,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:10",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:328",{"_index":404,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:332",{"_index":402,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:354",{"_index":395,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:358",{"_index":399,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:362",{"_index":397,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1045,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:10",{"_index":1164,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:33",{"_index":1149,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:59",{"_index":1152,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:63",{"_index":1154,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:72",{"_index":1150,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:76",{"_index":1147,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/login/login.component.ts",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":807,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:20",{"_index":818,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:21",{"_index":814,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":816,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:34",{"_index":817,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:41",{"_index":815,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":837,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":912,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:17",{"_index":918,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":919,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":920,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":933,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shopping",{"_index":1027,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1112,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1243,"title":{"index.html":{}},"body":{}}],["starting",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":775,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["stored",{"_index":1270,"title":{},"body":{"index.html":{}}}],["strike",{"_index":495,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":104,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["subtotal",{"_index":859,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":774,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sun",{"_index":523,"title":{},"body":{"injectables/CardItemService.html":{}}}],["swarm",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1008,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":469,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":472,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":419,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tener",{"_index":1000,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["test",{"_index":1276,"title":{},"body":{"index.html":{}}}],["testing",{"_index":227,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1275,"title":{},"body":{"index.html":{}}}],["thassa\\'s",{"_index":543,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":439,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":440,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":406,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":161,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":250,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":240,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":766,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":871,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":204,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getuser",{"_index":1125,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":903,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":819,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":824,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":880,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.carditemlist",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1078,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":764,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":765,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.consolelogfortesting",{"_index":1178,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createshoppingcar(userid",{"_index":1080,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":853,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1041,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1124,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1130,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":821,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":822,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.hasitems",{"_index":1042,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":820,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":922,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":902,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":904,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.redirect",{"_index":923,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":956,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":971,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":969,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":982,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":966,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":979,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":967,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":980,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":970,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":981,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":968,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":978,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":972,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":760,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":823,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":925,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1044,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedorder",{"_index":906,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1095,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1070,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1069,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1065,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1073,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":905,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.total",{"_index":1043,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1126,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1133,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1131,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1132,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":205,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1179,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1181,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.foreach(user",{"_index":1185,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1177,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1168,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1184,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser",{"_index":977,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":409,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["tipo",{"_index":375,"title":{},"body":{"interfaces/CardItem.html":{}}}],["titan",{"_index":436,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":609,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":418,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":517,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":518,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":550,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":843,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":429,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":496,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":596,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":541,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":567,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":105,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":569,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":600,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":876,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["una",{"_index":1005,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["undefined",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":510,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1274,"title":{},"body":{"index.html":{}}}],["unless",{"_index":450,"title":{},"body":{"injectables/CardItemService.html":{}}}],["untap",{"_index":477,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":539,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":552,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":217,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":222,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1062,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1071,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1155,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1182,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1183,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1114,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1050,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1060,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1146,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1153,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":379,"title":{},"body":{"interfaces/CardItem.html":{}}}],["uro",{"_index":435,"title":{},"body":{"injectables/CardItemService.html":{}}}],["use",{"_index":1266,"title":{},"body":{"index.html":{}}}],["user",{"_index":30,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":242,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1180,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1166,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1160,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":198,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":103,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":20,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":283,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uso",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usuario",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":96,"title":{},"body":{"interfaces/Address.html":{},"interfaces/User.html":{}}}],["ususario",{"_index":377,"title":{},"body":{"interfaces/CardItem.html":{}}}],["validar",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":156,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":157,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":154,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":961,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":964,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":960,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":959,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":958,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":963,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":163,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":111,"title":{},"body":{"interfaces/Address.html":{},"interfaces/ShoppingCart.html":{}}}],["valparaiso",{"_index":233,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1297,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehicle",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":886,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["version",{"_index":1248,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1278,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":573,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":141,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["vorinclex",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1014,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":606,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":532,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":558,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":548,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":438,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":502,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":608,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x}{1}{u}\\nwhen",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":356,"title":{},"body":{"interfaces/CardItem.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["z])((?=.*\\w)|(?=.*_",{"_index":990,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["z])(?=.*[a",{"_index":989,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["z]*$)/g.test(control.value",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["za",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["zendikar",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\n\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        4\n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                    4        5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\n\n\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  addressForm!: FormGroup;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLetters_Validator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLetters_Validator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\nexport function onlyLetters_Validator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {only_letters: {value: control.value}} : null;\n  };\n}\n\nexport function onlyNumbersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/^\\d+$/g.test(control.value);\n    return forbidden ? {onlyNumbers: {value: control.value}} : null;\n  };\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n\n  userAddressList: Address[] = [] as Address[];\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private logedUser: User = {} as User;\n  private loggedIn = new BehaviorSubject(false);\n  private userAddress = new BehaviorSubject([] as Address[]);\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === 0 || this.logedUser.UserName === ''){\n        this.loggedIn.next(false);\n        return false;\n    }\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  getUser(){\n    return this.logedUser;\n  }\n\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardItem\n                            \n                            \n                                checkStock\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardItem\n                        \n                    \n                \n            \n            \n                \naddCardItem()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:354\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:362\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:358\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:332\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:328\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CardItem[]\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        }\n    ]\n\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    addCardItem(){\n        \n    }\n\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n\n  carditemList: CardItem[] = [];\n\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n\n  loginForm!: FormGroup;\n\n  constructor(private authService: AuthService,private router: Router){}\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          Ingresar\n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                            Ingresar                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  filterForm!: FormGroup;\n  isLoggedIn: boolean = false;\n\n  constructor(private router: Router, private authService: AuthService){};\n\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  @Input() currentShoppingCart: ShoppingCart;\n  total: number = 0;\n\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }else{\n        if(shoppingCart.Status === CartStatus.Abierto){\n          this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n        }\n        this.currentShoppingCart = shoppingCart;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n\n  orderList: ShoppingCart[] = [];\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  isSelected: boolean = false;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{order.CardList.length}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{order.CardList.length}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  isPaymentSuccess: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:75\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:83\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\n\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  registrationForm!: FormGroup;\n\n  constructor(private userService: UserService){}\n\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      alert('Se ha registrado con exito');\n      console.log(this.registrationForm.value);\n      this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\nexport function onlyLettersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {onlyLetters: {value: control.value}} : null;\n  };\n}\n\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])((?=.*\\W)|(?=.*_))^[^ ]+$/g.test(control.value);\n    return forbidden ? {passwordFromat: {value: control.value}} : null;\n  };\n}\n\nexport function samePasswordValidator(field1: string, field2: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const password = control.get(field1)?.value;\n    const confirmPassword = control.get(field2)?.value;\n    const forbidden = password && confirmPassword && password !== confirmPassword;\n    console.log( password + ' || ' + confirmPassword);\n    return forbidden ? {notSamePassword: {value: confirmPassword}} : null;\n  };\n}\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  total: number = 0;\n  hasItems: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  buy(){\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    shoppingCartList: ShoppingCart[] = [];\n\n    constructor(private cardItemService: CardItemService){}\n\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            console.log(selectedCardItem.Quantity)\n            console.log(selectedShoppingCart.CardList[cardIndex].Quantity)\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:59\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n\n  updateForm!: FormGroup;\n  currentUser: User = {} as User;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\nexport function onlyLettersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {onlyLetters: {value: control.value}} : null;\n  };\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                consoleLogForTesting\n                            \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        consoleLogForTesting\n                        \n                    \n                \n            \n            \n                \nconsoleLogForTesting()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n    \n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) === undefined){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        this.consoleLogForTesting();\n\n        return true;\n    }\n\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    deactivateUser(){\n\n    }\n\n    consoleLogForTesting(){\n        this.userList.forEach(user => {\n            console.log('id: '+user.id+' userName: '+user.UserName);\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            function\n            onlyLetters_Validator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            function\n            onlyNumbersValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            onlyLettersValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            samePasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            function\n            onlyLettersValidator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLetters_Validator   (src/.../address-create.component.ts)\n                        \n                        \n                            onlyLettersValidator   (src/.../registration-form.component.ts)\n                        \n                        \n                            onlyLettersValidator   (src/.../user-management.component.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../address-create.component.ts)\n                        \n                        \n                            passwordValidator   (src/.../registration-form.component.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../registration-form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/address-create/address-create.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLetters_Validator\n                        \n                    \n                \n            \n            \n                \nonlyLetters_Validator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/registration-form/registration-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/user-management/user-management.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  console.log(authService.isLoggedIn())\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
