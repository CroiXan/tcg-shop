var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.013,1,0.663]],["body/components/AccountManagementComponent.html",[0,0.021,1,1.135,2,1.021,3,0.309,4,0.272,5,0.826,6,0.826,7,0.826,8,0.272,9,4.848,10,4.848,11,2.391,12,0.462,13,1.316,14,3.551,15,0.626,16,4.8,17,0.492,18,4.047,19,2.886,20,0.826,21,1.564,22,1.564,23,1.438,24,1.235,25,1.099,26,0.746,27,1.099,28,1.135,29,1.135,30,1.135,31,1.135,32,1.424,33,1.099,34,3.551,35,1.099,36,3.551,37,0.168,38,0.315,39,5.394,40,0.746,41,1.518,42,1.135,43,1.453,44,1.438,45,0.77,46,4.8,47,0.81,48,1.676,49,1.414,50,1.746,51,0.515,52,0.028,53,0.578,54,0.269,55,0.515,56,3.042,57,1.563,58,4.047,59,1.316,60,3.181,61,3.811,62,0.947,63,1.628,64,2.429,65,0.515,66,0.877,67,1.359,68,0.659,69,0.609,70,0.819,71,0.47,72,0.569,73,2.669,74,4.8,75,0.839,76,2.669,77,1.223,78,2.669,79,3.608,80,1.065,81,2.669,82,3.608,83,0.887,84,1.096,85,0.309,86,0.515,87,0.609,88,0.952,89,3.608,90,3.608,91,4.047,92,4.848,93,5.749,94,3.181,95,5.749,96,4.8,97,2.886,98,0.826,99,1.099,100,1.099,101,0.826,102,1.223,103,0.826,104,1.099,105,0.712,106,0.826,107,0.712,108,0.826,109,0.712,110,1.099,111,0.712,112,0.47,113,1.099,114,0.826,115,0.712,116,0.826,117,0.712,118,0.826,119,0.712,120,0.712,121,0.826,122,0.712,123,0.877,124,0.826,125,0.712,126,0.826,127,0.712,128,0.826,129,0.712,130,0.826,131,0.826,132,0.712,133,0.768,134,0.826,135,0.826,136,0.826,137,0.019,138,0.019]],["title/interfaces/Address.html",[75,0.522,139,1.259]],["body/interfaces/Address.html",[3,0.388,4,0.341,8,0.341,12,0.388,15,0.724,17,0.516,37,0.211,38,0.364,52,0.028,53,0.671,54,0.366,57,1.807,62,1.095,67,1.906,72,0.658,75,0.863,85,0.388,137,0.022,138,0.022,139,1.696,140,2.489,141,3.816,142,2.585,143,3.349,144,1.27,145,2.721,146,1.962,147,2.721,148,2.116,149,2.721,150,4.146,151,2.631,152,1.943,153,4.33,154,3.44,155,3.336,156,4.016,157,2.234,158,1.685,159,3.336,160,2.594,161,5.548,162,1.571,163,1.807,164,5.548]],["title/components/AddressCreateComponent.html",[0,0.013,105,0.663]],["body/components/AddressCreateComponent.html",[0,0.02,1,0.637,2,0.947,3,0.276,4,0.243,5,0.739,6,0.739,7,0.739,8,0.243,12,0.436,13,1.019,17,0.515,20,0.739,21,1.546,22,1.546,23,0.739,24,0.739,25,1.019,26,0.692,27,1.019,28,0.637,29,0.637,30,0.637,31,0.637,32,1.345,33,1.019,35,1.019,37,0.151,38,0.292,40,0.692,41,1.45,42,1.006,43,1.3,44,1.397,45,0.887,47,0.927,49,1.095,50,1.668,51,0.46,52,0.028,53,0.654,54,0.249,55,0.46,62,0.878,65,0.635,66,0.931,70,0.751,71,0.421,72,0.383,75,0.967,77,1.084,80,0.878,83,0.794,84,0.98,85,0.276,86,0.46,87,0.545,98,0.739,99,1.019,100,1.019,101,0.739,102,1.168,103,0.739,104,1.019,105,1.084,106,0.739,107,0.637,108,0.739,109,0.637,110,1.019,111,0.637,112,0.421,113,1.019,114,0.739,115,0.637,116,0.739,117,0.637,118,0.739,119,0.637,120,0.637,121,0.739,122,0.637,123,0.813,124,0.739,125,0.637,126,0.739,127,0.637,128,0.739,129,0.637,130,0.739,131,0.739,132,0.637,133,0.687,134,0.739,135,0.739,136,0.739,137,0.018,138,0.018,147,2.676,150,3.64,152,1.555,153,3.64,155,3.301,156,3.581,165,4.67,166,4.67,167,2.721,168,2.908,169,5.491,170,3.293,171,3.753,172,2.382,173,3.769,174,4.45,175,4.45,176,5.094,177,2.779,178,2.252,179,4.45,180,2.95,181,1.095,182,3.227,183,1.351,184,3.753,185,3.753,186,3.227,187,3.753,188,2.252,189,2.568,190,3.227,191,3.227,192,3.227,193,3.227,194,3.227,195,3.227,196,3.227,197,3.227,198,2.497,199,1.633,200,2.388,201,2.388,202,2.139,203,1.399,204,3.063,205,2.95,206,1.94,207,1.633,208,3.227,209,1.876,210,2.779,211,1.45,212,3.227,213,3.227,214,3.227,215,3.227,216,3.227,217,3.227,218,3.227,219,3.753,220,5.244,221,2.696,222,3.147,223,4.63,224,3.581,225,3.014,226,3.581,227,3.64,228,3.301,229,3.753,230,2.252]],["title/components/AddressManagementComponent.html",[0,0.013,29,0.663]],["body/components/AddressManagementComponent.html",[0,0.022,1,0.728,2,1.036,3,0.316,4,0.278,5,0.844,6,0.844,7,0.844,8,0.278,11,2.443,12,0.417,13,1.114,15,0.635,17,0.501,20,0.844,21,1.567,22,1.567,23,0.844,24,1.248,25,1.114,26,0.757,27,1.114,28,0.728,29,1.145,30,0.728,31,0.728,32,1.439,33,1.114,34,3.602,35,1.114,36,3.602,37,0.172,38,0.319,40,0.757,41,1.531,42,1.076,43,1.484,44,1.446,45,0.778,47,0.822,49,1.197,50,1.761,51,0.526,52,0.028,53,0.585,54,0.272,55,0.526,62,1.222,63,1.642,65,0.526,66,0.89,68,0.674,69,0.622,70,0.786,71,0.481,72,0.437,75,1.044,76,4.29,77,1.16,80,0.961,83,0.907,84,1.119,85,0.316,86,0.526,87,0.622,94,4.105,98,0.844,99,1.114,100,1.114,101,0.844,102,1.234,103,0.844,104,1.114,105,1.145,106,0.844,107,0.728,108,0.844,109,0.728,110,1.114,111,0.728,112,0.481,113,1.114,114,0.844,115,0.728,116,0.844,117,0.728,118,0.844,119,0.728,120,0.728,121,0.844,122,0.728,123,0.89,124,0.844,125,0.728,126,0.844,127,0.728,128,0.844,129,0.728,130,0.844,131,0.844,132,0.728,133,0.784,134,0.844,135,0.844,136,0.844,137,0.019,138,0.019,155,2.927,165,4.29,166,2.727,180,3.227,181,1.426,207,1.865,220,4.105,223,4.105,228,2.927,231,4.105,232,2.11,233,4.868,234,5.451,235,4.868,236,3.686,237,4.105,238,2.11,239,2.173,240,3.686,241,3.686,242,3.686,243,3.686,244,3.108,245,4.868,246,4.868,247,4.868,248,4.868]],["title/injectables/AddressService.html",[249,1.094,250,2.226]],["body/injectables/AddressService.html",[3,0.28,4,0.247,8,0.247,12,0.496,15,0.78,17,0.523,37,0.153,38,0.294,40,0.698,45,0.788,47,0.758,49,1.105,51,0.732,52,0.028,53,0.699,54,0.309,55,0.732,59,1.369,60,2.977,62,1.09,63,1.814,65,0.826,66,0.598,67,1.793,68,0.598,69,0.552,70,0.586,71,0.426,72,0.388,75,1.005,85,0.28,86,0.467,87,1.034,94,4.135,137,0.018,138,0.018,142,2.224,144,1.264,146,1.947,147,3.32,148,2.796,149,2.7,150,4.195,151,2.512,152,1.904,153,4.286,154,3.522,155,2.7,156,3.92,157,1.809,158,1.364,159,2.7,162,1.564,163,1.462,211,1.354,221,1.947,232,1.947,239,2.241,244,4.881,249,1.462,250,2.977,251,1.655,252,2.757,253,3.289,254,3.323,255,3.787,256,4.491,257,5.522,258,4.491,259,3.27,260,2.408,261,2.977,262,4.491,263,3.787,264,2.7,265,3.787,266,4.491,267,4.491,268,3.27,269,4.491,270,3.323,271,2.07,272,4.491,273,3.27,274,4.491,275,2.7,276,2.7,277,1.142,278,1.947,279,2.273,280,1.809,281,2.977,282,2.977,283,4.491,284,3.48,285,5.522,286,3.787,287,5.522,288,4.491,289,4.491,290,4.086,291,4.491,292,5.522,293,3.27,294,4.491,295,4.491,296,1.683,297,2.757,298,1.798,299,1.655,300,3.27,301,1.226,302,1.966,303,3.27,304,1.966,305,2.42,306,1.142,307,3.27,308,3.27,309,3.27,310,3.27,311,3.27,312,3.27,313,3.27,314,3.27,315,1.226,316,3.27,317,3.27]],["title/components/AppComponent.html",[0,0.013,107,0.663]],["body/components/AppComponent.html",[0,0.023,1,0.834,2,1.131,3,0.362,4,0.319,5,0.968,6,0.968,7,0.968,8,0.319,12,0.456,13,1.217,14,3.935,17,0.461,19,3.671,20,0.968,21,1.586,22,1.586,23,0.968,24,0.968,25,1.217,26,0.827,27,1.217,28,0.834,29,0.834,30,0.834,31,0.834,33,1.217,35,1.217,37,0.197,38,0.349,45,0.603,52,0.028,53,0.57,54,0.237,67,1.197,68,0.773,69,0.714,70,0.759,71,0.551,72,0.501,75,0.827,77,1.238,80,1.05,85,0.362,86,0.603,98,0.968,99,1.217,100,1.217,101,0.968,102,1.299,103,0.968,104,1.217,105,0.834,106,0.968,107,1.205,108,0.968,109,0.834,110,1.217,111,0.834,112,0.551,113,1.217,114,0.968,115,0.834,116,0.968,117,1.205,118,0.968,119,0.834,120,0.834,121,0.968,122,0.834,123,0.972,124,0.968,125,0.834,126,0.968,127,0.834,128,0.968,129,0.834,130,0.968,131,0.968,132,0.834,133,0.899,134,0.968,135,0.968,136,0.968,137,0.021,138,0.021,144,1.217,299,2.691,318,3.564,319,5.819,320,5.318,321,5.318,322,5.819,323,4.484,324,4.227,325,5.318,326,1.284,327,4.227]],["title/injectables/AuthService.html",[44,0.769,249,1.094]],["body/injectables/AuthService.html",[3,0.163,4,0.144,8,0.144,12,0.47,14,2.225,15,0.874,17,0.52,19,2.547,26,0.296,37,0.089,38,0.197,40,0.468,42,0.836,44,0.688,45,0.904,47,0.508,48,1.05,49,1.31,50,1.705,51,0.733,52,0.028,53,0.588,54,0.307,55,0.733,57,1.828,59,1.333,60,1.993,61,2.808,62,1.15,63,1.859,64,2.841,65,0.921,66,0.973,67,1.835,68,0.843,69,0.779,70,0.747,71,0.248,72,0.65,75,0.58,85,0.163,86,0.271,87,1.032,88,1.652,94,3.53,112,0.732,123,0.774,133,0.405,137,0.012,138,0.012,142,1.211,144,1.471,146,1.837,147,1.808,150,2.808,151,1.706,152,1.59,153,3.251,155,1.808,156,3.202,157,1.211,158,1.617,159,1.808,160,1.406,162,1.389,163,1.949,181,1.433,209,1.597,211,1.482,225,1.522,230,2.144,232,1.837,238,2.434,239,1.127,249,0.979,250,3.53,251,0.963,255,2.536,260,2.609,261,2.808,271,2.104,276,1.808,277,1.794,278,2.309,279,2.144,280,2.41,281,1.993,296,1.588,297,1.604,298,1.046,299,0.963,306,1.05,315,0.713,326,0.578,328,1.604,329,3.007,330,3.007,331,2.536,332,2.536,333,2.471,334,3.729,335,3.729,336,3.144,337,3.729,338,2.536,339,4.237,340,4.237,341,4.237,342,4.237,343,4.237,344,4.237,345,3.573,346,2.536,347,3.573,348,3.007,349,4.237,350,3.007,351,3.007,352,1.408,353,1.794,354,2.695,355,3.202,356,3.007,357,1.406,358,1.406,359,1.05,360,2.536,361,3.007,362,2.759,363,1.744,364,1.903,365,2.33,366,2.649,367,2.261,368,2.547,369,3.007,370,3.007,371,1.808,372,2.536,373,1.261,374,2.225,375,1.993,376,3.007,377,1.903,378,3.573,379,3.598,380,3.007,381,1.903,382,3.135,383,1.903,384,1.903,385,1.903,386,3.007,387,3.007,388,3.573,389,3.573,390,1.903,391,3.007,392,1.903,393,2.536,394,1.903,395,2.808,396,1.837,397,3.007,398,1.903,399,4.237,400,1.654,401,1.522,402,2.536,403,1.903,404,3.007,405,2.536,406,1.808,407,3.007,408,1.903,409,3.007,410,3.144,411,3.007,412,1.903,413,3.007,414,3.007,415,3.007,416,3.007,417,3.007,418,3.007,419,2.774,420,2.538,421,1.903,422,2.225,423,2.547,424,1.304,425,3.135,426,3.135,427,2.242,428,3.63,429,3.007,430,2.547,431,1.903,432,3.007,433,2.808,434,2.759,435,4.614,436,1.616,437,1.903,438,4.906,439,4.237,440,1.903,441,3.007,442,1.903,443,3.007,444,1.993,445,1.903,446,3.007,447,1.903,448,1.604,449,1.408,450,1.903,451,1.604,452,1.046,453,1.604,454,1.408,455,1.261,456,1.408,457,3.729,458,1.903,459,1.903,460,1.713,461,4.237,462,3.729,463,3.007,464,1.903,465,3.007,466,1.903,467,1.903,468,1.903,469,1.903,470,1.903,471,1.903,472,1.903,473,1.046,474,3.729,475,3.007,476,1.408,477,1.903,478,1.903,479,1.903,480,1.903,481,1.903,482,1.903,483,3.007,484,1.903,485,1.903,486,1.903,487,1.903,488,2.536]],["title/components/CardDetailComponent.html",[0,0.013,109,0.663]],["body/components/CardDetailComponent.html",[0,0.017,1,0.458,2,0.745,3,0.199,4,0.175,5,0.531,6,0.531,7,0.531,8,0.175,12,0.362,13,0.802,15,0.796,17,0.521,20,0.531,21,1.485,22,1.485,23,0.531,24,0.531,25,0.802,26,0.545,27,0.802,28,0.458,29,0.458,30,0.458,31,0.458,32,1.115,33,0.802,35,0.802,37,0.108,38,0.23,40,0.545,41,1.243,42,0.692,43,0.934,44,1.263,45,0.911,47,0.795,48,1.224,49,0.57,50,1.064,51,0.331,52,0.028,53,0.453,54,0.263,55,0.331,62,0.929,65,0.5,66,0.86,67,0.992,68,0.64,69,0.592,70,0.741,71,0.302,72,0.275,75,0.545,77,0.899,80,1.122,83,0.57,84,0.704,85,0.199,86,0.331,87,0.713,88,1.115,98,0.531,99,0.802,100,0.802,101,0.531,102,1.001,103,0.531,104,0.802,105,0.458,106,0.531,107,0.458,108,0.531,109,0.929,110,0.802,111,0.458,112,0.693,113,0.802,114,0.531,115,0.458,116,0.531,117,0.458,118,0.531,119,0.458,120,0.458,121,0.531,122,0.458,123,0.64,124,0.531,125,0.458,126,0.531,127,0.458,128,0.531,129,0.458,130,0.531,131,0.531,132,0.458,133,0.493,134,0.531,135,0.531,136,0.531,137,0.014,138,0.014,144,0.802,158,1.726,160,2.201,168,2.485,172,1.975,177,2.382,178,1.773,181,1.243,183,1.429,188,2.382,189,2.201,198,2.646,199,1.173,203,1.005,205,3.12,206,1.394,209,1.988,210,3.048,211,1.59,221,2.837,222,3.312,224,3.196,225,2.69,226,3.196,228,2.83,229,4.482,230,1.173,238,2.04,275,2.107,326,0.704,336,3.561,353,1.984,357,1.638,358,1.638,359,1.224,363,1.084,366,2.891,388,3.969,422,4.205,460,0.81,488,1.955,489,4.752,490,5.415,491,1.716,492,2.223,493,2.382,494,2.593,495,2.323,496,2.955,497,2.955,498,4.224,499,5.054,500,3.12,501,3.483,502,3.483,503,3.483,504,3.483,505,3.483,506,3.12,507,3.483,508,3.483,509,3.483,510,3.483,511,2.793,512,3.504,513,2.593,514,2.319,515,2.319,516,1.411,517,2.319,518,2.955,519,2.593,520,2.319,521,2.955,522,2.955,523,2.319,524,2.319,525,2.319,526,2.319,527,2.319,528,2.319,529,2.319,530,2.319,531,2.319,532,2.319,533,2.319,534,2.319,535,2.319,536,2.319,537,2.319,538,2.319,539,2.319,540,2.319,541,2.319,542,2.319,543,2.319,544,2.319,545,1.394,546,1.716,547,1.173,548,2.319,549,2.319,550,3.504,551,1.394,552,2.319,553,3.504,554,3.504,555,3.504,556,3.504,557,3.504,558,3.504,559,3.504,560,3.504,561,3.504,562,3.504,563,3.504,564,2.319,565,2.319,566,2.319,567,2.319,568,2.319,569,2.319,570,2.319,571,2.319,572,2.319,573,2.319,574,2.319,575,4.224,576,1.955,577,2.319,578,2.319,579,2.319,580,2.319,581,2.319,582,2.319,583,2.319,584,2.319,585,2.319,586,2.319,587,2.319,588,2.319,589,1.716,590,3.504,591,2.319,592,1.173,593,4.205,594,3.969,595,3.969,596,2.83,597,2.83,598,3.969,599,3.12,600,3.483,601,4.707,602,3.504]],["title/interfaces/CardItem.html",[112,0.438,139,1.259]],["body/interfaces/CardItem.html",[3,0.322,4,0.283,8,0.283,12,0.322,15,0.718,17,0.528,37,0.175,38,0.323,52,0.028,54,0.375,57,1.605,59,0.86,62,0.742,67,1.956,85,0.322,112,0.643,137,0.02,138,0.02,139,1.408,140,2.066,142,2.216,143,2.78,144,1.587,145,2.259,151,2.507,152,1.914,157,1.985,158,1.774,159,2.964,162,1.396,296,1.848,366,2.994,424,1.628,428,3.648,433,3.267,492,1.513,493,3.07,500,3.872,501,4.322,502,4.322,503,4.322,504,4.322,505,4.322,506,3.872,507,4.322,508,4.322,509,4.322,510,4.322,596,2.964,598,4.157,599,3.267,603,3.168,604,2.259,605,4.926,606,5.25,607,4.93,608,5.842,609,4.93,610,3.648,611,4.93,612,4.93,613,4.93,614,4.93]],["title/injectables/CardItemService.html",[249,1.094,547,1.7]],["body/injectables/CardItemService.html",[3,0.087,4,0.179,8,0.077,12,0.278,15,0.678,17,0.473,26,0.277,37,0.083,38,0.117,40,0.277,45,0.509,49,0.438,51,0.407,52,0.028,53,0.306,54,0.215,55,0.407,57,0.58,59,0.407,62,0.563,65,0.611,67,1.01,68,0.186,69,0.401,70,0.232,71,0.133,77,0.607,80,1.139,85,0.087,86,0.145,87,0.481,88,0.627,97,3.902,102,0.216,112,0.678,137,0.007,138,0.007,142,1.437,151,2.538,152,1.155,157,1.148,158,0.866,162,0.504,163,0.928,171,4.74,211,1.179,230,0.901,239,1.529,249,0.58,251,0.514,253,1.568,260,1.798,264,1.07,277,0.996,278,0.771,279,0.901,280,1.148,284,2.453,290,3.703,298,0.559,299,0.514,301,0.667,302,1.07,304,0.611,306,2.218,315,0.381,363,1.516,366,2.325,368,1.07,371,1.949,375,1.89,382,2.64,393,1.501,444,1.18,456,0.752,460,0.355,492,2.094,493,2.532,500,4.152,501,4.636,502,4.636,503,4.636,504,4.636,505,4.636,506,4.152,507,4.636,508,4.636,509,4.636,510,4.636,522,1.501,547,0.901,593,2.11,599,1.89,600,4.071,605,5.282,615,0.857,616,2.003,617,1.78,618,1.501,619,1.501,620,1.501,621,2.852,622,1.78,623,1.016,624,1.18,625,1.501,626,1.016,627,1.501,628,1.016,629,2.453,630,1.501,631,1.501,632,2.547,633,1.016,634,1.78,635,1.501,636,2.404,637,2.404,638,1.501,639,1.317,640,1.016,641,2.852,642,1.78,643,1.78,644,5.004,645,5.004,646,5.004,647,1.78,648,6.265,649,1.78,650,5.724,651,3.568,652,5.893,653,4.08,654,1.78,655,5.621,656,5.004,657,6.566,658,1.78,659,1.78,660,3.568,661,4.08,662,2.852,663,1.78,664,4.08,665,1.78,666,1.78,667,1.78,668,5.621,669,4.764,670,3.568,671,4.08,672,1.78,673,1.78,674,1.78,675,1.78,676,1.78,677,3.568,678,1.78,679,1.78,680,1.78,681,4.08,682,4.08,683,4.08,684,4.08,685,1.78,686,3.44,687,3.568,688,1.78,689,5.502,690,5.724,691,4.08,692,1.78,693,1.78,694,4.465,695,4.08,696,2.852,697,3.568,698,5.621,699,5.004,700,3.568,701,3.568,702,1.78,703,4.465,704,2.852,705,3.158,706,1.78,707,1.78,708,1.78,709,1.78,710,1.78,711,1.78,712,2.852,713,2.852,714,1.78,715,3.568,716,5.2,717,2.852,718,2.852,719,1.78,720,1.78,721,3.765,722,2.852,723,1.78,724,1.78,725,1.78,726,1.78,727,1.78,728,1.78,729,4.017,730,2.852,731,1.78,732,4.08,733,1.78,734,3.765,735,1.78,736,4.08,737,3.568,738,4.08,739,5.004,740,2.852,741,1.78,742,1.78,743,1.78,744,1.78,745,3.568,746,1.78,747,1.78,748,1.78,749,1.78,750,1.78,751,1.78,752,1.78,753,1.78,754,1.78,755,1.78,756,1.78,757,1.317,758,2.852,759,5.004,760,1.78,761,4.08,762,1.78,763,3.765,764,1.78,765,1.78,766,1.78,767,2.852,768,2.852,769,1.78,770,1.78,771,1.78,772,1.78,773,1.78,774,2.852,775,2.852,776,1.78,777,1.78,778,1.78,779,1.78,780,1.78,781,5.004,782,3.568,783,1.78,784,1.78,785,1.78,786,1.78,787,1.78,788,2.852,789,1.78,790,1.78,791,2.404,792,4.08,793,4.08,794,3.568,795,1.78,796,1.78,797,2.852,798,1.78,799,1.78,800,1.78,801,1.78,802,1.78,803,2.852,804,1.78,805,3.568,806,2.404,807,2.852,808,1.78,809,1.78,810,1.78,811,1.78,812,1.78,813,2.64,814,2.852,815,2.852,816,1.78,817,4.08,818,1.78,819,1.78,820,2.852,821,4.08,822,3.568,823,1.78,824,2.852,825,2.852,826,2.852,827,1.78,828,1.78,829,1.78,830,1.78,831,1.78,832,1.78,833,1.78,834,1.78,835,1.78,836,2.852,837,1.78,838,1.78,839,2.852,840,1.78,841,2.852,842,1.78,843,1.78,844,1.78,845,1.78,846,1.78,847,1.78,848,1.78,849,1.78,850,1.78,851,2.852,852,4.764,853,1.78,854,2.852,855,1.78,856,1.78,857,3.568,858,1.78,859,1.78,860,4.465,861,1.78,862,1.78,863,3.568,864,1.78,865,1.78,866,5.004,867,1.78,868,1.78,869,1.78,870,1.78,871,1.78,872,1.78,873,1.78,874,1.78,875,2.852,876,2.852,877,2.852,878,1.78,879,1.78,880,5.004,881,1.78,882,3.568,883,1.78,884,1.78,885,2.852,886,1.78,887,1.78,888,1.78,889,4.08,890,2.852,891,3.568,892,3.568,893,3.568,894,3.568,895,1.78,896,3.568,897,1.78,898,2.852,899,2.864,900,4.08,901,1.78,902,1.78,903,1.78,904,1.78,905,1.78,906,1.78,907,1.78,908,1.78,909,1.78,910,1.78,911,1.78,912,1.78,913,1.78,914,1.78,915,3.568,916,1.78,917,1.78,918,2.852,919,1.78,920,1.78,921,1.78,922,1.78,923,1.78,924,1.78,925,1.78,926,2.852,927,1.78,928,1.78,929,1.78,930,1.78,931,2.852,932,1.78,933,1.78,934,1.78,935,1.78,936,1.78,937,1.78,938,1.78,939,1.78,940,1.78,941,2.852,942,2.852,943,1.78,944,1.78,945,1.78,946,1.78,947,2.852,948,1.78,949,1.501,950,2.852,951,3.568,952,1.78,953,1.78,954,1.78,955,1.78,956,1.78,957,1.317,958,2.852,959,3.568,960,4.08,961,4.08,962,1.78,963,1.78,964,1.78,965,1.78,966,2.852,967,1.78,968,1.78,969,1.78,970,1.78,971,1.78,972,1.78,973,4.465,974,1.78,975,4.08,976,2.852,977,2.852,978,1.78,979,1.78,980,1.78,981,1.78,982,1.78,983,1.78,984,2.852,985,1.78,986,1.78,987,1.78,988,3.568,989,1.78,990,1.78,991,1.78,992,1.78,993,1.78,994,1.78,995,1.78,996,1.78,997,1.78,998,1.78,999,3.568,1000,3.568,1001,1.78,1002,1.501,1003,1.78,1004,1.78,1005,1.78,1006,1.78,1007,1.78,1008,1.78,1009,1.78,1010,1.78,1011,1.78,1012,1.78,1013,1.78,1014,1.78,1015,1.78,1016,1.78,1017,1.78,1018,1.78,1019,1.78,1020,4.08,1021,1.78,1022,2.852,1023,2.852,1024,1.78,1025,1.78,1026,1.78,1027,1.78,1028,1.78,1029,1.78,1030,1.78,1031,1.78,1032,1.78,1033,1.78,1034,2.852,1035,1.78,1036,1.78,1037,1.78,1038,1.78,1039,1.78,1040,1.78,1041,1.78,1042,1.78,1043,1.78,1044,1.78,1045,1.78,1046,1.78,1047,1.78,1048,1.78,1049,1.78,1050,1.78,1051,1.78,1052,1.78,1053,1.78,1054,1.78,1055,1.78,1056,1.78,1057,1.78,1058,1.78,1059,1.78,1060,1.78,1061,1.78,1062,1.78,1063,1.78,1064,1.78,1065,1.78,1066,1.78,1067,1.78,1068,1.78,1069,1.78,1070,1.016,1071,1.501,1072,1.501,1073,1.016,1074,0.857,1075,0.752,1076,1.016,1077,0.857,1078,0.857,1079,2.149,1080,1.016,1081,1.016,1082,1.016,1083,0.857,1084,0.673,1085,1.016,1086,1.016,1087,1.016]],["title/components/CardManageComponent.html",[0,0.013,31,0.663]],["body/components/CardManageComponent.html",[0,0.02,1,0.634,2,0.944,3,0.275,4,0.242,5,0.736,6,0.736,7,0.736,8,0.242,12,0.436,13,1.016,15,0.715,17,0.513,18,3.742,20,0.736,21,1.546,22,1.546,23,0.736,24,0.736,25,1.016,26,0.69,27,1.016,28,0.634,29,0.634,30,0.634,31,1.082,32,1.342,33,1.016,35,1.016,37,0.15,38,0.291,40,0.69,41,1.447,42,1.082,43,1.294,44,1.395,45,0.821,47,0.749,48,1.55,49,0.79,51,0.633,52,0.028,53,0.588,54,0.284,55,0.633,62,1.203,65,0.725,66,1.002,68,0.587,69,0.543,70,0.776,71,0.419,72,0.381,75,0.69,77,1.081,80,1.26,81,4.401,83,0.79,84,0.976,85,0.275,86,0.459,87,0.925,88,1.342,98,0.736,99,1.016,100,1.016,101,0.736,102,1.166,103,0.736,104,1.016,105,0.634,106,0.736,107,0.634,108,0.736,109,0.634,110,1.016,111,0.634,112,0.795,113,1.016,114,0.736,115,0.634,116,0.736,117,0.634,118,0.736,119,0.634,120,0.634,121,0.736,122,0.634,123,0.811,124,0.736,125,0.634,126,0.736,127,0.634,128,0.736,129,0.634,130,0.736,131,0.736,132,0.634,133,0.684,134,0.736,135,0.736,136,0.736,137,0.018,138,0.018,144,1.255,151,1.787,158,1.348,181,1.091,183,1.348,225,1.626,230,2.246,239,2.229,260,2.047,296,1.663,326,0.976,353,2.17,357,2.075,358,2.075,359,1.55,366,2.578,406,3.576,422,3.284,460,1.122,489,4.401,492,2.54,493,3.085,494,2.378,511,2.774,516,1.787,545,1.932,546,2.378,547,1.626,592,2.246,593,3.284,594,3.742,595,3.742,596,2.668,597,2.668,705,2.13,1079,2.941,1088,2.71,1089,4.438,1090,4.438,1091,4.438,1092,3.056,1093,5.482,1094,4.438,1095,5.083,1096,4.438,1097,3.214,1098,4.438,1099,3.284,1100,3.214,1101,4.438,1102,3.214,1103,4.438,1104,3.214,1105,3.284,1106,3.214,1107,2.378,1108,2.378,1109,3.214,1110,3.214,1111,2.71,1112,3.214,1113,2.71,1114,2.71,1115,1.932,1116,2.71,1117,2.378,1118,3.214,1119,3.284,1120,4.438,1121,4.438,1122,2.941,1123,2.941,1124,2.668]],["title/components/CarditemListComponent.html",[0,0.013,111,0.663]],["body/components/CarditemListComponent.html",[0,0.019,1,0.597,2,0.905,3,0.259,4,0.228,5,0.692,6,0.692,7,0.692,8,0.228,12,0.458,13,1.222,15,0.734,17,0.514,20,0.692,21,1.536,22,1.536,23,0.692,24,0.692,25,0.974,26,0.661,27,0.974,28,0.597,29,0.597,30,0.597,31,0.597,32,1.299,33,0.974,35,0.974,37,0.141,38,0.279,40,0.661,41,1.41,42,1.054,44,1.401,45,0.762,47,0.718,48,1.486,50,1.292,51,0.607,52,0.028,53,0.573,54,0.275,55,0.607,57,1.832,59,1.222,60,3.539,65,0.607,66,0.899,67,1.394,68,0.553,69,0.511,70,0.761,71,0.394,72,0.359,75,0.661,77,1.047,80,0.84,83,0.744,84,0.919,85,0.259,86,0.432,87,0.95,88,1.299,98,0.692,99,0.974,100,0.974,101,0.692,102,1.136,103,0.692,104,0.974,105,0.597,106,0.692,107,0.597,108,0.692,109,0.597,110,0.974,111,1.054,112,0.822,113,0.974,114,0.692,115,0.597,116,0.692,117,0.597,118,0.692,119,0.597,120,0.597,121,0.692,122,0.597,123,0.778,124,0.692,125,0.597,126,0.692,127,0.597,128,0.692,129,0.597,130,0.692,131,0.692,132,0.597,133,0.644,134,0.692,135,0.692,136,0.692,137,0.017,138,0.017,152,1.394,157,1.713,158,1.622,163,1.9,181,1.384,183,1.292,230,2.702,239,2.001,264,2.558,296,1.595,301,1.595,326,0.919,357,1.989,358,1.989,359,1.486,360,1.982,363,2.301,365,2.34,366,2.789,367,1.713,368,1.819,371,2.959,375,2.005,389,3.587,396,1.311,492,2.266,493,3.034,500,3.868,511,2.702,516,1.713,545,1.819,546,2.238,547,1.531,589,2.238,592,2.153,599,2.82,610,3.148,616,4.15,632,3.539,639,3.148,705,2.005,1071,3.587,1105,3.148,1107,2.238,1108,2.238,1114,2.551,1124,2.558,1125,4.744,1126,4.744,1127,2.238,1128,3.868,1129,3.587,1130,3.587,1131,3.587,1132,4.254,1133,3.025,1134,4.502,1135,4.921,1136,4.254,1137,3.641,1138,4.254,1139,3.025,1140,3.025,1141,3.587,1142,5.34,1143,3.587,1144,4.254,1145,4.254,1146,2.551,1147,3.025,1148,3.025,1149,3.025,1150,3.025,1151,3.025,1152,1.531,1153,3.025,1154,3.025,1155,4.254,1156,4.254,1157,4.254,1158,3.148]],["title/injectables/CardsService.html",[249,1.094,511,1.7]],["body/injectables/CardsService.html",[3,0.284,4,0.25,8,0.25,37,0.212,38,0.297,40,0.705,42,0.655,45,0.906,51,0.857,52,0.028,53,0.644,54,0.359,55,0.857,65,0.857,66,1.16,67,1.741,68,0.829,69,0.766,70,0.724,71,0.433,80,1.097,85,0.284,86,0.473,88,1.364,112,0.883,137,0.018,138,0.018,152,1.464,207,1.679,209,1.477,211,1.623,249,1.477,251,1.679,277,1.584,284,2.727,298,1.824,299,1.679,301,1.7,302,2.727,304,1.994,306,1.805,362,4.752,363,2.808,371,2.727,373,3.425,449,2.455,456,2.455,460,1.158,511,2.295,592,3.111,610,3.824,618,3.824,619,3.824,620,3.824,625,3.824,627,3.824,631,3.824,632,3.682,635,2.797,705,3.425,1072,3.824,1074,2.797,1075,2.455,1077,2.797,1078,2.797,1079,3.856,1083,2.797,1084,2.199,1092,3.696,1105,4.304,1107,3.824,1108,3.824,1159,2.797,1160,5.168,1161,4.535,1162,5.556,1163,4.535,1164,3.317,1165,5.556,1166,4.535,1167,4.535,1168,3.317,1169,4.535,1170,3.317,1171,5.817,1172,3.317,1173,3.317,1174,3.317,1175,4.535,1176,3.317,1177,3.317,1178,4.535,1179,5.168,1180,4.535,1181,4.535,1182,4.535,1183,4.535,1184,4.535,1185,4.535,1186,4.535,1187,4.535,1188,4.535,1189,3.317,1190,4.535,1191,4.535,1192,4.535,1193,4.535,1194,4.535,1195,4.535,1196,4.535,1197,3.317,1198,3.317,1199,3.317,1200,5.168,1201,3.317,1202,3.317,1203,5.168,1204,3.317,1205,3.317,1206,3.317,1207,3.317,1208,3.317,1209,3.317,1210,3.317,1211,3.317,1212,3.317,1213,3.317,1214,3.317,1215,5.168,1216,3.317,1217,3.317,1218,3.317]],["title/components/LoginComponent.html",[0,0.013,115,0.663]],["body/components/LoginComponent.html",[0,0.021,1,0.657,2,0.967,3,0.285,4,0.251,5,0.762,6,0.762,7,0.762,8,0.251,12,0.444,13,1.041,15,0.593,17,0.521,19,2.733,20,0.762,21,1.551,22,1.551,23,0.762,24,0.762,25,1.041,26,0.707,27,1.041,28,0.657,29,0.657,30,0.657,31,0.657,32,1.367,33,1.041,35,1.041,37,0.155,38,0.298,40,0.707,41,1.469,42,1.022,43,1.341,44,1.376,45,0.858,47,0.767,48,1.588,49,1.368,50,1.69,51,0.475,52,0.028,53,0.555,54,0.254,55,0.475,59,1.273,62,1.098,63,1.703,65,0.649,66,1.017,70,0.76,71,0.434,72,0.395,75,0.707,77,1.101,80,0.897,83,0.819,84,1.011,85,0.285,86,0.475,87,0.767,98,0.762,99,1.041,100,1.041,101,0.762,102,1.184,103,0.762,104,1.041,105,0.657,106,0.762,107,0.657,108,0.762,109,0.657,110,1.041,111,0.657,112,0.434,113,1.041,114,0.762,115,1.098,116,0.762,117,0.657,118,0.762,119,0.657,120,0.657,121,0.762,122,0.657,123,1.145,124,0.762,125,0.657,126,0.762,127,0.657,128,0.762,129,0.657,130,0.762,131,0.762,132,0.657,133,0.708,134,0.762,135,0.762,136,0.762,137,0.018,138,0.018,144,1.041,158,1.826,160,2.601,168,3.058,172,2.421,177,2.815,178,2.3,181,1.118,183,1.381,188,2.3,189,2.601,198,2.244,199,1.684,203,1.443,207,1.684,209,1.686,210,2.3,211,1.2,221,1.971,222,2.815,326,1.011,346,5.069,353,2.188,359,1.588,374,4.117,379,2.001,396,1.443,400,3.306,473,1.83,495,2.847,516,1.831,1115,2.733,1143,2.807,1152,1.684,1219,2.807,1220,3.833,1221,4.546,1222,4.546,1223,5.177,1224,4.546,1225,3.328,1226,3.328,1227,3.364,1228,2.463,1229,3.328,1230,2.463,1231,3.328,1232,3.328,1233,3.328,1234,3.328,1235,3.328,1236,3.328,1237,3.328,1238,4.079,1239,3.328,1240,3.345,1241,4.691,1242,3.013]],["title/components/NavbarComponent.html",[0,0.013,117,0.663]],["body/components/NavbarComponent.html",[0,0.02,1,0.613,2,0.922,3,0.266,4,0.234,5,0.711,6,0.711,7,0.711,8,0.234,12,0.428,13,1.236,15,0.864,17,0.513,20,0.711,21,1.54,22,1.54,23,0.711,24,0.711,25,0.992,26,0.674,27,0.992,28,0.613,29,0.613,30,0.613,31,0.613,32,1.317,33,0.992,35,0.992,37,0.145,38,0.284,40,0.674,41,1.426,42,0.985,44,1.41,45,0.84,47,0.731,48,1.513,49,1.066,50,1.316,51,0.443,52,0.028,53,0.535,54,0.279,55,0.443,59,1.41,63,1.745,64,2.192,65,0.712,66,0.987,68,0.567,69,0.524,70,0.741,71,0.405,72,0.368,75,0.674,77,1.062,80,0.855,83,0.763,84,0.943,85,0.266,86,0.443,87,0.731,88,0.82,91,3.653,98,0.711,99,0.992,100,0.992,101,0.711,102,1.149,103,0.711,104,0.992,105,0.613,106,0.711,107,0.613,108,0.711,109,0.613,110,0.992,111,0.613,112,0.405,113,0.992,114,0.711,115,0.613,116,0.711,117,1.066,118,0.711,119,0.613,120,0.613,121,0.711,122,0.613,123,0.792,124,0.711,125,0.613,126,0.711,127,0.613,128,0.711,129,0.613,130,0.711,131,0.711,132,0.613,133,0.66,134,0.711,135,0.711,136,0.711,137,0.017,138,0.017,144,1.236,148,2.026,158,1.316,162,1.529,163,1.411,168,2.525,172,2.333,181,1.447,183,1.64,189,2.525,198,1.878,203,1.346,207,1.571,209,1.411,238,1.878,254,3.205,264,2.605,277,1.513,278,1.878,279,2.192,280,2.175,282,2.871,296,1.624,301,1.163,315,1.624,326,0.943,331,3.653,332,3.653,345,4.208,347,4.554,352,2.297,353,2.109,357,2.026,358,2.026,359,1.513,360,1.745,367,1.745,368,2.605,379,3.247,395,2.871,396,1.346,434,2.297,444,2.871,492,1.745,493,2.192,495,2.744,516,2.37,600,3.996,629,2.605,632,2.871,636,3.653,637,3.653,638,5.194,639,3.996,1075,2.297,1115,2.605,1152,1.571,1238,2.871,1242,2.871,1243,2.617,1244,5.4,1245,3.205,1246,4.332,1247,4.332,1248,4.99,1249,5.4,1250,4.332,1251,3.104,1252,5.4,1253,4.332,1254,3.104,1255,4.332,1256,3.104,1257,3.104,1258,3.104,1259,3.104,1260,3.104,1261,3.104,1262,3.104,1263,3.104,1264,3.104,1265,4.99,1266,5.4,1267,4.332,1268,4.332,1269,4.332,1270,4.332,1271,4.332,1272,4.332,1273,2.871]],["title/components/OrderDetailComponent.html",[0,0.013,119,0.663]],["body/components/OrderDetailComponent.html",[0,0.02,1,0.643,2,0.953,3,0.279,4,0.246,5,0.746,6,0.746,7,0.746,8,0.246,12,0.439,13,1.026,15,0.779,17,0.515,20,0.746,21,1.548,22,1.548,23,0.746,24,0.746,25,1.026,26,0.697,27,1.026,28,0.643,29,0.643,30,0.643,31,0.643,32,1.352,33,1.026,35,1.026,37,0.152,38,0.294,40,0.697,42,1.141,45,0.825,47,0.756,51,0.465,52,0.028,53,0.549,54,0.309,55,0.465,62,1.263,65,0.639,68,0.819,69,0.756,70,0.719,71,0.425,72,0.387,75,0.697,77,1.346,80,0.885,83,0.802,85,0.279,86,0.465,87,0.55,98,0.746,99,1.026,100,1.026,101,0.746,102,1.173,103,0.746,104,1.026,105,0.643,106,0.746,107,0.643,108,0.746,109,0.643,110,1.026,111,0.643,112,0.754,113,1.026,114,0.746,115,0.643,116,0.746,117,0.643,118,0.746,119,1.089,120,0.643,121,0.746,122,0.643,123,0.819,124,0.746,125,0.643,126,0.746,127,0.643,128,0.746,129,0.643,130,0.746,131,0.746,132,0.643,133,0.693,134,0.746,135,0.746,136,0.746,137,0.018,138,0.018,142,1.805,144,1.026,152,1.562,160,2.095,163,1.459,183,1.361,211,0.86,232,2.39,239,1.68,260,1.805,271,1.68,277,1.565,280,1.805,306,1.788,315,1.68,333,3.394,360,2.625,366,1.942,367,2.406,395,2.97,436,2.39,452,1.792,460,1.138,491,2.412,492,2.221,494,3.316,496,3.778,497,3.778,545,1.959,596,3.748,597,2.694,1092,2.694,1099,3.316,1119,3.316,1122,3.832,1123,3.832,1124,3.592,1128,3.655,1158,3.316,1274,3.959,1275,3.959,1276,5.037,1277,4.284,1278,4.278,1279,4.481,1280,5.121,1281,4.481,1282,3.259,1283,4.65,1284,3.259,1285,4.481,1286,2.97,1287,4.481,1288,3.778,1289,3.259,1290,4.481,1291,3.315,1292,5.121,1293,2.16,1294,2.412,1295,2.748,1296,2.748,1297,3.778,1298,4.481]],["title/components/OrderFinishComponent.html",[0,0.013,120,0.663]],["body/components/OrderFinishComponent.html",[0,0.021,1,0.681,2,0.991,3,0.296,4,0.26,5,0.79,6,0.79,7,0.79,8,0.26,12,0.399,13,1.067,15,0.608,17,0.519,20,0.79,21,1.557,22,1.557,23,0.79,24,0.79,25,1.067,26,0.724,27,1.067,28,0.681,29,0.681,30,0.681,31,0.681,33,1.067,35,1.067,37,0.161,38,0.305,40,0.724,41,1.491,42,1.115,43,1.39,44,1.422,45,0.753,47,0.787,49,1.146,50,1.715,51,0.493,52,0.028,53,0.566,54,0.261,55,0.493,57,1.517,62,0.92,64,2.358,65,0.493,66,0.631,68,0.631,69,0.583,70,0.793,71,0.45,72,0.409,75,0.724,77,1.377,80,0.92,84,1.048,85,0.296,86,0.493,87,0.787,88,1.23,92,3.929,98,0.79,99,1.067,100,1.067,101,0.79,102,1.202,103,0.79,104,1.067,105,0.681,106,0.79,107,0.681,108,0.79,109,0.681,110,1.067,111,0.681,112,0.45,113,1.067,114,0.79,115,0.681,116,0.79,117,0.681,118,0.79,119,1.115,120,1.115,121,0.79,122,0.681,123,0.852,124,0.79,125,0.681,126,0.79,127,0.681,128,0.79,129,0.681,130,0.79,131,0.79,132,0.681,133,0.734,134,0.79,135,0.79,136,0.79,137,0.018,138,0.018,162,1.32,181,1.495,183,1.415,238,2.448,271,1.977,306,1.205,326,1.048,333,3.496,353,2.206,359,1.627,360,2.448,367,2.448,406,2.801,430,2.075,436,2.634,452,1.898,455,2.288,460,1.205,473,1.898,476,2.554,495,2.901,592,1.747,1274,3.743,1275,2.288,1291,3.396,1293,2.288,1294,2.554,1299,4.762,1300,2.911,1301,4.66,1302,4.66,1303,4.66,1304,4.66,1305,4.66,1306,4.66,1307,3.452,1308,3.448,1309,4.66,1310,4.66,1311,3.448,1312,3.929,1313,3.448,1314,2.911,1315,3.452,1316,2.554,1317,3.452,1318,3.452,1319,2.911,1320,2.911,1321,3.452,1322,3.452,1323,3.929,1324,4.66,1325,4.66,1326,4.66,1327,3.929,1328,4.66]],["title/components/OrderListComponent.html",[0,0.013,30,0.663]],["body/components/OrderListComponent.html",[0,0.018,1,0.53,2,0.831,3,0.23,4,0.202,5,0.614,6,0.614,7,0.614,8,0.202,12,0.48,13,0.894,15,0.773,17,0.524,20,0.614,21,1.514,22,1.514,23,0.614,24,0.614,25,0.894,26,0.716,27,0.894,28,0.53,29,0.53,30,0.998,31,0.53,32,1.215,33,0.894,35,0.894,37,0.125,38,0.256,40,0.607,41,1.335,42,0.998,44,1.357,45,0.846,47,0.853,48,1.363,50,1.186,51,0.721,52,0.028,53,0.601,54,0.324,55,0.721,59,1.357,62,1.17,63,1.588,64,1.976,65,0.8,66,0.841,68,0.841,69,0.777,70,0.755,71,0.35,72,0.318,75,0.607,77,1.307,78,4.473,80,0.998,83,0.66,84,0.815,85,0.23,86,0.383,87,0.907,88,1.031,98,0.614,99,0.894,100,0.894,101,0.614,102,1.075,103,0.614,104,0.894,105,0.53,106,0.614,107,0.53,108,0.614,109,0.53,110,0.894,111,0.53,112,0.773,113,0.894,114,0.614,115,0.53,116,0.614,117,0.53,118,0.614,119,0.998,120,0.53,121,0.614,122,0.53,123,0.714,124,0.614,125,0.53,126,0.614,127,0.53,128,0.614,129,0.53,130,0.614,131,0.614,132,0.53,133,0.571,134,0.614,135,0.614,136,0.614,137,0.015,138,0.015,144,1.157,146,1.692,148,1.826,151,1.572,152,1.432,154,1.475,160,1.826,162,1.106,181,1.243,183,1.186,211,1.031,231,3.292,239,2.101,260,2.036,271,1.895,277,1.363,278,1.692,301,1.006,306,1.363,315,1.725,355,3.479,357,1.826,358,1.826,360,2.664,367,2.664,372,4.727,379,2.347,410,3.881,424,1.692,433,2.588,436,2.662,452,1.475,453,2.262,460,1.363,492,2.473,516,1.572,545,1.613,576,2.262,597,2.347,629,3.039,1092,3.039,1099,2.889,1122,2.588,1123,1.778,1124,2.347,1127,1.985,1128,2.588,1129,3.292,1130,3.292,1131,3.292,1274,4.007,1275,1.778,1276,3.292,1277,4.07,1278,3.975,1288,3.292,1291,3.692,1293,1.778,1295,3.292,1296,3.292,1313,2.889,1314,2.262,1323,3.292,1327,3.292,1329,4.727,1330,4.727,1331,4.603,1332,4.603,1333,4.603,1334,5.372,1335,3.904,1336,2.683,1337,3.904,1338,3.904,1339,2.683,1340,3.904,1341,2.683,1342,3.904,1343,2.683,1344,3.904,1345,3.904,1346,3.904,1347,2.683,1348,3.904,1349,2.683,1350,2.683,1351,2.683,1352,3.904,1353,2.683,1354,2.683,1355,2.683,1356,3.904,1357,3.904,1358,3.904,1359,3.904]],["title/components/PasswordRecoveryComponent.html",[0,0.013,122,0.663]],["body/components/PasswordRecoveryComponent.html",[0,0.021,1,0.674,2,0.984,3,0.292,4,0.257,5,0.781,6,0.781,7,0.781,8,0.257,12,0.449,13,1.058,15,0.733,17,0.518,20,0.781,21,1.555,22,1.555,23,0.781,24,0.781,25,1.058,26,0.719,27,1.058,28,0.674,29,0.674,30,0.674,31,0.674,32,1.385,33,1.058,35,1.058,37,0.159,38,0.303,40,0.719,41,1.484,42,0.674,45,0.838,47,0.781,49,1.383,51,0.487,52,0.028,53,0.562,54,0.259,55,0.487,58,3.899,59,1.058,65,0.66,66,0.959,70,0.766,71,0.445,72,0.405,75,0.719,77,1.116,80,0.913,83,0.839,85,0.292,86,0.487,87,0.781,88,0.901,98,0.781,99,1.058,100,1.058,101,0.781,102,1.196,103,0.781,104,1.058,105,0.674,106,0.781,107,0.674,108,0.781,109,0.674,110,1.058,111,0.674,112,0.445,113,1.058,114,0.781,115,0.674,116,0.781,117,0.674,118,0.781,119,0.674,120,0.674,121,0.781,122,1.11,123,1.152,124,0.781,125,0.674,126,0.781,127,0.674,128,0.781,129,0.674,130,0.781,131,0.781,132,0.674,133,0.726,134,0.781,135,0.781,136,0.781,137,0.018,138,0.018,146,2.004,168,2.629,172,2.452,177,2.845,178,2.34,180,3.065,181,1.383,183,1.404,188,2.34,189,2.629,198,2.004,199,1.727,203,1.479,207,1.727,209,1.506,210,1.727,211,0.901,221,2.004,222,2.34,326,1.036,352,2.525,353,2.163,354,2.845,359,1.615,374,3.421,396,1.479,401,3.268,420,3.583,428,4.16,495,2.884,513,3.421,516,1.862,518,3.899,899,2.052,1115,2.78,1152,1.727,1240,2.78,1241,3.899,1242,3.065,1273,4.015,1360,4.482,1361,5.107,1362,2.878,1363,4.347,1364,2.78,1365,4.624,1366,4.624,1367,5.244,1368,5.621,1369,4.624,1370,3.413,1371,3.413,1372,2.525,1373,3.413,1374,2.525,1375,3.413,1376,2.525,1377,3.413,1378,2.878,1379,3.413,1380,3.413,1381,3.413,1382,3.413]],["title/components/PasswordResetComponent.html",[0,0.013,125,0.663]],["body/components/PasswordResetComponent.html",[0,0.019,1,0.58,2,0.887,3,0.252,4,0.222,5,0.673,6,0.673,7,0.673,8,0.222,12,0.415,13,0.954,15,0.792,17,0.496,20,0.673,21,1.531,22,1.531,23,0.673,24,0.673,25,0.954,26,0.648,27,0.954,28,0.58,29,0.58,30,0.58,31,0.58,32,1.279,33,0.954,35,0.954,37,0.137,38,0.273,40,0.648,41,1.392,42,1.041,45,0.848,47,0.704,51,0.419,52,0.028,53,0.519,54,0.271,55,0.419,65,0.595,66,0.963,67,1.18,68,0.537,69,0.496,70,0.754,71,0.383,72,0.349,75,0.648,77,1.031,80,0.823,83,0.723,85,0.252,86,0.419,87,0.818,88,1.279,98,0.673,99,0.954,100,0.954,101,0.673,102,1.121,103,0.673,104,0.954,105,0.58,106,0.673,107,0.58,108,0.673,109,0.58,110,0.954,111,0.58,112,0.383,113,0.954,114,0.673,115,0.58,116,0.673,117,0.58,118,0.673,119,0.58,120,0.58,121,0.673,122,0.58,123,1.17,124,0.673,125,1.041,126,0.673,127,0.58,128,0.673,129,0.58,130,0.673,131,0.673,132,0.58,133,0.625,134,0.673,135,0.673,136,0.673,137,0.017,138,0.017,144,1.274,149,2.506,168,2.703,172,2.265,177,2.667,178,2.109,180,2.763,181,1.422,183,1.601,188,2.109,189,2.465,198,2.1,199,2.109,203,1.274,206,1.767,209,1.577,210,2.109,211,1.101,221,1.807,222,2.667,226,3.169,228,3.169,232,1.807,238,1.807,254,3.084,271,2.277,276,1.767,301,1.562,326,0.892,353,2.122,354,3.008,357,1.949,358,1.949,359,1.456,365,3.341,396,1.274,401,2.925,424,2.716,473,2.292,495,2.664,516,1.679,551,2.506,813,3.9,899,3.476,957,3.9,1117,2.174,1134,4.445,1137,3.9,1141,3.515,1146,2.478,1152,1.487,1230,2.174,1238,4.277,1273,2.763,1283,3.515,1286,4.026,1308,3.084,1311,4.278,1360,4.495,1374,2.174,1383,5.122,1384,2.478,1385,4.168,1386,4.168,1387,4.168,1388,4.844,1389,4.844,1390,4.445,1391,2.478,1392,4.168,1393,2.939,1394,4.168,1395,2.939,1396,2.939,1397,2.939,1398,2.478,1399,2.939,1400,3.211,1401,1.948,1402,2.939,1403,4.168,1404,2.939,1405,4.168,1406,4.168,1407,2.939,1408,2.939,1409,3.515,1410,3.515,1411,2.478,1412,2.939,1413,2.939,1414,2.939,1415,3.9,1416,3.9,1417,3.9,1418,3.9,1419,4.445,1420,4.445,1421,4.445,1422,4.445,1423,3.515,1424,3.515]],["title/components/PaymentComponent.html",[0,0.013,127,0.663]],["body/components/PaymentComponent.html",[0,0.02,1,0.651,2,0.961,3,0.283,4,0.249,5,0.755,6,0.755,7,0.755,8,0.249,12,0.441,13,1.372,15,0.723,17,0.525,20,0.755,21,1.55,22,1.55,23,0.755,24,0.755,25,1.034,26,0.801,27,1.034,28,0.651,29,0.651,30,0.651,31,0.651,32,1.36,33,1.034,35,1.034,37,0.154,38,0.296,40,0.702,41,1.463,42,0.892,43,1.328,44,1.405,45,0.791,47,0.763,48,1.578,49,1.111,50,1.821,51,0.471,52,0.028,53,0.552,54,0.253,55,0.471,57,1.471,59,1.034,65,0.645,66,0.826,68,0.603,69,0.557,70,0.723,71,0.43,72,0.391,75,0.702,77,1.096,80,0.892,83,0.811,84,1.001,85,0.283,86,0.471,87,0.763,88,1.193,98,0.755,99,1.034,100,1.034,101,0.755,102,1.179,103,0.755,104,1.034,105,0.651,106,0.755,107,0.651,108,0.755,109,0.651,110,1.034,111,0.651,112,0.43,113,1.034,114,0.755,115,0.651,116,0.755,117,0.651,118,0.755,119,0.651,120,0.651,121,0.755,122,0.651,123,0.826,124,0.755,125,0.651,126,0.755,127,1.094,128,0.755,129,0.651,130,0.755,131,0.755,132,0.651,133,0.702,134,0.755,135,0.755,136,0.755,137,0.018,138,0.018,144,1.034,146,1.958,162,1.279,163,1.804,181,1.363,183,1.372,187,3.809,253,2.484,271,1.931,277,1.578,278,1.958,280,1.819,296,1.693,306,1.152,315,1.693,326,1.001,353,2.183,359,1.578,360,2.232,367,1.819,395,2.994,396,1.958,406,3.332,460,1.152,473,1.813,513,3.342,592,1.669,729,4.673,1312,3.809,1313,3.342,1316,2.44,1319,2.781,1320,2.781,1425,2.781,1426,5.542,1427,5.506,1428,4.517,1429,4.517,1430,4.517,1431,5.152,1432,5.542,1433,4.517,1434,3.298,1435,4.517,1436,4.517,1437,4.517,1438,5.542,1439,5.542,1440,3.809,1441,3.298,1442,4.517,1443,4.517,1444,4.517,1445,4.517,1446,5.542,1447,3.298,1448,2.781,1449,4.517,1450,3.298,1451,3.298,1452,4.517,1453,3.298,1454,3.298,1455,4.517,1456,5.542,1457,4.517,1458,4.517]],["title/interfaces/Recovery.html",[139,1.259,1364,2.019]],["body/interfaces/Recovery.html",[3,0.416,4,0.366,8,0.366,12,0.416,15,0.633,17,0.523,37,0.227,38,0.38,47,0.82,52,0.028,54,0.346,63,1.64,67,1.752,85,0.416,137,0.023,138,0.023,139,1.82,140,2.671,144,1.112,145,2.92,152,1.752,154,3.523,157,2.332,275,2.92,401,3.131,899,3.993,1308,3.594,1363,4.843,1364,3.481,1459,4.095,1460,5.659,1461,5.79,1462,6.406]],["title/components/RegistrationFormComponent.html",[0,0.013,129,0.663]],["body/components/RegistrationFormComponent.html",[0,0.018,1,0.515,2,0.814,3,0.224,4,0.197,5,0.597,6,0.597,7,0.597,8,0.197,12,0.388,13,0.876,17,0.51,20,0.597,21,1.509,22,1.509,23,0.597,24,0.597,25,0.876,26,0.595,27,0.876,28,0.515,29,0.515,30,0.515,31,0.515,32,1.196,33,0.876,35,0.876,37,0.122,38,0.251,40,0.595,41,1.317,42,0.985,44,1.347,45,0.871,47,0.897,48,1.336,50,1.162,51,0.372,52,0.028,53,0.486,54,0.214,55,0.372,62,0.515,63,1.625,65,0.546,66,0.912,70,0.748,71,0.34,72,0.309,75,0.595,77,0.964,80,0.755,83,0.642,84,0.792,85,0.224,86,0.372,87,0.765,88,1.196,97,3.338,98,0.597,99,0.876,100,0.876,101,0.597,102,1.061,103,0.597,104,0.876,105,0.515,106,0.597,107,0.515,108,0.597,109,0.515,110,0.876,111,0.515,112,0.34,113,0.876,114,0.597,115,0.515,116,0.597,117,0.515,118,0.597,119,0.515,120,0.515,121,0.597,122,0.515,123,1.015,124,0.597,125,0.515,126,0.597,127,0.515,128,0.597,129,0.985,130,1.313,131,0.597,132,0.515,133,0.555,134,0.597,135,0.597,136,0.597,137,0.015,138,0.015,144,1.142,146,1.658,148,1.22,158,1.823,168,2.807,172,2.118,173,3.352,177,2.525,178,1.936,181,1.365,185,3.226,188,1.936,189,2.333,198,2.486,199,1.936,200,1.931,201,1.931,202,1.73,203,1.131,204,2.999,206,1.569,209,1.868,210,2.809,211,1.466,221,2.645,222,3.166,224,3.338,225,2.809,226,3.669,227,3.68,228,2.999,232,1.658,237,3.226,271,2.205,296,0.978,301,0.978,326,0.792,353,2.055,354,2.903,357,1.789,358,1.789,359,1.336,363,1.22,365,3.235,396,1.131,400,2.744,406,2.3,419,2.999,420,3.356,423,2.999,424,2.762,427,2.999,473,1.435,516,1.541,589,1.931,686,3.226,757,3.692,813,3.692,957,3.692,1116,2.2,1152,1.32,1228,1.931,1230,1.931,1238,4.147,1240,2.3,1242,2.536,1286,4.224,1311,3.692,1372,1.931,1374,1.931,1376,1.931,1390,4.207,1391,2.2,1398,2.2,1400,3.003,1401,1.73,1409,3.226,1410,3.226,1411,2.2,1415,4.515,1416,4.515,1417,4.515,1418,3.692,1419,4.207,1420,4.207,1421,4.207,1422,4.207,1423,3.226,1424,3.226,1463,5.216,1464,5.216,1465,2.2,1466,4.681,1467,3.826,1468,3.826,1469,3.826,1470,4.53,1471,3.826,1472,2.609,1473,3.826,1474,3.826,1475,3.226,1476,2.609,1477,2.2,1478,2.609,1479,2.2,1480,2.609,1481,2.609,1482,2.609,1483,2.609,1484,2.609,1485,2.609,1486,3.82,1487,3.226,1488,2.609,1489,2.609,1490,2.609,1491,2.609,1492,2.609,1493,2.609,1494,2.609,1495,2.609,1496,2.609,1497,2.609,1498,2.609,1499,2.609,1500,2.609,1501,2.609,1502,2.609,1503,2.609,1504,2.609,1505,2.609,1506,2.2,1507,1.931,1508,2.609,1509,2.609,1510,2.609,1511,3.226]],["title/interfaces/ShoppingCart.html",[139,1.259,436,1.456]],["body/interfaces/ShoppingCart.html",[3,0.368,4,0.324,8,0.324,12,0.46,17,0.512,37,0.2,38,0.352,52,0.028,54,0.361,59,1.23,62,1.326,63,1.522,70,0.701,85,0.368,112,0.801,137,0.021,138,0.021,139,1.611,140,2.363,142,2.474,144,1.23,145,3.23,147,3.23,151,2.474,152,1.923,154,3.378,156,3.23,157,2.164,160,2.512,162,1.827,232,2.329,239,2.014,296,2.014,360,2.598,367,2.664,430,3.878,433,3.561,434,4.545,436,2.329,454,3.179,455,2.848,492,2.164,506,4.071,604,3.23,1092,3.693,1245,3.976,1277,3.561,1512,3.623,1513,3.623,1514,4.531,1515,6.142,1516,5.373,1517,4.531,1518,5.373,1519,5.373,1520,5.373,1521,4.297]],["title/components/ShoppingCartComponent.html",[0,0.013,132,0.663]],["body/components/ShoppingCartComponent.html",[0,0.02,1,0.606,2,0.915,3,0.263,4,0.232,5,0.703,6,0.703,7,0.703,8,0.232,12,0.425,13,0.985,15,0.738,17,0.514,20,0.703,21,1.538,22,1.538,23,0.703,24,0.703,25,0.985,26,0.772,27,0.985,28,0.606,29,0.606,30,0.606,31,0.606,32,1.31,33,0.985,35,0.985,37,0.143,38,0.282,40,0.669,41,1.419,42,1.061,43,1.237,44,1.378,45,0.837,48,1.502,49,1.058,50,1.633,51,0.438,52,0.028,53,0.532,54,0.301,55,0.438,57,1,59,1.342,62,1.213,64,2.72,65,0.614,66,0.907,68,0.907,69,0.838,70,0.738,71,0.401,72,0.364,75,0.669,77,1.056,80,0.849,83,0.756,84,0.933,85,0.263,86,0.438,87,0.726,88,1.136,98,0.703,99,0.985,100,0.985,101,0.703,102,1.144,103,0.703,104,0.985,105,0.606,106,0.703,107,0.606,108,0.703,109,0.606,110,0.985,111,0.606,112,0.401,113,0.985,114,0.703,115,0.606,116,0.703,117,0.606,118,0.703,119,0.606,120,0.606,121,0.703,122,0.606,123,0.786,124,0.703,125,0.606,126,0.703,127,0.606,128,0.703,129,0.606,130,0.703,131,0.703,132,1.061,133,1.281,134,0.703,135,0.703,136,0.703,137,0.017,138,0.017,144,0.703,152,1.218,160,2.011,162,1.523,163,1.401,170,3.183,181,1.322,183,1.306,238,1.864,253,2.365,260,1.732,265,3.627,277,1.502,278,1.864,279,2.176,280,1.732,282,2.036,306,1.733,315,1.612,326,0.933,333,3.289,353,2.146,359,1.502,360,2.598,366,1.864,367,2.547,379,2.586,405,3.627,436,2.542,452,1.69,460,1.502,596,3.526,597,2.586,604,1.847,1111,2.591,1115,1.847,1117,2.273,1119,3.183,1122,3.751,1123,3.751,1124,3.526,1128,2.851,1158,3.183,1245,3.183,1277,4.237,1278,3.672,1291,1.847,1293,2.036,1294,2.273,1297,3.627,1316,2.273,1427,4.533,1440,3.627,1517,3.627,1522,5.077,1523,5.077,1524,2.591,1525,4.301,1526,4.301,1527,4.301,1528,4.301,1529,4.963,1530,5.376,1531,4.301,1532,4.301,1533,3.072,1534,4.301,1535,3.072,1536,4.301,1537,3.072,1538,4.301,1539,4.301,1540,3.072,1541,3.072,1542,3.072,1543,3.072,1544,3.072,1545,3.072,1546,3.072]],["title/injectables/ShoppingCartService.html",[249,1.094,355,2.019]],["body/injectables/ShoppingCartService.html",[3,0.246,4,0.216,8,0.216,12,0.491,15,0.85,17,0.524,26,0.446,37,0.223,38,0.268,40,0.637,42,1.029,45,0.818,47,0.691,49,1.175,51,0.787,52,0.028,53,0.591,54,0.321,55,0.787,57,1.697,59,1.193,62,0.943,63,1.804,64,2.072,65,0.861,66,0.873,68,0.524,69,0.484,70,0.68,71,0.374,72,0.34,85,0.246,86,0.409,87,0.996,88,0.757,137,0.016,138,0.016,142,1.649,148,2.437,152,1.833,154,3.319,157,2.51,162,1.476,163,1.333,181,1.356,211,1.455,230,2.637,239,1.535,249,1.333,251,1.45,253,2.866,260,2.431,261,2.714,270,3.856,271,2.149,275,2.461,276,2.461,277,1.668,278,2.259,279,2.072,280,2.099,281,2.714,284,3.628,298,1.576,299,1.45,301,1.953,302,2.461,304,1.723,305,2.12,306,1.001,315,1.535,338,3.452,355,2.461,360,2.665,362,3.029,363,2.437,365,2.252,366,2.259,367,2.639,368,2.461,371,3.314,373,1.899,375,2.714,382,3.029,402,3.452,424,1.775,430,1.723,436,2.84,451,2.416,452,1.576,454,2.12,455,1.899,460,1.001,476,3.029,492,1.154,493,2.417,511,2.901,519,3.029,547,1.45,551,3.133,604,2.461,629,2.461,1079,1.899,1084,2.714,1291,3.447,1329,4.834,1330,3.452,1448,3.452,1547,4.977,1548,2.416,1549,4.094,1550,4.777,1551,4.094,1552,4.094,1553,4.094,1554,2.865,1555,4.094,1556,4.094,1557,4.094,1558,4.094,1559,5.512,1560,2.865,1561,4.094,1562,4.094,1563,2.865,1564,5.212,1565,4.094,1566,2.865,1567,4.094,1568,4.094,1569,2.865,1570,4.777,1571,3.452,1572,4.094,1573,2.865,1574,4.094,1575,2.865,1576,2.865,1577,2.865,1578,2.865,1579,2.865,1580,4.094,1581,2.865,1582,4.094,1583,2.865,1584,2.865,1585,2.865,1586,4.777,1587,2.865,1588,4.094,1589,4.777,1590,2.865,1591,4.094,1592,2.865,1593,2.865,1594,2.865,1595,2.865,1596,4.094,1597,4.094,1598,4.094,1599,2.865,1600,2.865,1601,2.865,1602,2.865,1603,2.865,1604,2.865]],["title/interfaces/User.html",[72,0.398,139,1.259]],["body/interfaces/User.html",[3,0.368,4,0.324,8,0.324,12,0.368,15,0.764,17,0.442,37,0.2,38,0.352,52,0.028,54,0.37,59,1.229,61,3.559,62,1.346,63,1.937,67,1.957,72,0.637,85,0.368,123,1.122,137,0.021,138,0.021,139,1.609,140,2.36,142,2.36,143,3.176,145,2.581,149,2.581,151,2.473,152,1.659,157,2.162,158,1.864,162,1.826,163,1.748,225,2.717,232,2.327,277,2.046,282,3.559,400,3.376,401,2.717,419,3.691,420,3.376,423,3.228,425,3.973,426,3.973,427,3.691,1514,4.527,1605,3.619,1606,4.292,1607,5.177,1608,5.177,1609,5.369,1610,5.369,1611,4.527,1612,5.369,1613,5.369,1614,5.369]],["title/components/UserManagementComponent.html",[0,0.013,28,0.663]],["body/components/UserManagementComponent.html",[0,0.02,1,0.602,2,0.91,3,0.261,4,0.23,5,0.698,6,0.698,7,0.698,8,0.23,11,2.021,12,0.423,13,0.979,17,0.519,20,0.698,21,1.537,22,1.537,23,0.698,24,1.131,25,0.979,26,0.665,27,0.979,28,1.058,29,0.602,30,0.602,31,0.602,32,1.305,33,0.979,34,3.165,35,0.979,36,3.165,37,0.142,38,0.28,40,0.665,41,1.415,42,0.976,43,1.228,44,1.375,45,0.889,47,0.988,48,1.494,49,1.052,50,1.627,51,0.435,52,0.028,53,0.53,54,0.277,55,0.435,56,2.57,57,0.993,63,1.825,65,0.61,66,0.903,68,0.557,69,0.515,70,0.763,71,0.398,72,0.764,73,4.672,75,0.665,77,1.051,80,0.844,83,0.75,84,0.926,85,0.261,86,0.435,87,0.515,97,3.221,98,0.698,99,0.979,100,0.979,101,0.698,102,1.14,103,0.698,104,0.979,105,0.602,106,0.698,107,0.602,108,0.698,109,0.602,110,0.979,111,0.602,112,0.398,113,0.979,114,0.698,115,0.602,116,0.698,117,0.602,118,0.698,119,0.602,120,0.602,121,0.698,122,0.602,123,0.782,124,0.698,125,0.602,126,0.698,127,0.602,128,0.698,129,0.602,130,0.698,131,0.698,132,0.602,133,0.649,134,0.698,135,0.698,136,0.698,137,0.017,138,0.017,146,2.322,148,2,158,1.777,168,2.867,172,2.311,173,3.657,177,2.711,178,2.165,181,1.052,183,1.627,188,2.165,189,2.505,198,1.321,199,1.543,200,2.256,201,2.256,202,2.021,203,1.321,204,2.971,206,1.833,207,1.543,209,1.745,210,2.501,211,1.415,221,2.536,222,2.96,224,3.221,225,2.711,226,3.221,227,3.551,238,1.854,276,1.833,400,2.718,419,3.221,420,3.473,423,3.221,424,2.322,427,3.221,516,1.723,551,2.971,606,4.933,757,3.964,1152,1.543,1228,2.256,1240,2.572,1286,3.551,1372,2.256,1376,2.256,1415,3.964,1416,3.964,1417,3.964,1477,2.57,1479,2.57,1486,3.607,1487,3.607,1511,3.607,1615,5.324,1616,4.942,1617,4.942,1618,4.278,1619,3.048,1620,3.048,1621,3.048,1622,3.048,1623,3.048,1624,3.048,1625,3.048,1626,3.048,1627,3.048,1628,3.048,1629,3.048,1630,3.048,1631,3.048,1632,3.048,1633,3.048,1634,3.048,1635,3.048,1636,3.048,1637,3.048,1638,5.358,1639,3.048]],["title/injectables/UserService.html",[249,1.094,354,1.7]],["body/injectables/UserService.html",[3,0.171,4,0.15,8,0.15,12,0.488,15,0.85,17,0.513,19,1.875,26,0.813,37,0.146,38,0.204,40,0.485,45,0.841,47,0.914,49,0.767,51,0.772,52,0.028,53,0.58,54,0.318,55,0.772,57,0.649,59,1.239,61,2.067,62,0.988,63,1.852,65,0.9,66,0.364,67,1.922,68,0.57,69,0.527,70,0.567,71,0.26,72,0.767,85,0.171,86,0.284,87,1.021,123,1.153,137,0.012,138,0.012,142,2.179,144,0.995,146,1.884,148,2.032,149,2.613,151,2.292,158,1.728,162,1.533,163,2.066,170,2.308,209,1.251,211,1.675,219,3.665,221,1.352,239,2.028,249,1.015,251,1.008,253,3.241,260,2.555,261,3.316,263,2.63,264,2.613,270,3.216,271,2.266,275,1.875,277,1.747,278,1.884,279,1.578,280,2.373,281,2.881,284,3.008,290,2.308,296,2.028,298,1.096,299,1.008,301,2.174,302,1.875,304,1.198,305,2.843,306,0.696,315,1.44,354,1.578,363,1.458,378,2.63,396,1.352,400,3.189,401,3.06,419,3.344,420,3.571,423,1.875,424,1.352,425,2.308,426,2.308,427,3.344,444,3.587,448,1.68,460,1.747,519,3.216,521,3.665,551,3.143,592,2.738,624,3.316,629,1.875,630,2.63,899,3.931,1084,1.321,1113,4.218,1273,2.881,1363,4.601,1364,3.421,1418,2.308,1460,3.24,1466,2.63,1506,4.218,1507,3.702,1571,2.63,1607,3.665,1608,3.665,1611,2.63,1640,1.68,1641,3.119,1642,3.842,1643,3.842,1644,3.119,1645,3.119,1646,3.119,1647,3.119,1648,4.346,1649,3.119,1650,4.346,1651,3.119,1652,3.119,1653,3.119,1654,3.119,1655,1.993,1656,3.119,1657,1.993,1658,3.119,1659,3.119,1660,1.993,1661,1.993,1662,3.119,1663,3.119,1664,1.993,1665,4.346,1666,3.119,1667,5.003,1668,3.119,1669,4.346,1670,3.119,1671,3.119,1672,3.119,1673,3.119,1674,1.993,1675,3.119,1676,3.119,1677,1.993,1678,3.119,1679,3.119,1680,1.993,1681,3.119,1682,3.119,1683,3.119,1684,1.993,1685,3.119,1686,3.119,1687,3.119,1688,3.119,1689,1.993,1690,3.119,1691,1.993,1692,3.119,1693,3.119,1694,3.842,1695,2.63,1696,3.119,1697,3.119,1698,3.119,1699,4.346,1700,3.119,1701,3.119,1702,1.993,1703,1.993,1704,3.119,1705,1.993,1706,1.993,1707,1.68,1708,1.68,1709,1.993,1710,3.842,1711,1.993,1712,1.993,1713,1.993,1714,1.993,1715,1.993,1716,1.993,1717,1.993,1718,1.993,1719,1.993,1720,1.993,1721,1.993,1722,1.993,1723,4.346,1724,3.119,1725,1.993,1726,1.993,1727,1.993,1728,1.993,1729,3.119,1730,1.993,1731,1.993,1732,1.993,1733,3.119,1734,1.993,1735,1.993,1736,3.842,1737,1.993,1738,1.993,1739,1.993,1740,1.993,1741,1.993,1742,1.993,1743,3.119,1744,3.119,1745,3.119,1746,4.346,1747,3.119,1748,3.119,1749,3.119,1750,4.346,1751,3.119,1752,3.119,1753,3.119,1754,4.346,1755,3.119,1756,3.119,1757,1.993,1758,1.993,1759,1.993]],["title/coverage.html",[1760,3.857]],["body/coverage.html",[0,0.027,1,0.8,8,0.306,9,3.417,10,3.417,11,3.782,28,0.8,29,0.8,30,0.8,31,0.8,44,0.928,52,0.028,54,0.227,72,0.481,73,2.998,75,0.63,76,2.998,78,2.998,81,2.998,105,0.8,107,0.8,109,0.8,111,0.8,112,0.528,115,0.8,117,0.8,119,0.8,120,0.8,122,0.8,125,0.8,127,0.8,129,0.8,132,0.8,137,0.021,138,0.021,139,2.329,141,3.417,165,3.831,166,2.998,167,3.417,204,2.436,205,2.686,209,1.319,238,2.244,249,2.069,250,2.686,252,3.417,306,1.415,318,3.417,328,3.417,354,2.05,355,2.436,373,3.985,436,1.756,489,3.831,490,3.417,491,3.831,511,2.05,547,2.05,603,3.417,615,3.417,949,5.357,1002,3.417,1088,3.417,1125,3.417,1126,3.417,1127,3.831,1159,3.417,1219,3.417,1243,3.417,1274,3.782,1275,2.686,1299,3.417,1300,3.417,1360,3.831,1361,3.417,1362,3.417,1364,2.436,1383,3.417,1384,3.417,1400,2.686,1401,2.686,1425,3.417,1459,3.417,1463,3.417,1464,3.417,1465,3.417,1512,3.417,1513,3.417,1522,3.417,1523,3.417,1524,3.417,1547,3.417,1548,3.417,1605,3.417,1615,3.417,1640,3.417,1760,3.417,1761,4.052,1762,4.052,1763,4.052,1764,7.009,1765,6.012,1766,6.458,1767,3.417,1768,3.417,1769,3.417,1770,3.417,1771,3.417,1772,6.458,1773,6.012,1774,4.052,1775,5.177,1776,4.052,1777,4.052,1778,4.052,1779,5.07,1780,4.052,1781,4.052]],["title/dependencies.html",[1782,2.079,1783,3.404]],["body/dependencies.html",[52,0.028,71,0.672,83,1.267,137,0.024,138,0.024,203,2.233,326,1.564,449,3.811,1707,4.343,1708,4.343,1783,4.343,1784,5.151,1785,6.833,1786,5.151,1787,5.994,1788,5.994,1789,5.151,1790,5.151,1791,5.151,1792,5.151,1793,5.151,1794,5.151,1795,5.151,1796,5.151,1797,5.151]],["title/miscellaneous/enumerations.html",[1798,1.545,1799,3.404]],["body/miscellaneous/enumerations.html",[37,0.245,52,0.027,69,1.128,137,0.024,138,0.024,430,3.646,1378,5.113,1798,2.89,1799,4.431,1800,5.255,1801,6.064,1802,5.255,1803,6.064,1804,6.064,1805,6.064,1806,6.064]],["title/miscellaneous/functions.html",[1798,1.545,1807,3.404]],["body/miscellaneous/functions.html",[12,0.407,15,0.829,17,0.358,37,0.222,47,0.802,51,0.678,52,0.026,53,0.509,54,0.266,55,0.678,59,1.087,65,0.907,67,1.801,137,0.023,138,0.023,159,2.856,162,1.801,198,2.756,202,4.215,204,3.685,205,4.062,224,3.435,227,3.149,232,2.059,260,2.561,271,2.142,296,2.383,365,3.142,401,3.101,424,2.059,624,4.215,1240,2.856,1400,4.062,1401,3.787,1475,4.818,1779,4.006,1798,2.613,1807,4.006,1808,6.359,1809,5.714,1810,4.751,1811,4.751,1812,4.751,1813,4.751,1814,4.751,1815,4.751,1816,4.751,1817,4.751,1818,4.751,1819,4.751,1820,4.751,1821,4.751,1822,5.714,1823,4.751,1824,4.751,1825,4.751,1826,4.751,1827,4.751,1828,4.751,1829,4.751,1830,4.751]],["title/index.html",[37,0.131,1831,2.81,1832,2.81]],["body/index.html",[0,0.024,4,0.361,52,0.023,53,0.513,137,0.023,138,0.023,209,1.558,286,4.035,323,4.035,721,4.035,763,4.035,806,5.581,1695,4.035,1782,3.541,1833,5.739,1834,4.786,1835,6.148,1836,6.148,1837,4.035,1838,4.786,1839,4.786,1840,5.739,1841,6.519,1842,6.692,1843,4.786,1844,4.786,1845,4.786,1846,4.786,1847,4.786,1848,4.786,1849,4.786,1850,4.786,1851,4.786,1852,4.786,1853,4.786,1854,6.148,1855,6.148,1856,4.786,1857,6.374,1858,4.786,1859,4.786,1860,4.786,1861,4.786,1862,5.739,1863,5.739,1864,6.374,1865,4.786,1866,5.739,1867,5.739,1868,4.786,1869,4.786,1870,4.786,1871,4.786,1872,5.739,1873,4.786,1874,4.786,1875,4.786,1876,4.786,1877,6.148,1878,4.786,1879,4.786,1880,4.786,1881,3.541,1882,4.786,1883,4.786]],["title/modules.html",[1884,3.857]],["body/modules.html",[52,0.025,137,0.025,138,0.025,1884,4.604]],["title/overview.html",[1881,3.384]],["body/overview.html",[2,1.152,52,0.024,97,3.255,137,0.024,138,0.024,140,2.978,251,2.74,734,4.566,791,4.566,1881,4.006]],["title/properties.html",[38,0.265,1782,2.079]],["body/properties.html",[38,0.356,52,0.026,137,0.024,138,0.024,1837,4.585,1885,5.437]],["title/miscellaneous/variables.html",[1227,2.987,1798,1.545]],["body/miscellaneous/variables.html",[15,0.649,17,0.443,26,0.913,37,0.232,44,1.139,52,0.028,54,0.329,57,1.62,59,1.139,63,1.409,68,1.073,69,0.991,137,0.023,138,0.023,163,1.62,184,4.194,211,1.551,280,2.003,301,2.201,315,1.864,353,1.737,604,2.99,624,3.297,1137,3.681,1220,4.194,1227,3.681,1507,3.681,1767,4.194,1768,5.269,1769,4.194,1770,4.952,1771,4.952,1798,2.735,1886,4.974,1887,4.974,1888,4.974,1889,4.974,1890,4.974,1891,4.974,1892,4.974,1893,5.873,1894,4.974,1895,4.974,1896,4.974,1897,4.974,1898,4.974]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":306,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1885,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["0/10",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["0665",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["09b9b7597d35",{"_index":1196,"title":{},"body":{"injectables/CardsService.html":{}}}],["0d24",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1069,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1753,"title":{},"body":{"injectables/UserService.html":{}}}],["100960c55891.jpg?1650599698",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":287,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13/13",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["139",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["18.0.0",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1838,"title":{},"body":{"index.html":{}}}],["19",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1f9c",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":290,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["20",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["23d3",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3213",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{}}}],["373d73475912",{"_index":1188,"title":{},"body":{"injectables/CardsService.html":{}}}],["3835",{"_index":1066,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{},"components/PaymentComponent.html":{}}}],["4.2.0",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1452,"title":{},"body":{"components/PaymentComponent.html":{}}}],["4138",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4350",{"_index":1067,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a4b",{"_index":1194,"title":{},"body":{"injectables/CardsService.html":{}}}],["4a64",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4c19",{"_index":1186,"title":{},"body":{"injectables/CardsService.html":{}}}],["4d25",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d71",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4df2",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["6/6",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1754,"title":{},"body":{"injectables/UserService.html":{}}}],["67",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6c98",{"_index":1185,"title":{},"body":{"injectables/CardsService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7e73",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["832767d2",{"_index":1184,"title":{},"body":{"injectables/CardsService.html":{}}}],["8749",{"_index":1187,"title":{},"body":{"injectables/CardsService.html":{}}}],["8c01",{"_index":1068,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8cbf",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f2b",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["93b4",{"_index":1195,"title":{},"body":{"injectables/CardsService.html":{}}}],["9475",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9798",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["99e9",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9eb7",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a23f",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a70e",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":200,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":516,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1613,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["acion",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/PaymentComponent.html":{}}}],["aclcular",{"_index":1342,"title":{},"body":{"components/OrderListComponent.html":{}}}],["activatedroute",{"_index":1134,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["activo",{"_index":1313,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1571,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":551,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["additem",{"_index":1132,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1138,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemtoshoppingcart",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1558,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":314,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":248,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":245,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":246,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":247,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":317,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1515,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":244,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":250,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1113,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":218,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1153,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":230,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":609,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aleatorio",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["alert('dirección",{"_index":217,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1505,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1639,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1319,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1545,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1114,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1152,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1508,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(message",{"_index":1406,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["alert(this.submittext",{"_index":590,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacenar",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":1823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1835,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1197,"title":{},"body":{"injectables/CardsService.html":{}}}],["angular/compiler",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":203,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{}}}],["antes",{"_index":1443,"title":{},"body":{"components/PaymentComponent.html":{}}}],["apellido",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["api/cards.service",{"_index":1573,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1768,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1847,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1181,"title":{},"body":{"injectables/CardsService.html":{}}}],["applicationconfig",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1271,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1858,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["attach",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":1182,"title":{},"body":{"injectables/CardsService.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1848,"title":{},"body":{"index.html":{}}}],["av",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b45f",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ba94",{"_index":1193,"title":{},"body":{"injectables/CardsService.html":{}}}],["base",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":1183,"title":{},"body":{"injectables/CardsService.html":{}}}],["beast",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfe9",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bolleano",{"_index":1285,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["boolean",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1252,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1857,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1530,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1474,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1334,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1338,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1358,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1278,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1288,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1298,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1359,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcula",{"_index":1536,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calcular",{"_index":1290,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["callback",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{}}}],["callback([selectedshoppingcart,hasstock",{"_index":1602,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["callback(false",{"_index":1203,"title":{},"body":{"injectables/CardsService.html":{}}}],["callback(result[1",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["callback(resultcard",{"_index":1213,"title":{},"body":{"injectables/CardsService.html":{}}}],["callback(resultcardlist",{"_index":1218,"title":{},"body":{"injectables/CardsService.html":{}}}],["callback(true",{"_index":1205,"title":{},"body":{"injectables/CardsService.html":{}}}],["cambiar",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1475,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1510,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":597,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":1875,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1417,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1119,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1121,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1079,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1123,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1122,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1120,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1599,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1600,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":498,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1591,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem,callback",{"_index":1199,"title":{},"body":{"injectables/CardsService.html":{}}}],["carditem.cardname",{"_index":1155,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1077,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1074,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["carditem.id",{"_index":1083,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["carditem.model",{"_index":1521,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1157,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1156,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":547,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1092,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.findindex(carditem",{"_index":1208,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardlist.foreach(card",{"_index":1296,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardlist.push(card",{"_index":1207,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardlist.reduce((maxid",{"_index":1206,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardlist[index",{"_index":1209,"title":{},"body":{"injectables/CardsService.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":500,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":504,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["cardservice",{"_index":1135,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["cardshop",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardsservcie",{"_index":1095,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardsservice",{"_index":511,"title":{"injectables/CardsService.html":{}},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardtext",{"_index":510,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":508,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1518,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1329,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1158,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["carros",{"_index":1549,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1526,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1528,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1527,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1524,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:24",{"_index":1537,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:28",{"_index":1540,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:32",{"_index":1531,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:48",{"_index":1535,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:65",{"_index":1533,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1513,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1548,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:121",{"_index":1566,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1555,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:34",{"_index":1563,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:53",{"_index":1569,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:69",{"_index":1560,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1523,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":492,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":493,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1142,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["catidad",{"_index":613,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cerrado",{"_index":1264,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1272,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1850,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1879,"title":{},"body":{"index.html":{}}}],["checkear",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["checkemail",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["checkemail(email",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["checkrecovery",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["checkrecovery(token",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["checkstock",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1871,"title":{},"body":{"index.html":{}}}],["choose",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["clave",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":1836,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["code",{"_index":1852,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":594,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1424,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["color",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1872,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["completo",{"_index":1145,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1291,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1517,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1509,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":595,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":505,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1301,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1311,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1390,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["console.error('error",{"_index":1107,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["console.log(user.id",{"_index":1758,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":301,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(cardsservice",{"_index":1554,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(http",{"_index":1164,"title":{},"body":{"injectables/CardsService.html":{}}}],["constructor(private",{"_index":207,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1133,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1336,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":1391,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contega",{"_index":1813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":226,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contenido",{"_index":1525,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["content",{"_index":1180,"title":{},"body":{"injectables/CardsService.html":{}}}],["contiene",{"_index":1245,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["contrario",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasena/'+token",{"_index":1382,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["contrasenas",{"_index":1824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1423,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["control",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["contructor",{"_index":513,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{}}}],["copy",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1315,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":241,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":545,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1293,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1625,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/api/cards.service",{"_index":546,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/shopping",{"_index":1351,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1374,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["core/validators/validators",{"_index":206,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["correlativo",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":164,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":611,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1760,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["creacion",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["creado",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":240,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:27",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:38",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:58",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:62",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:66",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:70",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:77",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":605,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["createorupdatecarditem(card",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["createrecovery",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["createrecovery(email",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["createrecovery(email:string",{"_index":1730,"title":{},"body":{"injectables/UserService.html":{}}}],["createshoppingcar",{"_index":1551,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1562,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1520,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1270,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crypto",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["cryptojs.lib.wordarray.random(16",{"_index":1740,"title":{},"body":{"injectables/UserService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1124,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentdate",{"_index":1744,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdate.gettime",{"_index":1749,"title":{},"body":{"injectables/UserService.html":{}}}],["currentshoppingcart",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currenttimestamp",{"_index":1748,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser",{"_index":1616,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d23a4.appspot.com/o/cards.json?alt=media&token=3ee7efb3",{"_index":1192,"title":{},"body":{"injectables/CardsService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["damage",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{}}}],["date",{"_index":1460,"title":{},"body":{"interfaces/Recovery.html":{},"injectables/UserService.html":{}}}],["datos",{"_index":1638,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["dcon",{"_index":1532,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1286,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1514,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":1519,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1473,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1306,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["dependencies",{"_index":1783,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":494,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1314,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":497,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":496,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":491,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":524,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:109",{"_index":526,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:113",{"_index":528,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":530,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:121",{"_index":532,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:125",{"_index":534,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:129",{"_index":536,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:133",{"_index":538,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:137",{"_index":540,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":542,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:145",{"_index":544,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:152",{"_index":515,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1282,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1284,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":517,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1281,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":520,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":512,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1289,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":514,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":490,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1275,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1099,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["dev",{"_index":1844,"title":{},"body":{"index.html":{}}}],["development",{"_index":1839,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{}}}],["differenceinhours",{"_index":1752,"title":{},"body":{"injectables/UserService.html":{}}}],["differenceinmillis",{"_index":1750,"title":{},"body":{"injectables/UserService.html":{}}}],["direccion",{"_index":156,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":220,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1856,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1861,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1614,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1860,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["donde",{"_index":1435,"title":{},"body":{"components/PaymentComponent.html":{}}}],["double",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":1869,"title":{},"body":{"index.html":{}}}],["each",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":606,"title":{},"body":{"interfaces/CardItem.html":{},"components/UserManagementComponent.html":{}}}],["editar",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["editcardsjson",{"_index":1161,"title":{},"body":{"injectables/CardsService.html":{}}}],["editcardsjson(cardlist",{"_index":1169,"title":{},"body":{"injectables/CardsService.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":296,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1269,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["encontrar",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1611,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entrada",{"_index":1283,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{}}}],["entre",{"_index":1416,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1799,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1378,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["equal",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":592,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/UserService.html":{}}}],["es",{"_index":221,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1564,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["espera",{"_index":1438,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esta",{"_index":1116,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1866,"title":{},"body":{"index.html":{}}}],["exile",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1312,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["existentes",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1503,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["expirado",{"_index":1756,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fabled",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":315,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fecha",{"_index":1461,"title":{},"body":{"interfaces/Recovery.html":{}}}],["field1",{"_index":1828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1851,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1248,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["finalizacion",{"_index":1445,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1324,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["findrecovery",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["findrecovery(token",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser",{"_index":1731,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser.id",{"_index":1734,"title":{},"body":{"injectables/UserService.html":{}}}],["finish",{"_index":1302,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1304,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1303,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1300,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1305,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1307,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1299,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1310,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1467,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1469,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1468,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1465,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1483,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1484,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1476,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1471,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1472,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1478,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1480,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1481,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1482,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1464,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formaulario",{"_index":1394,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["formcontrol",{"_index":198,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1631,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1629,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1630,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["four",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":291,"title":{},"body":{"injectables/AddressService.html":{}}}],["fromulario",{"_index":518,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["fucion",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1557,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["function",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["functions",{"_index":1807,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1876,"title":{},"body":{"index.html":{}}}],["gain",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generado",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["generar",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["generate",{"_index":1854,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1834,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["generic",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallcards",{"_index":1162,"title":{},"body":{"injectables/CardsService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1552,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1565,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcard(cardid",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcardlistwithfilters",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcardlistwithfilters(category",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["getcardname",{"_index":523,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":531,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":543,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":539,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":533,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1398,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1372,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1477,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":537,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1479,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":541,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":535,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":525,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getregion",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":527,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":529,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getting",{"_index":1831,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1878,"title":{},"body":{"index.html":{}}}],["god",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1093,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["habilidad",{"_index":607,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1612,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1325,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1637,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1529,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1589,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["headers",{"_index":1178,"title":{},"body":{"injectables/CardsService.html":{}}}],["heliod",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1877,"title":{},"body":{"index.html":{}}}],["henge",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1267,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http",{"_index":1167,"title":{},"body":{"injectables/CardsService.html":{}}}],["http://localhost:4200",{"_index":1846,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1165,"title":{},"body":{"injectables/CardsService.html":{}}}],["httpheaders",{"_index":1179,"title":{},"body":{"injectables/CardsService.html":{}}}],["httpoptions",{"_index":1160,"title":{},"body":{"injectables/CardsService.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://firebasestorage.googleapis.com/v0/b/mtg",{"_index":1190,"title":{},"body":{"injectables/CardsService.html":{}}}],["human",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1078,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["if(cardindex",{"_index":1595,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1295,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(cardlist.length",{"_index":1202,"title":{},"body":{"injectables/CardsService.html":{}}}],["if(category",{"_index":1072,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["if(differenceinhours",{"_index":1755,"title":{},"body":{"injectables/UserService.html":{}}}],["if(finduser",{"_index":1732,"title":{},"body":{"injectables/UserService.html":{}}}],["if(hasstock",{"_index":1598,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1084,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(message",{"_index":1405,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["if(recovery.userid",{"_index":1745,"title":{},"body":{"injectables/UserService.html":{}}}],["if(result",{"_index":589,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["if(search",{"_index":1075,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1592,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1447,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(this.authservice.getuser().id",{"_index":1111,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1636,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.checkemail(email",{"_index":1711,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1541,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1317,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1321,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":549,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1709,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.userservie.checkemail(this.email?.value",{"_index":1379,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["if(user.id",{"_index":1757,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":507,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":598,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["imagenes",{"_index":1287,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["implements",{"_index":1874,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":237,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1609,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":1825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":1812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1115,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["inicio",{"_index":1309,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":249,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1292,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1279,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["intento",{"_index":1462,"title":{},"body":{"interfaces/Recovery.html":{}}}],["intentos",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":139,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invocar",{"_index":1108,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["isactive",{"_index":1607,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1431,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1331,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":519,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["items",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"components/ShoppingCartComponent.html":{}}}],["jegantha",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["js",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["juego",{"_index":608,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":612,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1868,"title":{},"body":{"index.html":{}}}],["khm",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":232,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":1816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":227,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1129,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1131,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1130,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1127,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1136,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:27",{"_index":1349,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:31",{"_index":1350,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:35",{"_index":1337,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:47",{"_index":1140,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:50",{"_index":1343,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:60",{"_index":1347,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:70",{"_index":1341,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:80",{"_index":1139,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:85",{"_index":1339,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1126,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":239,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":231,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/OrderListComponent.html":{}}}],["lo",{"_index":1418,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1456,"title":{},"body":{"components/PaymentComponent.html":{}}}],["localtoken",{"_index":1388,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["logeduser",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["loguear",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":600,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1089,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1091,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1090,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1088,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:25",{"_index":1096,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:42",{"_index":1100,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:57",{"_index":1102,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:65",{"_index":1097,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:24",{"_index":235,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1620,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1618,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:35",{"_index":236,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts:65",{"_index":1621,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:69",{"_index":1622,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:73",{"_index":1623,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:77",{"_index":1624,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:84",{"_index":1619,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":509,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/PasswordResetComponent.html":{}}}],["manejo",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["many",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":1266,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(currenttimestamp",{"_index":1751,"title":{},"body":{"injectables/UserService.html":{}}}],["math.max(maxid",{"_index":304,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":1817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1420,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1572,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1419,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["mensaje",{"_index":521,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/UserService.html":{}}}],["merfolk",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["message",{"_index":1403,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":288,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":1818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1421,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1798,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":1827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":297,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{}}}],["models/recovery.model",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["models/shopping",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{}}}],["modifycarditem",{"_index":1163,"title":{},"body":{"injectables/CardsService.html":{}}}],["modifycarditem(card",{"_index":1175,"title":{},"body":{"injectables/CardsService.html":{}}}],["modules",{"_index":1884,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["mostrar",{"_index":1128,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["much",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1244,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1247,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1246,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1845,"title":{},"body":{"index.html":{}}}],["need",{"_index":1873,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":294,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":209,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":300,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":312,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":307,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":309,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":310,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":311,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":308,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":302,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1574,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1576,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1578,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1577,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1712,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1716,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1714,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1717,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1718,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1715,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1842,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":219,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["number,callback",{"_index":1583,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["numerico",{"_index":161,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":159,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":1814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":228,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":229,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1143,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{}}}],["obetener",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":1177,"title":{},"body":{"injectables/CardsService.html":{}}}],["objeto",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":222,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["observable",{"_index":1171,"title":{},"body":{"injectables/CardsService.html":{}}}],["obteener",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["ocurrido",{"_index":1320,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":1810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":204,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":1815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":205,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1249,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1323,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1328,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1356,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1357,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1332,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1326,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1880,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1881,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1782,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1883,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1427,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parametros",{"_index":1141,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["params.get('categoria",{"_index":1147,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('recovery",{"_index":1402,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["params.get('search",{"_index":1148,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["pasarela",{"_index":1534,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["passage",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordrecoverycomponent",{"_index":122,"title":{"components/PasswordRecoveryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordresetcomponent",{"_index":125,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordvalidator",{"_index":1400,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1428,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1430,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1429,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":127,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1516,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1268,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1870,"title":{},"body":{"index.html":{}}}],["play",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1458,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":596,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":506,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["procesando",{"_index":1455,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proceso",{"_index":1426,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1833,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":298,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes),providehttpclient",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":225,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":501,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":162,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["randombytes",{"_index":1739,"title":{},"body":{"injectables/UserService.html":{}}}],["randombytes.tostring(cryptojs.enc.hex",{"_index":1741,"title":{},"body":{"injectables/UserService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1454,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1567,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1446,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1330,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["recoverpassform",{"_index":1367,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery",{"_index":1364,"title":{"interfaces/Recovery.html":{}},"body":{"components/PasswordRecoveryComponent.html":{},"interfaces/Recovery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["recovery'},{'name",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["recovery.component.css",{"_index":1366,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.html",{"_index":1365,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts",{"_index":1362,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recovery.component.ts:26",{"_index":1369,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:38",{"_index":1370,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:47",{"_index":1373,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:54",{"_index":1371,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.date",{"_index":1735,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.date.gettime",{"_index":1747,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.token",{"_index":1736,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.userid",{"_index":1733,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery/password",{"_index":1361,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recoverytimestamp",{"_index":1746,"title":{},"body":{"injectables/UserService.html":{}}}],["recuperacion",{"_index":1363,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"interfaces/Recovery.html":{},"injectables/UserService.html":{}}}],["recuperar",{"_index":1273,"title":{},"body":{"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/UserService.html":{}}}],["redireccionar",{"_index":1098,"title":{},"body":{"components/CardManageComponent.html":{}}}],["redirecciones",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["redirect",{"_index":1432,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"components/ShoppingCartComponent.html":{}}}],["redirigiendo",{"_index":1457,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigir",{"_index":1444,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1882,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1556,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":1811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":233,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1502,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1470,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":129,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1466,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["región",{"_index":223,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1849,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":1829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":295,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1610,"title":{},"body":{"interfaces/User.html":{}}}],["reset",{"_index":1385,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["reset.component.css",{"_index":1387,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.html",{"_index":1386,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":1384,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:27",{"_index":1396,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:31",{"_index":1392,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:49",{"_index":1393,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:77",{"_index":1397,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:81",{"_index":1399,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:88",{"_index":1395,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":1383,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["respectivos",{"_index":1345,"title":{},"body":{"components/OrderListComponent.html":{}}}],["response",{"_index":1105,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["response.filter(carditem",{"_index":1216,"title":{},"body":{"injectables/CardsService.html":{}}}],["response.find(card",{"_index":1212,"title":{},"body":{"injectables/CardsService.html":{}}}],["rest",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["result.filter(carditem",{"_index":1076,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":522,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{}}}],["resultcard:carditem",{"_index":1211,"title":{},"body":{"injectables/CardsService.html":{}}}],["resultcardlist",{"_index":1215,"title":{},"body":{"injectables/CardsService.html":{}}}],["resultcardlist.filter(carditem",{"_index":1217,"title":{},"body":{"injectables/CardsService.html":{}}}],["resultcardlist:carditem",{"_index":1214,"title":{},"body":{"injectables/CardsService.html":{}}}],["results",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":211,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1608,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":299,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/CardsService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1137,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":495,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["routeroutlet",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1841,"title":{},"body":{"index.html":{}}}],["running",{"_index":1862,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardsService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1253,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1401,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1411,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":289,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1853,"title":{},"body":{"index.html":{}}}],["scute",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":163,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":1826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["segundos",{"_index":1439,"title":{},"body":{"components/PaymentComponent.html":{}}}],["seleccionada",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["seleccionado",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["seleccionar",{"_index":1103,"title":{},"body":{"components/CardManageComponent.html":{}}}],["selecionada",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selecionado",{"_index":1276,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["selected",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1588,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1596,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1333,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1586,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1594,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1593,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1601,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1597,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1335,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1346,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1843,"title":{},"body":{"index.html":{}}}],["server",{"_index":1840,"title":{},"body":{"index.html":{}}}],["service",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["sesión",{"_index":1265,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":593,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":502,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setea",{"_index":1348,"title":{},"body":{"components/OrderListComponent.html":{}}}],["setear",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":503,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1094,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1101,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1449,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shop",{"_index":1191,"title":{},"body":{"injectables/CardsService.html":{}}}],["shoppincart.userid",{"_index":1604,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":436,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1584,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":1448,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1585,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":132,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1559,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1550,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":355,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1280,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":614,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":1819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulacion",{"_index":1442,"title":{},"body":{"components/PaymentComponent.html":{}}}],["simular",{"_index":1440,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sistema",{"_index":1606,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":604,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":224,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":1808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":489,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1125,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":603,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/recovery.model.ts",{"_index":1459,"title":{},"body":{"interfaces/Recovery.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1512,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1605,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":293,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/api/cards.service.ts",{"_index":1159,"title":{},"body":{"injectables/CardsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/cards.service.ts:11",{"_index":1189,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:18",{"_index":1166,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:22",{"_index":1172,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:26",{"_index":1168,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:49",{"_index":1176,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:67",{"_index":1170,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:71",{"_index":1173,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/api/cards.service.ts:84",{"_index":1174,"title":{},"body":{"injectables/CardsService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:107",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:124",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:134",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:143",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:161",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:172",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:183",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:191",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:199",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:207",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:215",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1070,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1547,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:118",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:127",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:136",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:157",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:167",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:176",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:202",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:45",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:61",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:95",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1779,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1243,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1257,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1250,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1254,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1256,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1251,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1274,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/password",{"_index":1360,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1425,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1433,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1434,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:59",{"_index":1441,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1463,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1522,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1615,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1832,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1859,"title":{},"body":{"index.html":{}}}],["strike",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["submittext",{"_index":499,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subtotal",{"_index":1297,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1154,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sumar",{"_index":1340,"title":{},"body":{"components/OrderListComponent.html":{}}}],["sun",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sus",{"_index":1344,"title":{},"body":{"components/OrderListComponent.html":{}}}],["suscribible",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1255,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1422,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["t",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tempo",{"_index":1437,"title":{},"body":{"components/PaymentComponent.html":{}}}],["tener",{"_index":1415,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":1809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":1865,"title":{},"body":{"index.html":{}}}],["testing",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1864,"title":{},"body":{"index.html":{}}}],["texto",{"_index":601,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":208,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":215,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":212,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":213,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":214,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":316,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":313,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":303,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart",{"_index":1151,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":216,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1316,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":242,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":548,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1627,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1112,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1258,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.registrationform.get('username')?.value,this.registrationform.get('password')?.value",{"_index":1504,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1263,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1109,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1322,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":552,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":581,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":587,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":585,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":582,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":584,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":586,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":583,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":578,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":579,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":580,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1071,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1073,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1086,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1082,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1081,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1080,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1085,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.cardlist",{"_index":1106,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.cardservice.getallcards().subscribe",{"_index":1150,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.cardservice.getcardlistwithfilters(categoria,search",{"_index":1149,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.cardsservcie.getallcards().subscribe",{"_index":1104,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.cardsservice.createorupdatecarditem(this.selectedcard",{"_index":588,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardsservice.getcard(cardid",{"_index":1587,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.createshoppingcar(userid",{"_index":1590,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1294,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1542,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1318,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(result[0",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.id",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1626,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1632,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.editcardsjson(cardlist).subscribe",{"_index":1204,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.filterform",{"_index":1260,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1261,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.findrecovery(token",{"_index":1743,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generaterandomtoken",{"_index":1737,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getallcards().subscribe",{"_index":1200,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.getcard(cardid).quantity",{"_index":1087,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.gotodetail",{"_index":1110,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1543,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.http.get(this.url",{"_index":1198,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.http.post(this.url,cardlist,this.httpoptions",{"_index":1210,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.isloggedin",{"_index":1259,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1450,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1352,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.localtoken",{"_index":1407,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.logeduser",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id,cardid",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.modifycarditem(card,response",{"_index":1201,"title":{},"body":{"injectables/CardsService.html":{}}}],["this.orderlist",{"_index":1353,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.recoverpassform",{"_index":1375,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.recoverpassform.get('email",{"_index":1377,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.redirect",{"_index":1451,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1485,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1494,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1492,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1501,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1489,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1498,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1490,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1499,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1493,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1500,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1491,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1497,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1495,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1146,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.router.navigate",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/actualizar",{"_index":1381,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1262,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1118,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1117,"title":{},"body":{"components/CardManageComponent.html":{},"components/PasswordResetComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1453,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1546,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":553,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":557,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":558,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":554,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":555,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":556,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1355,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1603,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1580,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1579,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1575,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1582,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":1354,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.submittext",{"_index":550,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1544,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1628,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1635,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1633,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1634,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updatepasswordform",{"_index":1408,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updatepasswordform.get('confirmpassword",{"_index":1413,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updatepasswordform.get('password",{"_index":1412,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updateuser(user",{"_index":1759,"title":{},"body":{"injectables/UserService.html":{}}}],["this.useraddress.asobservable",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":243,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1723,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1725,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1713,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1728,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrecoverytry.find(recovery",{"_index":1742,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrecoverytry.push(recovery",{"_index":1738,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.userservice.checkrecovery(token",{"_index":1404,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.userservice.createuser",{"_index":1496,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updatepassword(this.localtoken,this.password?.value",{"_index":1414,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservie.createrecovery(this.email?.value",{"_index":1380,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["those",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["tine",{"_index":1539,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["tipo",{"_index":599,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["titan",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"injectables/UserService.html":{}}}],["token.\\n",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1277,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trae",{"_index":1144,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["trample",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1561,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/CardsService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1863,"title":{},"body":{"index.html":{}}}],["unless",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1570,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1581,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1726,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1727,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1617,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updatepassword",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepassword(token",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepasswordform",{"_index":1389,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["updateshoppingcart",{"_index":1553,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1568,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":610,"title":{},"body":{"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{}}}],["uro",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1855,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":1729,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":305,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1724,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1710,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":234,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrecoverytry",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":354,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservie",{"_index":1368,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["uso",{"_index":1507,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/PasswordResetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/PasswordRecoveryComponent.html":{}}}],["vacio",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1308,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{}}}],["validaciones",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":201,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":202,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":199,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1376,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1410,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1488,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1487,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1486,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1409,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":210,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validez",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["valki",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":160,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["valores",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"interfaces/Recovery.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":292,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":238,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1227,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["varieble",{"_index":1538,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vehicle",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1327,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["verifica",{"_index":1436,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":1837,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1867,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/CardsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":602,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1511,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":591,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1506,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de creacion de direccion de entrega del cliente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Acion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de direccion\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente de formulario de creacion de direccion de entrega del cliente\n */\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  /**\n   * Formulario de direccion\n   */\n  addressForm!: FormGroup;\n\n  /**\n   * Constructor con dependencia a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n   */\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  /**\n   * Acion submit de formulario\n   */\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Titulo de aplicacion\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * @description\n * Componente principal de la aplicacion\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /**\n   * Titulo de aplicacion\n   */\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de usuario\n\n                                                        \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de direcciones\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:183\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:191\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:215\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:199\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:207\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:172\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:161\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n        this.loggedIn.next(false);\n        return false;\n    }\n\n    this.setUserIdToShoppingCart();\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number, callback: (result: boolean) => void) {\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    this.shoppingCartService.addItemToShoppingCart(\n      this.logedUser.id,cardId,\n      this.currentShoppingCart.value.id,\n      result => {\n        this.currentShoppingCart.next(result[0]);\n        callback(result[1]);\n      }\n    );\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para editar cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardsService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                            \n                        \n\n                \n                    \n                            Contructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardsService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Iniciacion de Formulario de editar cartas\nIniciacion de valores de carta selecionada\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario para editar cartas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:29\n                        \n                    \n\n            \n                \n                    Fromulario para editar carta del catalogo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                        \n                    \n\n            \n                \n                    Variable para item de carta selecionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n            \n                \n                    Variable para mensaje de resultado de submit\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:113\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:125\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:141\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:145\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardsService } from '../core/services/api/cards.service';\n\n/**\n * @description\n * Componente para formulario para editar cartas del catalogo\n */\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n  /**\n   * Fromulario para editar carta del catalogo\n   */\n  cardForm!: FormGroup;\n  /**\n   * Variable para mensaje de resultado de submit\n   */\n  submitText: string = '';\n  /**\n   * Variable para item de carta selecionada\n   */\n  selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Contructor con dependencias a la capa service\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de manejo de cartas\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardsService: CardsService\n  ){}\n\n  /**\n   * Iniciacion de Formulario de editar cartas\n   * Iniciacion de valores de carta selecionada\n   */\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  /**\n   * Accion de submit de formulario para editar cartas\n   */\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    this.cardsService.createOrUpdateCardItem(this.selectedCard,\n      result => {\n        if(result){\n          alert(this.submitText + ' con éxito');\n        }else{\n          alert(this.submitText + ' con error');\n        }\n      }\n    )\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de administracion de cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardsServcie: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardsServcie\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para redireccionar a pantalla de detalle de carta\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Iniciacion de listado de cartas del catalogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion para seleccionar carta en la pantalla\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas del catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CommonModule } from '@angular/common';\nimport { CardsService } from '../core/services/api/cards.service';\n\n/**\n * @description\n * Componente de pantalla de administracion de cartas del catalogo\n */\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n  /**\n   * Listado de cartas del catalogo\n   */\n  cardList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a la capa service\n   * @param authService \n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de cartas del catalogo\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardsServcie: CardsService\n  ){}\n\n  /**\n   * Iniciacion de listado de cartas del catalogo\n   */\n  ngOnInit(): void {\n    this.cardsServcie.getAllCards().subscribe(\n      response => {\n        this.cardList = response;\n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n      }\n    );\n  }\n\n  /**\n   * Accion para seleccionar carta en la pantalla\n   * @param card \n   */\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  /**\n   * Funcion para redireccionar a pantalla de detalle de carta\n   */\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar catalogo de cartas.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthService, cardService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Accion para agregar una carta seleccionada a al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSe obtiene parametros de url:\n -categoria = tipo de carta\n -search = nombre de carta\nSe obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas a mostrar en el catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardsService } from '../core/services/api/cards.service';\n\n/**\n * @description\n * Componente para mostrar catalogo de cartas.\n */\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n  /**\n   * Listado de cartas a mostrar en el catalogo\n   */\n  carditemList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param route Manejo de redirecciones\n   * @param cardItemService Manejo de catalogo de cartas\n   * @param authService Manejo de sesion\n   * \n   */\n  constructor(\n    private route: ActivatedRoute, \n    private authService: AuthService,\n    private cardService: CardsService\n  ) {}\n\n  /**\n   * Iniciacion de componente.\n   * Se obtiene parametros de url:\n   *  -categoria = tipo de carta\n   *  -search = nombre de carta\n   * Se obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n\n      if (categoria !== '' || search !== '') {\n        \n        this.cardService.getCardListWithFilters(categoria,search,\n          result => {\n            this.carditemList = result\n          }\n        );\n\n      }else{\n\n        this.cardService.getAllCards().subscribe(\n          response => {\n            this.carditemList = response;\n          },\n          error => {\n            console.error('Error a invocar cards : ' + error );\n          }\n        );\n\n      }\n    });\n  }\n\n  /**\n   * Accion para agregar una carta seleccionada a al carrito de compras\n   * @param cardId Identificador de carta\n   * @param cardName Nombre de carta\n   */\n  addItem(cardId: number, cardName: string){\n    this.authService.addItemToShoppingCart(\n      cardId,\n      result => {\n        if(result){\n          alert('Se ha agregado '+cardName+' al carrito');\n        }else{\n          alert('No hay suficiente stock para '+cardName);\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardsService.html":{"url":"injectables/CardsService.html","title":"injectable - CardsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/cards.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                editCardsJson\n                            \n                            \n                                getAllCards\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                modifyCardItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/cards.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem, callback: (result: boolean) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCardsJson\n                        \n                    \n                \n            \n            \n                \neditCardsJson(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCards\n                        \n                    \n                \n            \n            \n                \ngetAllCards()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number, callback: (result: CardItem) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string, callback: (result: CardItem[]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyCardItem\n                        \n                    \n                \n            \n            \n                \nmodifyCardItem(card: CardItem, cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/cards.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 832767d2-6c98-4c19-8749-373d73475912' \n    })\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/cards.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/cards.json?alt=media&token=3ee7efb3-ba94-4a4b-93b4-09b9b7597d35'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/api/cards.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CardItem } from '../../models/carditem.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardsService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer 832767d2-6c98-4c19-8749-373d73475912' \n    })\n  }\n\n  private url = 'https://firebasestorage.googleapis.com/v0/b/mtg-shop-d23a4.appspot.com/o/cards.json?alt=media&token=3ee7efb3-ba94-4a4b-93b4-09b9b7597d35';\n\n  constructor(private http: HttpClient) { }\n\n  getAllCards(): Observable{\n    return this.http.get(this.url);\n  }\n  \n  createOrUpdateCardItem(card: CardItem,callback: (result: boolean) => void){\n    this.getAllCards().subscribe(\n      response => {\n        let cardList = this.modifyCardItem(card,response);\n        if(cardList.length == 0){\n          callback(false)\n        }\n        return this.editCardsJson(cardList).subscribe(\n          response => {\n            callback(true)\n          },\n          error => {\n            callback(false)\n          }\n        )     \n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n        callback(false)\n      }\n    );\n  }\n  \n  modifyCardItem(card: CardItem, cardList: CardItem[]): CardItem[]{\n    if(card.Id === undefined || card.Id === 0){\n        const newId = cardList.reduce((maxId, card) => {\n            return Math.max(maxId, card.Id);\n        }, 0) + 1;\n        card.Id = newId;\n        cardList.push(card);\n        return cardList;\n    }else{\n        const index = cardList.findIndex(cardItem => cardItem.Id === card.Id);\n        if(index !== -1){\n            cardList[index] = card;\n            return cardList;\n        }\n    }\n    return [];\n  }\n\n  editCardsJson(cardList: CardItem[]): Observable{\n    return this.http.post(this.url,cardList,this.httpOptions);\n  }\n  \n  getCard(cardId: number, callback: (result: CardItem) => void){\n    this.getAllCards().subscribe(\n      response => {\n        let resultCard:CardItem = response.find(card => card.Id === cardId ) || {} as CardItem;\n        callback(resultCard);\n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n        callback({} as CardItem);\n      }\n    );\n  }\n\n  getCardListWithFilters(category: string, search: string, callback: (result: CardItem[]) => void) {\n    this.getAllCards().subscribe(\n      response => {\n        let resultCardList:CardItem[] = [];\n\n        if(category !== ''){\n          resultCardList = response.filter(cardItem =>\n              cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n          );\n        }\n      \n        if(category === '' && search !== ''){\n          resultCardList = response;\n        }\n        \n        if(search !== ''){\n          resultCardList = resultCardList.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        callback(resultCardList);\n      },\n      error => {\n        console.error('Error a invocar cards : ' + error );\n        callback([]);\n      }\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de ingreso a la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:59\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * @description\n * Componente de formulario de ingreso a la aplicacion\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                    Recuperar Contraseña\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                    Recuperar Contraseña                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar detalle de un carrito de compras selecionado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con iniciacion de objeto de carrito de compras\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:23\n                            \n                        \n                \n                    \n                        Valor de entrada del carrito selecionado\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:27\n                            \n                        \n                \n                    \n                        Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion para calcular precio total de la compra\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Precio total del carrito de compras\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Precio total de compra del carro\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n/**\n * @description\n * Componente para mostrar detalle de un carrito de compras selecionado\n */\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  /**\n   * Valor de entrada del carrito selecionado\n   */\n  @Input() currentShoppingCart: ShoppingCart;\n  /**\n   * Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n   */\n  @Input() showImage: boolean = false;\n  /**\n   * Precio total de compra del carro\n   */\n  total: number = 0;\n\n  /**\n   * Constructor con iniciacion de objeto de carrito de compras\n   */\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  /**\n   * Funcion para calcular precio total de la compra\n   * @param cardList Listado de cartas del carrito selecionado\n   * @returns Precio total del carrito de compras\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar los carritos de compra realizados por el usuario logueado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de carrito de compras\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Funcion para sumar el total de cartas de un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas de un carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                total de cartas del carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Funcion para aclcular el total de la compra del carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Valor total de la compra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Accion que setea carrito de compras seleccionado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:35\n                        \n                    \n\n            \n                \n                    Booleano para mostrar card con informacion del carrito de compras seleccionado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:27\n                        \n                    \n\n            \n                \n                    Listado de carritos de compra realizados por el usuario activo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:31\n                        \n                    \n\n            \n                \n                    Carrito de compras seleccionado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n/**\n * @description\n * Componente para listar los carritos de compra realizados por el usuario logueado\n */\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n  /**\n   * Listado de carritos de compra realizados por el usuario activo\n   */\n  orderList: ShoppingCart[] = [];\n  /**\n   * Carrito de compras seleccionado\n   */\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Booleano para mostrar card con informacion del carrito de compras seleccionado\n   */\n  isSelected: boolean = false;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param shoppingCartService Manejo de carrito de compras \n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  /**\n   * Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n   */\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  /**\n   * Accion que setea carrito de compras seleccionado\n   * @param selected Carrito de compras selecionado\n   */\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  /**\n   * Funcion para aclcular el total de la compra del carrito de compras\n   * @param cardList Listado de cartas del carrito de compras\n   * @returns Valor total de la compra\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  /**\n   * Funcion para sumar el total de cartas de un carrito de compras\n   * @param cardList Listado de cartas de un carrito de compras\n   * @returns total de cartas del carrito de compras\n   */\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordRecoveryComponent.html":{"url":"components/PasswordRecoveryComponent.html","title":"component - PasswordRecoveryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordRecoveryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-recovery/password-recovery.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para iniciar recuperacion de contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-recovery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-recovery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-recovery.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                recoverPassForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userServie: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-recovery/password-recovery.component.ts:26\n                            \n                        \n\n                \n                    \n                            Contructor con dependencia a funciones de manejo de ususario\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userServie\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de informacion de ususario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de recuperacion de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario de recuperar contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        recoverPassForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-recovery/password-recovery.component.ts:26\n                        \n                    \n\n            \n                \n                    Fromulario para recuperar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-recovery/password-recovery.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\n\n/**\n * @description\n * Componente para iniciar recuperacion de contrasena\n */\n@Component({\n  selector: 'app-password-recovery',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-recovery.component.html',\n  styleUrl: './password-recovery.component.css'\n})\nexport class PasswordRecoveryComponent {\n  /**\n   * Fromulario para recuperar contrasena\n   */\n  recoverPassForm!: FormGroup;\n\n  /**\n   * Contructor con dependencia a funciones de manejo de ususario\n   * @param router Manejo de redirecciones\n   * @param userServie Funciones de informacion de ususario\n   */\n  constructor(private router: Router, private userServie: UserService){}\n\n  /**\n   * Iniciacion de formulario de recuperacion de contrasena\n   */\n  ngOnInit(): void {\n    this.recoverPassForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get email(){\n    return this.recoverPassForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario de recuperar contrasena\n   */\n  onSubmit() {\n    alert('Se ha enviado Email de recuperacion');\n\n    if(this.userServie.checkEmail(this.email?.value)){\n      let token = this.userServie.createRecovery(this.email?.value);\n      this.router.navigate(['/actualizar-contrasena/'+token]);\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Email\n            \n              \n            \n                Email es obligatorio.\n                Email no tiene el formato correcto.\n              \n            \n          \n\n          \n            Recuperar Contrasena\n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Email                                                      Email es obligatorio.                Email no tiene el formato correcto.                                                          Recuperar Contrasena            Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordRecoveryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-reset/password-reset.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para recuperar contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-reset\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-reset.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-reset.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localToken\n                            \n                            \n                                updatePasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-reset/password-reset.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de Usuarios\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de parametros de entrada\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-reset/password-reset.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Iniciacion y validacion de token\nIniciacion de formaulario de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-reset/password-reset.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        localToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/password-reset/password-reset.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable para manejar token\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-reset/password-reset.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para actualizar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-reset/password-reset.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-reset/password-reset.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { UserService } from '../core/services/user.service';\n\n/**\n * @description\n * Componente para formulario para recuperar contrasena\n */\n@Component({\n  selector: 'app-password-reset',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n  /**\n   * Formulario para actualizar contrasena\n   */\n  updatePasswordForm!: FormGroup;\n  /**\n   * Variable para manejar token\n   */\n  localToken: string = '';\n\n  /**\n   * Constructor con dependencia a capa service\n   * @param userService Manejo de Usuarios\n   * @param router Manejo de redirecciones\n   * @param route Manejo de parametros de entrada\n   */\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute \n  ){}\n\n  /**\n   * Iniciacion y validacion de token\n   * Iniciacion de formaulario de contrasena\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const token = params.get('recovery') || '';\n      const message = this.userService.checkRecovery(token);\n      if(message != ''){\n        alert(message);\n        this.router.navigate(['/']);\n      }\n      this.localToken = token;\n    });\n    this.updatePasswordForm = new FormGroup({\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get password(){\n    return this.updatePasswordForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.updatePasswordForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    let message = this.userService.updatePassword(this.localToken,this.password?.value);\n    if(message == ''){\n      alert('Se ha actualizado la Contraseña');\n      this.router.navigate(['/login']);\n    }else{\n      alert(message);\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Debe tener entre 8 y 16 caracteres.\n              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n            \n            \n          \n    \n          \n            Confirmar Contraseña\n            \n              \n            \n              Confirmar Contraseña es obligatorio.\n              Debe tener entre 8 y 16 caracteres.\n              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n              Las contraseñas no coinciden.\n            \n            \n          \n          \n        \n    \n        Confirmar\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Contraseña                                                    Contraseña obligatorio.              Debe tener entre 8 y 16 caracteres.              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                                            Confirmar Contraseña                                                    Confirmar Contraseña es obligatorio.              Debe tener entre 8 y 16 caracteres.              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.              Las contraseñas no coinciden.                                                                Confirmar                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de Mock de proceso de pago\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:24\n                            \n                        \n\n                \n                    \n                            Contructor de componente con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\nTempo de espera de 4 segundos para simular proceso de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n            \n                \n                    Booleano para indicar si se ha realizado el pago\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente de pantalla de Mock de proceso de pago\n */\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  /**\n   * Booleano para indicar si se ha realizado el pago\n   */\n  isPaymentSuccess: boolean = false;\n\n  /**\n   * Contructor de componente con dependencias a funciones de sesion\n   * @param authService Manejo de informacion de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\n   * Tempo de espera de 4 segundos para simular proceso de pago.\n   */\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  /**\n   * Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n   */\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recovery.html":{"url":"interfaces/Recovery.html","title":"interface - Recovery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recovery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/Recovery.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Estructura con valores para la validacion de recuperacion de contrasena\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de intento de recuperacion\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token de intento de recuperacion de contrasena\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Recovery{\n    /**\n     * Identificador de usuario\n     */\n    UserId: number;\n    /**\n     * Token de intento de recuperacion de contrasena\n     */\n    token: string;\n    /**\n     * Fecha de intento de recuperacion\n     */\n    date: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de usuario\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      const result = this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n      if(result){\n        alert('Se ha registrado con exito');\n        this.authService.login(this.registrationForm.get('username')?.value,this.registrationForm.get('password')?.value);\n        this.router.navigate(['/']);\n      }else{\n        alert('El nombre de usuario ya esta en uso');\n      }\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar contenido de carrito de compras\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor dcon dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para simular pago, redirige a mock pasarela de pago\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras actual del cliente logueado.\nse calcula el precio del total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:24\n                        \n                    \n\n            \n                \n                    Varieble que contiene el carrito de compras actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                        \n                    \n\n            \n                \n                    Booleano que indica si el carrito tine items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:28\n                        \n                    \n\n            \n                \n                    Valor de precio total del carro de compras\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para mostrar contenido de carrito de compras\n */\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n  /**\n   * Varieble que contiene el carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Valor de precio total del carro de compras\n   */\n  total: number = 0;\n  /**\n   * Booleano que indica si el carrito tine items\n   */\n  hasItems: boolean = false;\n\n  /**\n   * Constructor dcon dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras actual del cliente logueado.\n   * se calcula el precio del total del carrito\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  /**\n   * Funcion para simular pago, redirige a mock pasarela de pago\n   */\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardsService: CardsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardsService\n                                                  \n                                                        \n                                                                        CardsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number, callback: (result: [ShoppingCart, boolean]) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                tupla de item de carrito actualizado y booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardsService } from './api/cards.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(\n        private cardsService: CardsService\n    ){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number,callback: (result: [ShoppingCart,boolean]) => void) {\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n        this.cardsService.getCard(cardId, result => {\n            const selectedCardItem = result;\n            let hasStock = false;\n            \n            if(index !== -1){\n                selectedShoppingCart = this.shoppingCartList[index];\n            }else{\n                selectedShoppingCart = this.createShoppingcar(userId);\n            }\n\n            let cardIndex = -1;\n                \n            if(selectedShoppingCart.CardList !== undefined){\n                cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n            }else{\n                selectedShoppingCart.CardList = [];\n            }\n                \n            \n            if(cardIndex !== -1){\n                hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n                if(hasStock){\n                    selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n                }\n                \n            }else{\n                hasStock = selectedCardItem.Quantity > 1;\n                if(hasStock){\n                    let cardCopy = {...selectedCardItem};\n                    cardCopy.Quantity = 1;\n                    selectedShoppingCart.CardList.push(cardCopy);\n                }\n            }\n            \n            callback([selectedShoppingCart,hasStock]);\n\n        });\n        \n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con formulario de edicion de usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Iniciacion de informacion de usuario.\nIniciacion de formulario de edicion de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable con informacion de usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de edicion de usuario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente con formulario de edicion de usuario\n */\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n  /**\n   * Formulario de edicion de usuario\n   */\n  updateForm!: FormGroup;\n  /**\n   * Variable con informacion de usuario\n   */\n  currentUser: User = {} as User;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de informacion de usuario.\n   * Iniciacion de formulario de edicion de usuario\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                            \n                                userRecoveryTry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkRecovery\n                            \n                            \n                                createRecovery\n                            \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                findRecovery\n                            \n                            \n                                generateRandomToken\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Funcion para validar si email ya se encuentra en uso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email para validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si email se encuentra en uso\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRecovery\n                        \n                    \n                \n            \n            \n                \ncheckRecovery(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Funcion para checkear validez de token de recuperacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                mensaje de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRecovery\n                        \n                    \n                \n            \n            \n                \ncreateRecovery(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un registro de recuperar contrasena\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email para recuperar contrasena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Token generado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nValida si email ya se encuentra en uso.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findRecovery\n                        \n                    \n                \n            \n            \n                \nfindRecovery(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para encontrar item de recuperacion segun un token dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Recovery\n\n                        \n                            \n                                Item de recuperacion de clave\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomToken\n                        \n                    \n                \n            \n            \n                \ngenerateRandomToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Funcion para generar token aleatorio\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(token: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar contrasena dado un token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    token de recuperacion\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    nueva contrasena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                mensaje de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRecoveryTry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recovery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:45\n                        \n                    \n\n            \n                \n                    Listado de intentos de recuperacion de contrasena\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { Recovery } from '../models/Recovery.model';\nimport * as CryptoJS from 'crypto-js';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Listado de intentos de recuperacion de contrasena\n     */\n    userRecoveryTry: Recovery[] = [];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Valida si email ya se encuentra en uso.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        if(this.checkEmail(email)){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n    /**\n     * Funcion para validar si email ya se encuentra en uso\n     * @param email email para validar\n     * @returns booleano si email se encuentra en uso\n     */\n    checkEmail(email: string): boolean{\n        return (this.userList.find(user => user.Email === email) !== undefined)\n    }\n\n    /**\n     * Funcion para crear un registro de recuperar contrasena\n     * @param email email para recuperar contrasena\n     * @returns Token generado\n     */\n    createRecovery(email:string): string{\n        let findUser = this.userList.find(user => user.Email === email);\n\n        if(findUser == undefined){\n            return '';\n        }\n\n        let recovery = {} as Recovery;\n        recovery.UserId = findUser.id;\n        recovery.date = new Date();\n        recovery.token = this.generateRandomToken();\n\n        this.userRecoveryTry.push(recovery);\n\n        return recovery.token;\n    }\n\n    /**\n     * Funcion para generar token aleatorio\n     * @returns Token\n     */\n    generateRandomToken(): string {\n        const randomBytes = CryptoJS.lib.WordArray.random(16);\n        return randomBytes.toString(CryptoJS.enc.Hex);\n    }\n\n    /**\n     * Funcion para encontrar item de recuperacion segun un token dado\n     * @param token Token de recuperacion\n     * @returns Item de recuperacion de clave\n     */\n    findRecovery(token: string): Recovery{\n        return this.userRecoveryTry.find(recovery => recovery.token === token) || {} as Recovery;\n    }\n\n    /**\n     * Funcion para checkear validez de token de recuperacion\n     * @param token Token de recuperacion\n     * @returns mensaje de error\n     */\n    checkRecovery(token: string): string{\n        let recovery = this.findRecovery(token);\n        let currentDate = new Date();\n\n        if(recovery.UserId == undefined){\n            return 'error de recuperacion'\n        }\n\n        const recoverytimestamp = recovery.date.getTime();\n        const currenttimestamp = currentDate.getTime();\n        const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n        const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n        if(differenceInHours > 1){\n            return 'token ha expirado'\n        }\n\n        return '';\n    }\n\n    /**\n     * Funcion para actualizar contrasena dado un token \n     * @param token token de recuperacion\n     * @param password nueva contrasena\n     * @returns mensaje de error\n     */\n    updatePassword(token: string, password: string): string{\n        let recovery = this.findRecovery(token);\n        let currentDate = new Date();\n\n        if(recovery.UserId == undefined){\n            return 'error de recuperacion';\n        }\n\n        const recoverytimestamp = recovery.date.getTime();\n        const currenttimestamp = currentDate.getTime();\n        const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n        const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n        if(differenceInHours > 1){\n            return 'token ha expirado';\n        }\n\n        let user: User = this.userList.find(user => user.id === recovery.UserId ) || {} as User\n\n        if(user.id == undefined){\n            return 'error de recuperacion';\n        }\n\n        console.log(user.id);\n        user.Password = password;\n\n        let result = this.updateUser(user);\n\n        if (!result) {\n            return 'error al actualizar usuario';\n        }\n\n        return '';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/Recovery.model.ts\n            \n            interface\n            Recovery\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/api/cards.service.ts\n            \n            injectable\n            CardsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/password-recovery/password-recovery.component.ts\n            \n            component\n            PasswordRecoveryComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            crypto-js : ^4.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes),provideHttpClient()]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
