var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.082,1,0.718]],["body/components/AccountManagementComponent.html",[0,0.134,1,1.25,2,1.155,3,0.397,4,0.349,5,0.962,6,0.962,7,0.962,8,0.349,9,3.02,10,3.02,11,2.097,12,0.962,13,1.715,14,1.715,15,1.607,16,1.399,17,1.256,18,0.884,19,1.256,20,1.25,21,1.25,22,1.25,23,1.256,24,3.428,25,1.256,26,3.428,27,0.859,28,0.032,29,0.557,30,0.655,31,2.332,32,4.723,33,0.895,34,2.626,35,1.363,36,2.626,37,3.618,38,0.397,39,0.616,40,3.942,41,4.653,42,5.574,43,4.723,44,5.574,45,4.723,46,3.428,47,2.738,48,0.962,49,1.256,50,1.256,51,0.962,52,1.363,53,0.962,54,0.585,55,1.256,56,0.811,57,0.962,58,0.811,59,0.962,60,0.811,61,0.616,62,1.256,63,0.811,64,0.962,65,0.811,66,0.962,67,0.811,68,0.962,69,0.811,70,0.962,71,0.811,72,0.962,73,0.811,74,0.962,75,0.962,76,0.811,77,0.884,78,0.962,79,0.962,80,0.962,81,0.023,82,0.023]],["title/interfaces/Address.html",[33,0.545,83,1.29]],["body/interfaces/Address.html",[3,0.493,4,0.433,8,0.433,28,0.032,33,0.921,38,0.493,54,0.747,81,0.027,82,0.027,83,1.81,84,2.604,85,3.75,86,0.319,87,0.521,88,3.884,89,2.889,90,1.892,91,3.884,92,3.493,93,2.194,94,0.522]],["title/components/AddressCreateComponent.html",[0,0.082,56,0.718]],["body/components/AddressCreateComponent.html",[0,0.114,1,0.593,2,0.931,3,0.291,4,0.255,5,0.704,6,0.704,7,0.704,8,0.255,12,0.704,13,1.647,14,1.647,15,0.704,16,0.704,17,1.013,18,0.713,19,1.013,20,0.593,21,0.593,22,0.593,23,1.013,25,1.013,27,0.752,28,0.033,29,0.407,30,0.367,33,0.967,35,1.091,38,0.49,39,0.45,48,0.704,49,1.013,50,1.013,51,0.704,52,1.194,53,0.704,54,0.688,55,1.013,56,1.095,57,0.704,58,0.593,59,0.704,60,0.593,61,0.45,62,1.013,63,0.593,64,0.704,65,0.593,66,0.704,67,0.593,68,0.704,69,0.593,70,0.704,71,0.593,72,0.704,73,0.593,74,0.704,75,0.704,76,0.593,77,0.647,78,0.704,79,0.704,80,0.704,81,0.019,82,0.019,86,0.188,87,0.367,88,3.147,90,1.412,91,3.147,94,0.318,95,3.732,96,3.732,97,1.92,98,3.179,99,2.587,100,3.24,101,1.522,102,3.809,103,3.809,104,4.463,105,0.782,106,1.665,107,3.147,108,2.455,109,0.704,110,1.268,111,1.434,112,1.064,113,3.809,114,0.495,115,0.495,116,2.645,117,0.713,118,1.091,119,2.645,120,2.83,121,2.645,122,2.645,123,2.645,124,2.645,125,2.645,126,2.645,127,2.645,128,2.645,129,0.831,130,2.999,131,1.705,132,3.24,133,3.24,134,2.877,135,1.39,136,0.98,137,1.268,138,2.645,139,2.271,140,3.147,141,2.765,142,3.24,143,1.785,144,2.645,145,2.645,146,2.645,147,2.645,148,2.645,149,2.645,150,2.645,151,2.455,152,2.455,153,3.544,154,1.299,155,3.544,156,1.92,157,1.92,158,2.645,159,0.648,160,2.765,161,2.645,162,2.645,163,3.809,164,4.745,165,3.664,166,3.664,167,4.076,168,3.912,169,3.912,170,3.912,171,3.544,172,4.076,173,3.544,174,3.809,175,3.179]],["title/components/AddressManagementComponent.html",[0,0.082,21,0.718]],["body/components/AddressManagementComponent.html",[0,0.129,1,0.747,2,1.093,3,0.366,4,0.321,5,0.886,6,0.886,7,0.886,8,0.321,11,1.931,12,0.886,13,1.699,14,1.699,15,0.886,16,1.343,17,1.19,18,0.837,19,1.19,20,0.747,21,1.21,22,0.747,23,1.19,24,3.247,25,1.19,26,3.247,27,0.867,28,0.033,29,0.513,30,0.462,33,1.077,34,3.917,35,1.234,38,0.366,39,0.567,48,0.886,49,1.19,50,1.19,51,0.886,52,1.319,53,0.886,54,0.626,55,1.19,56,1.21,57,0.886,58,0.747,59,0.886,60,0.747,61,0.567,62,1.19,63,0.747,64,0.886,65,0.747,66,0.886,67,0.747,68,0.886,69,0.747,70,0.886,71,0.747,72,0.886,73,0.747,74,0.886,75,0.886,76,0.747,77,0.815,78,0.886,79,0.886,80,0.886,81,0.022,82,0.022,86,0.236,87,0.431,94,0.373,95,3.478,96,2.148,101,1.722,105,0.918,106,1.84,109,0.886,110,1.597,111,1.542,112,0.945,114,0.624,115,0.624,117,0.624,118,1.093,129,1.046,136,1.234,137,1.597,159,0.567,164,3.733,167,3.733,172,3.733,173,3.247,176,5.049,177,4.473,178,3.332,179,0.747,180,3.332,181,3.332,182,3.332,183,3.332,184,2.781,185,4.473,186,4.473,187,4.473,188,4.473]],["title/injectables/AddressService.html",[189,1.092,190,2.065]],["body/injectables/AddressService.html",[3,0.373,4,0.327,8,0.327,27,0.698,28,0.033,29,0.523,30,0.471,33,1.041,38,0.373,39,0.578,54,0.772,81,0.022,82,0.022,86,0.241,87,0.436,88,3.895,89,2.606,90,1.857,91,3.895,92,3.503,93,2.087,94,0.454,105,0.929,112,1.018,114,0.954,115,0.954,117,0.954,118,0.83,143,1.601,154,1.158,159,0.578,179,0.761,184,4.254,189,1.545,190,2.92,191,1.785,192,2.834,193,3.781,194,4.529,195,5.097,196,4.529,197,3.395,198,4.529,199,3.395,200,4.529,201,3.395,202,1.258,203,3.651,204,5.437,205,3.781,206,5.437,207,4.529,208,4.529,209,3.947,210,4.529,211,5.437,212,3.395,213,2.834,214,1.968,215,1.785,216,3.395,217,2.465,218,3.395,219,2.465,220,2.465,221,1.158,222,3.395,223,3.395,224,3.395,225,3.395,226,3.395,227,3.395,228,3.395,229,3.395,230,1.368,231,3.395,232,3.395]],["title/components/AppComponent.html",[0,0.082,58,0.718]],["body/components/AppComponent.html",[0,0.137,1,0.847,2,1.187,3,0.415,4,0.364,5,1.005,6,1.005,7,1.005,8,0.364,12,1.005,13,1.723,14,1.723,15,1.005,16,1.005,17,1.292,18,0.909,19,1.292,20,0.847,21,0.847,22,0.847,23,1.292,25,1.292,27,0.827,28,0.032,29,0.582,30,0.523,33,0.826,35,1.312,38,0.415,39,0.643,48,1.005,49,1.292,50,1.292,51,1.005,52,1.385,53,1.005,54,0.602,55,1.292,56,0.847,57,1.005,58,1.271,59,1.005,60,0.847,61,0.643,62,1.292,63,0.847,64,1.005,65,1.271,66,1.005,67,0.847,68,1.005,69,0.847,70,1.005,71,0.847,72,1.005,73,0.847,74,1.005,75,1.005,76,0.847,77,0.923,78,1.005,79,1.005,80,1.005,81,0.024,82,0.024,86,0.268,87,0.468,93,1.288,94,0.315,112,0.707,159,0.643,179,0.847,215,2.552,233,3.152,234,5.368,235,4.856,236,4.856,237,5.368,238,4.054,239,3.776,240,1.521,241,3.776]],["title/injectables/AuthService.html",[111,0.852,189,1.092]],["body/injectables/AuthService.html",[3,0.276,4,0.242,8,0.242,18,0.471,27,0.895,28,0.033,29,0.387,30,0.758,33,0.738,38,0.276,39,0.428,54,0.678,77,0.614,81,0.018,82,0.018,86,0.178,87,0.354,88,2.795,90,1.653,91,2.795,93,2.176,94,0.456,105,0.753,109,0.976,111,0.976,112,1.157,114,0.991,115,0.991,117,1.115,118,1.06,139,2.324,143,1.825,154,0.857,159,0.811,179,1.069,189,1.252,190,3.525,191,1.321,193,3.064,202,2.026,213,2.098,214,1.457,215,1.321,221,1.252,230,1.013,240,1.013,242,2.098,243,2.697,244,2.795,245,4.335,246,4.335,247,4.335,248,3.064,249,4.767,250,4.767,251,4.767,252,4.767,253,4.767,254,3.98,255,3.064,256,3.98,257,3.67,258,3.67,259,2.098,260,2.538,261,3.17,262,3.17,263,3.67,264,3.67,265,2.513,266,1.62,267,3.67,268,2.513,269,2.513,270,2.513,271,2.513,272,2.513,273,2.513,274,2.513,275,3.67,276,2.513,277,2.513,278,1.321,279,2.513,280,3.67,281,2.764,282,2.764,283,2.513,284,2.128,285,3.67,286,2.764,287,2.513,288,2.664,289,5.071,290,1.747,291,2.513,292,3.67,293,2.513,294,2.513,295,2.513,296,2.098,297,2.098,298,2.513,299,2.098,300,1.321,301,2.098,302,1.824,303,1.62,304,4.335,305,2.513,306,2.513,307,4.335,308,3.67,309,3.67,310,2.513,311,2.513,312,2.513,313,2.513,314,2.513,315,2.513,316,2.513,317,1.62,318,3.67,319,2.092,320,3.67,321,2.513,322,2.513,323,2.513,324,2.513,325,2.513,326,2.513,327,2.513,328,2.513,329,2.513,330,2.513]],["title/interfaces/CardItem.html",[61,0.545,83,1.29]],["body/interfaces/CardItem.html",[3,0.44,4,0.386,8,0.386,28,0.032,38,0.44,61,0.858,81,0.025,82,0.025,83,1.613,84,2.321,86,0.284,87,0.486,89,2.775,90,1.879,93,2.254,94,0.538,331,3.343,332,4.203,333,4.833,334,4.833,335,4.833,336,4.833,337,4.833,338,4.833,339,4.833,340,4.203,341,4.833,342,4.833,343,4.833]],["title/injectables/CardItemService.html",[189,1.092,344,1.857]],["body/injectables/CardItemService.html",[3,0.083,4,0.178,8,0.072,27,0.208,28,0.032,29,0.116,35,0.552,38,0.083,39,0.128,46,2.954,47,3.461,52,0.184,54,0.229,61,0.668,81,0.007,82,0.007,86,0.053,87,0.13,89,2.735,90,0.98,93,0.99,94,0.242,98,4.156,105,0.278,112,0.544,114,0.346,115,0.346,117,0.488,118,0.184,143,0.912,152,3.209,159,0.314,179,0.168,189,0.461,191,0.395,202,0.501,203,1.872,209,3.134,214,0.436,215,0.395,221,1.967,243,0.81,266,1.19,332,4.142,333,4.763,334,4.763,335,4.763,336,4.763,337,4.763,338,4.763,339,4.763,340,4.142,341,4.763,342,4.763,343,4.763,344,0.784,345,0.627,346,1.541,347,2.257,348,1.353,349,1.353,350,1.353,351,2.257,352,0.751,353,1.353,354,0.751,355,1.353,356,0.751,357,1.353,358,2.108,359,0.751,360,0.751,361,0.751,362,2.257,363,1.353,364,1.353,365,4.317,366,4.317,367,4.317,368,1.353,369,5.706,370,1.353,371,5.092,372,2.904,373,5.282,374,3.389,375,1.353,376,4.978,377,4.317,378,6.061,379,1.353,380,1.353,381,2.904,382,3.389,383,2.257,384,1.353,385,3.389,386,1.353,387,1.353,388,1.353,389,4.07,390,2.904,391,3.389,392,2.904,393,1.353,394,1.353,395,1.353,396,3.389,397,3.389,398,3.389,399,3.389,400,1.353,401,2.829,402,2.904,403,1.353,404,4.848,405,5.092,406,3.389,407,1.353,408,1.353,409,3.767,410,3.389,411,2.257,412,2.904,413,4.978,414,4.978,415,4.317,416,2.904,417,2.904,418,1.353,419,3.767,420,2.257,421,4.07,422,1.353,423,2.257,424,2.257,425,1.353,426,2.904,427,4.524,428,2.257,429,2.257,430,1.353,431,1.353,432,3.145,433,2.257,434,1.353,435,2.257,436,1.353,437,3.389,438,1.353,439,3.767,440,1.353,441,3.389,442,2.904,443,3.389,444,4.317,445,2.257,446,1.353,447,1.353,448,1.353,449,1.353,450,2.904,451,1.353,452,1.353,453,1.353,454,1.353,455,1.353,456,1.353,457,0.982,458,2.257,459,4.317,460,1.353,461,3.389,462,1.353,463,3.145,464,1.353,465,1.353,466,1.353,467,2.257,468,2.257,469,2.257,470,2.257,471,1.353,472,1.353,473,1.353,474,1.353,475,1.353,476,4.317,477,4.047,478,2.904,479,2.257,480,1.353,481,1.353,482,2.257,483,3.389,484,3.389,485,2.904,486,1.353,487,1.353,488,2.257,489,1.353,490,1.353,491,1.353,492,1.353,493,1.353,494,2.257,495,1.353,496,2.904,497,1.884,498,2.257,499,2.424,500,2.257,501,2.257,502,1.353,503,3.389,504,1.353,505,1.353,506,2.257,507,3.389,508,2.904,509,1.353,510,2.257,511,2.257,512,2.257,513,1.353,514,1.353,515,1.353,516,1.353,517,2.257,518,1.353,519,1.353,520,2.257,521,1.353,522,2.257,523,1.353,524,1.353,525,1.353,526,1.353,527,2.257,528,4.07,529,1.353,530,2.257,531,1.353,532,1.353,533,2.904,534,1.353,535,1.353,536,3.767,537,1.353,538,1.353,539,2.904,540,1.353,541,1.353,542,4.317,543,1.353,544,1.353,545,1.353,546,2.257,547,2.257,548,2.257,549,2.257,550,1.353,551,1.353,552,4.317,553,1.353,554,2.904,555,1.353,556,3.389,557,2.257,558,2.904,559,2.904,560,2.904,561,2.904,562,1.353,563,2.904,564,1.353,565,2.257,566,4.07,567,3.389,568,1.353,569,1.353,570,1.353,571,1.353,572,1.353,573,1.353,574,1.353,575,1.353,576,1.353,577,2.904,578,1.353,579,1.353,580,2.257,581,1.353,582,1.13,583,2.257,584,1.353,585,1.353,586,1.353,587,1.353,588,2.257,589,1.353,590,1.353,591,1.353,592,1.353,593,2.257,594,2.257,595,1.353,596,1.353,597,1.353,598,1.353,599,2.257,600,1.353,601,1.353,602,2.257,603,2.904,604,1.13,605,2.257,606,2.904,607,3.389,608,3.389,609,1.353,610,1.353,611,1.353,612,1.353,613,2.257,614,1.353,615,3.767,616,1.353,617,3.389,618,2.257,619,2.257,620,1.353,621,1.353,622,1.353,623,1.353,624,1.353,625,1.353,626,2.257,627,1.353,628,1.353,629,1.353,630,2.904,631,1.353,632,1.353,633,1.353,634,1.353,635,1.353,636,1.353,637,2.904,638,2.904,639,1.353,640,1.353,641,1.353,642,1.353,643,1.353,644,1.353,645,1.353,646,1.353,647,1.353,648,1.353,649,1.353,650,1.353,651,1.353,652,1.353,653,3.389,654,1.353,655,2.257,656,2.257,657,1.353,658,1.353,659,1.353,660,1.353,661,1.353,662,2.257,663,1.353,664,1.353,665,1.353,666,1.353,667,1.353,668,1.353,669,1.353,670,1.353,671,1.353,672,1.353,673,1.353,674,1.353,675,1.353,676,1.353,677,1.353,678,1.353,679,1.353,680,1.353,681,1.353,682,1.353,683,1.353,684,1.353,685,1.353,686,1.353,687,1.353,688,0.751,689,0.751,690,1.13,691,2.175,692,1.353,693,0.751,694,0.751,695,0.627,696,0.751,697,0.751,698,0.751,699,0.627,700,0.751]],["title/components/CarditemListComponent.html",[0,0.082,60,0.718]],["body/components/CarditemListComponent.html",[0,0.12,1,0.658,2,1.002,3,0.322,4,0.283,5,0.78,6,0.78,7,0.78,8,0.283,12,0.78,13,1.671,14,1.671,15,0.78,16,0.78,17,1.09,18,0.767,19,1.09,20,0.658,21,0.658,22,0.658,23,1.09,25,1.09,27,0.859,28,0.033,29,0.452,30,0.406,33,0.697,35,1.155,38,0.322,39,0.499,48,0.78,49,1.09,50,1.09,51,0.78,52,1.25,53,0.78,54,0.634,55,1.09,56,0.658,57,0.78,58,0.658,59,0.78,60,1.147,61,1.023,62,1.09,63,0.658,64,0.78,65,0.658,66,0.78,67,0.658,68,0.78,69,0.658,70,0.78,71,0.658,72,0.78,73,0.658,74,0.78,75,0.78,76,0.658,77,0.717,78,0.78,79,0.78,80,0.78,81,0.02,82,0.02,86,0.208,87,0.395,90,1.366,93,1.611,94,0.394,101,1.611,105,0.841,106,1.744,109,1.09,111,1.522,112,0.957,114,0.767,115,0.767,117,0.767,118,1.155,129,0.921,136,1.086,154,1.611,159,0.499,175,3.421,179,0.658,240,1.181,243,2.073,266,1.89,332,3.906,344,3.317,346,3.943,358,2.974,690,3.421,691,2.448,701,4.492,702,4.492,703,2.129,704,3.421,705,3.421,706,3.421,707,4.098,708,2.932,709,5.114,710,4.098,711,3.421,712,4.098,713,2.932,714,2.932,715,2.129,716,2.932,717,2.932,718,4.098,719,2.932,720,2.932,721,2.932,722,2.932,723,2.932,724,2.932,725,1.7,726,1.89,727,2.932,728,3.429,729,2.129,730,2.932,731,2.932,732,2.932,733,2.932,734,2.932,735,4.098,736,4.098,737,4.098,738,2.641,739,4.098]],["title/components/LoginComponent.html",[0,0.082,63,0.718]],["body/components/LoginComponent.html",[0,0.123,1,0.68,2,1.025,3,0.333,4,0.292,5,0.807,6,0.807,7,0.807,8,0.292,12,0.807,13,1.679,14,1.679,15,0.807,16,0.807,17,1.116,18,0.785,19,1.116,20,0.68,21,0.68,22,0.68,23,1.116,25,1.116,27,0.839,28,0.033,29,0.467,30,0.42,33,0.714,35,1.175,38,0.333,39,0.516,48,0.807,49,1.116,50,1.116,51,0.807,52,1.268,53,0.807,54,0.596,55,1.116,56,0.68,57,0.807,58,0.68,59,0.807,60,0.68,61,0.516,62,1.116,63,1.163,64,0.807,65,0.68,66,0.807,67,0.68,68,0.807,69,0.68,70,0.807,71,0.68,72,0.807,73,0.68,74,0.807,75,0.807,76,0.68,77,0.741,78,0.807,79,0.807,80,0.807,81,0.021,82,0.021,86,0.215,87,0.404,94,0.35,99,2.787,101,1.64,105,0.861,106,1.769,107,3.344,108,2.703,109,0.807,110,1.453,111,1.449,112,1.055,114,0.568,115,0.568,117,0.785,118,1.268,120,3.007,129,0.952,130,2.787,131,1.954,135,1.594,136,1.123,137,1.453,139,2.11,140,2.703,143,1.317,165,2.703,166,3.344,240,1.221,255,3.501,260,2.768,276,3.007,278,2.727,317,1.954,725,1.757,726,1.954,740,2.531,741,4.194,742,4.194,743,4.808,744,4.194,745,3.032,746,3.032,747,2.201,748,3.032,749,2.531,750,3.032,751,3.032,752,3.032,753,3.032,754,3.032,755,3.032,756,3.032,757,3.032,758,3.032,759,4.821,760,3.032,761,4.089,762,2.961,763,3.631,764,5.188,765,5.188,766,3.766,767,5.188,768,3.501]],["title/components/NavbarComponent.html",[0,0.082,65,0.718]],["body/components/NavbarComponent.html",[0,0.123,1,0.68,2,1.025,3,0.333,4,0.292,5,0.807,6,0.807,7,0.807,8,0.292,12,0.807,13,1.679,14,1.679,15,0.807,16,0.807,17,1.116,18,0.785,19,1.116,20,0.68,21,0.68,22,0.68,23,1.116,25,1.116,27,0.839,28,0.033,29,0.467,30,0.42,33,0.714,35,1.175,38,0.333,39,0.516,40,3.501,48,0.807,49,1.116,50,1.116,51,0.807,52,1.268,53,0.807,54,0.596,55,1.116,56,0.68,57,0.807,58,0.68,59,0.807,60,0.68,61,0.516,62,1.116,63,0.68,64,0.807,65,1.163,66,0.807,67,0.68,68,0.807,69,0.68,70,0.807,71,0.68,72,0.807,73,0.68,74,0.807,75,0.807,76,0.68,77,0.741,78,0.807,79,0.807,80,0.807,81,0.021,82,0.021,86,0.215,87,0.404,94,0.401,99,2.787,101,1.64,105,0.861,106,1.769,109,0.807,111,1.536,112,1.055,114,0.568,115,0.568,117,0.9,118,1.268,120,3.007,129,0.952,130,2.431,135,1.594,136,1.123,137,1.453,139,1.84,154,1.034,159,0.516,179,0.68,202,1.554,230,1.69,240,1.221,243,1.33,254,4.014,256,4.331,259,2.531,260,2.7,288,2.201,358,3.044,477,4.331,695,2.531,725,1.757,726,1.954,729,3.044,762,2.204,763,2.703,768,3.501,769,2.531,770,4.194,771,4.808,772,4.194,773,4.194,774,4.808,775,5.188,776,4.194,777,3.032,778,3.032,779,3.032,780,3.032,781,3.032,782,3.032,783,3.032,784,3.032,785,3.032,786,3.032,787,3.032,788,4.808,789,5.188,790,3.501,791,4.194,792,4.194,793,4.194,794,4.194,795,4.194,796,4.194,797,3.501,798,4.194]],["title/components/OrderDetailComponent.html",[0,0.082,67,0.718]],["body/components/OrderDetailComponent.html",[0,0.125,1,0.708,2,1.054,3,0.347,4,0.304,5,0.84,6,0.84,7,0.84,8,0.304,12,0.84,13,1.687,14,1.687,15,0.84,16,0.84,17,1.147,18,0.807,19,1.147,20,0.708,21,0.708,22,0.708,23,1.147,25,1.147,27,0.813,28,0.033,29,0.486,30,0.437,33,0.734,35,1.473,38,0.347,39,0.537,48,0.84,49,1.147,50,1.147,51,0.84,52,1.29,53,0.84,54,0.608,55,1.147,56,0.708,57,0.84,58,0.708,59,0.84,60,0.708,61,0.94,62,1.147,63,0.708,64,0.84,65,0.708,66,0.84,67,1.183,68,0.84,69,0.708,70,0.84,71,0.708,72,0.84,73,0.708,74,0.84,75,0.84,76,0.708,77,0.771,78,0.84,79,0.84,80,0.84,81,0.021,82,0.021,86,0.224,87,0.415,90,1.526,94,0.41,101,1.674,105,0.885,109,1.306,112,0.988,114,0.591,115,0.591,117,0.591,129,0.991,143,0.991,159,0.537,179,0.708,221,1.674,244,3.165,290,2.126,300,1.659,319,1.385,715,2.291,738,3.676,799,3.561,800,3.561,801,2.634,802,4.311,803,4.311,804,4.311,805,4.01,806,4.01,807,4.311,808,4.311,809,3.155,810,3.598,811,3.155,812,2.291,813,4.311,814,2.034,815,2.291,816,2.634,817,2.634,818,4.01,819,4.01,820,3.598,821,3.598,822,3.129,823,3.598,824,3.598,825,4.311]],["title/components/OrderFinishComponent.html",[0,0.082,69,0.718]],["body/components/OrderFinishComponent.html",[0,0.126,1,0.715,2,1.062,3,0.35,4,0.307,5,0.849,6,0.849,7,0.849,8,0.307,12,0.849,13,1.69,14,1.69,15,0.849,16,0.849,17,1.155,18,0.813,19,1.155,20,0.715,21,0.715,22,0.715,23,1.155,25,1.155,27,0.881,28,0.033,29,0.491,30,0.442,33,0.739,35,1.493,38,0.35,39,0.543,41,3.625,48,0.849,49,1.155,50,1.155,51,0.849,52,1.296,53,0.849,54,0.612,55,1.155,56,0.715,57,0.849,58,0.715,59,0.849,60,0.715,61,0.543,62,1.155,63,0.715,64,0.849,65,0.715,66,0.849,67,1.189,68,0.849,69,1.189,70,0.849,71,0.715,72,0.849,73,0.715,74,0.849,75,0.849,76,0.715,77,0.78,78,0.849,79,0.849,80,0.849,81,0.021,82,0.021,86,0.226,87,0.418,94,0.362,105,0.891,106,1.808,109,1.155,110,1.529,111,1.522,112,0.924,114,0.597,115,0.597,117,0.597,118,0.78,136,1.182,159,0.543,179,0.715,221,1.088,240,1.285,243,1.906,244,3.183,260,2.806,286,1.849,290,2.305,300,1.677,303,2.056,317,2.056,319,1.4,799,3.417,800,2.056,814,2.056,815,2.316,826,4.425,827,2.663,828,4.343,829,4.343,830,4.343,831,4.343,832,3.19,833,2.663,834,3.19,835,2.316,836,2.663,837,2.316,838,2.663,839,2.663,840,2.316,841,2.663,842,3.19,843,2.663,844,3.19,845,3.625,846,4.343,847,4.343,848,4.343,849,4.343,850,3.625,851,4.343]],["title/components/OrderListComponent.html",[0,0.082,22,0.718]],["body/components/OrderListComponent.html",[0,0.117,1,0.624,2,0.966,3,0.306,4,0.268,5,0.741,6,0.741,7,0.741,8,0.268,12,0.741,13,1.66,14,1.66,15,0.741,16,0.741,17,1.051,18,0.86,19,1.051,20,0.624,21,0.624,22,1.121,23,1.051,25,1.051,27,0.868,28,0.033,29,0.429,30,0.386,33,0.673,35,1.453,36,4.182,38,0.306,39,0.474,48,0.741,49,1.051,50,1.051,51,0.741,52,1.222,53,0.741,54,0.654,55,1.051,56,0.624,57,0.741,58,0.624,59,0.741,60,0.624,61,0.898,62,1.051,63,0.624,64,0.741,65,0.624,66,0.741,67,1.121,68,0.741,69,0.624,70,0.741,71,0.624,72,0.741,73,0.624,74,0.741,75,0.741,76,0.624,77,0.681,78,0.741,79,0.741,80,0.741,81,0.02,82,0.02,86,0.198,87,0.381,90,1.143,92,1.614,94,0.457,101,1.566,105,0.811,106,1.705,109,1.051,111,1.5,112,1.056,114,0.86,115,0.86,117,0.86,118,1.123,129,0.875,136,1.032,143,0.875,154,0.95,159,0.782,179,1.03,202,1.464,221,0.95,230,1.85,243,1.734,262,3.178,290,2.394,300,1.464,301,2.324,319,1.222,703,2.021,704,3.298,705,3.298,706,3.298,715,2.021,738,2.547,762,2.077,799,3.714,800,1.795,805,2.868,806,3.831,810,3.298,812,2.021,814,1.795,816,2.324,817,2.324,818,2.021,819,2.021,822,2.868,833,2.324,845,3.298,850,3.298,852,4.593,853,4.593,854,4.593,855,3.951,856,2.785,857,3.951,858,2.785,859,2.785,860,3.951,861,2.785,862,3.951,863,2.785,864,2.785,865,2.785,866,3.951,867,2.785,868,2.785,869,2.785,870,2.785,871,3.951,872,3.951,873,3.951,874,3.951,875,3.951,876,3.951,877,3.951]],["title/components/PaymentComponent.html",[0,0.082,71,0.718]],["body/components/PaymentComponent.html",[0,0.127,1,0.724,2,1.071,3,0.355,4,0.311,5,0.859,6,0.859,7,0.859,8,0.311,12,0.859,13,1.692,14,1.692,15,0.859,16,0.859,17,1.165,18,0.93,19,1.165,20,0.724,21,0.724,22,0.724,23,1.165,25,1.165,27,0.821,28,0.033,29,0.498,30,0.448,33,0.745,35,1.215,38,0.355,39,0.55,48,0.859,49,1.165,50,1.165,51,0.859,52,1.303,53,0.859,54,0.616,55,1.165,56,0.724,57,0.859,58,0.724,59,0.859,60,0.724,61,0.55,62,1.165,63,0.724,64,0.859,65,0.724,66,0.859,67,0.724,68,0.859,69,0.724,70,0.859,71,1.195,72,0.859,73,0.724,74,0.859,75,0.859,76,0.724,77,0.79,78,0.859,79,0.859,80,0.859,81,0.022,82,0.022,86,0.229,87,0.422,94,0.365,101,1.695,105,0.899,106,1.817,109,1.165,110,1.548,111,1.528,112,0.998,114,0.605,115,0.605,117,0.82,118,1.071,129,1.014,136,1.197,159,0.55,179,0.724,202,1.623,221,1.102,230,1.764,240,1.301,243,1.922,260,2.815,317,2.082,319,1.417,728,3.179,835,2.345,836,2.696,837,2.345,838,2.696,839,2.696,840,2.345,841,2.696,878,2.696,879,4.38,880,4.38,881,4.38,882,4.969,883,5.328,884,4.38,885,3.23,886,3.23,887,4.38,888,3.23,889,3.23,890,4.38,891,3.23,892,3.23,893,4.38,894,5.328,895,5.328,896,4.38,897,4.38,898,4.38]],["title/components/RegistrationFormComponent.html",[0,0.082,73,0.718]],["body/components/RegistrationFormComponent.html",[0,0.096,1,0.445,2,0.752,3,0.218,4,0.191,5,0.529,6,0.529,7,0.529,8,0.191,12,0.529,13,1.571,14,1.571,15,0.529,16,0.529,17,0.818,18,0.576,19,0.818,20,0.445,21,0.445,22,0.445,23,0.818,25,0.818,27,0.652,28,0.033,29,0.306,30,0.275,33,0.523,35,0.92,38,0.465,39,0.338,47,2.808,48,0.529,49,0.818,50,0.818,51,0.529,52,1.035,53,0.529,54,0.466,55,0.818,56,0.445,57,0.529,58,0.445,59,0.529,60,0.445,61,0.338,62,0.818,63,0.445,64,0.529,65,0.445,66,0.529,67,0.445,68,0.529,69,0.445,70,0.529,71,0.445,72,0.529,73,0.95,74,1.344,75,0.529,76,0.445,77,0.486,78,0.529,79,0.529,80,0.529,81,0.015,82,0.015,86,0.141,87,0.296,93,1.049,94,0.256,99,2.181,100,2.731,101,1.283,105,0.631,106,1.444,107,2.73,108,1.982,109,0.529,112,1.025,114,0.372,115,0.372,117,0.576,118,1.035,120,2.455,129,0.624,130,2.928,131,1.982,132,3.074,133,3.074,134,2.73,135,1.044,137,0.952,139,2.217,140,3.122,143,1.777,151,2.425,152,2.425,153,3.516,154,1.562,155,3.516,156,1.442,157,1.442,159,0.64,160,2.232,165,3.528,166,3.647,168,3.516,169,3.516,170,3.973,171,3.516,173,3.074,261,2.808,276,3.026,278,2.226,281,2.455,282,3.173,284,2.455,401,2.567,457,3.074,499,3.535,604,3.535,725,1.152,726,1.281,747,1.442,749,1.658,759,4.723,761,3.789,762,2.546,763,2.73,766,2.232,797,2.567,840,3.789,899,4.045,900,4.045,901,1.442,902,3.075,903,3.075,904,3.075,905,3.762,906,5.358,907,1.987,908,3.075,909,1.987,910,1.987,911,1.658,912,1.987,913,1.658,914,1.987,915,1.987,916,1.658,917,1.987,918,1.987,919,1.987,920,1.987,921,1.987,922,1.987,923,2.73,924,3.14,925,2.567,926,1.987,927,1.658,928,2.731,929,3.075,930,3.075,931,1.987,932,1.987,933,1.987,934,1.987,935,1.987,936,1.987,937,1.987,938,1.987,939,1.987,940,1.987,941,1.987,942,1.987,943,1.987,944,1.987,945,1.987,946,1.987,947,1.987,948,1.987,949,1.987,950,1.987,951,1.658,952,1.987,953,1.987,954,1.987,955,1.658,956,1.987,957,1.987,958,1.987,959,1.987,960,1.987,961,1.658,962,1.658,963,1.987,964,1.987,965,1.987,966,1.987,967,4.839,968,4.569,969,4.569,970,4.839,971,4.569,972,4.235,973,4.235,974,4.235,975,5.219,976,4.235,977,4.235,978,4.235,979,4.235,980,3.075,981,3.075,982,3.075,983,3.535,984,2.567]],["title/interfaces/ShoppingCart.html",[83,1.29,290,1.29]],["body/interfaces/ShoppingCart.html",[3,0.482,4,0.423,8,0.423,27,0.822,28,0.032,38,0.482,61,1.018,81,0.026,82,0.026,83,1.769,84,2.545,86,0.312,87,0.514,89,2.866,90,1.88,92,3.466,94,0.52,286,3.466,288,4.341,290,2.15,302,3.187,303,2.83,340,4.341,812,4.341,985,3.665,986,3.665,987,5.98,988,4.39]],["title/components/ShoppingCartComponent.html",[0,0.082,76,0.718]],["body/components/ShoppingCartComponent.html",[0,0.12,1,0.652,2,0.996,3,0.319,4,0.28,5,0.773,6,0.773,7,0.773,8,0.28,12,0.773,13,1.669,14,1.669,15,0.773,16,0.773,17,1.083,18,0.88,19,1.083,20,0.652,21,0.652,22,0.652,23,1.083,25,1.083,27,0.826,28,0.033,29,0.448,30,0.403,33,0.693,35,1.149,38,0.319,39,0.495,48,0.773,49,1.083,50,1.083,51,0.773,52,1.245,53,0.773,54,0.582,55,1.083,56,0.652,57,0.773,58,0.652,59,0.773,60,0.652,61,0.495,62,1.083,63,0.652,64,0.773,65,0.652,66,0.773,67,0.652,68,0.773,69,0.652,70,0.773,71,0.652,72,0.773,73,0.652,74,0.773,75,0.773,76,1.142,77,1.395,78,0.773,79,0.773,80,0.773,81,0.02,82,0.02,86,0.206,87,0.392,90,1.178,94,0.425,101,1.603,105,0.836,106,1.737,109,1.083,110,1.393,111,1.479,112,1.041,114,0.544,115,0.544,117,0.763,118,1.149,129,0.913,136,1.077,159,0.8,179,1.054,202,1.509,221,1.603,230,1.641,240,1.171,243,1.787,244,3.03,260,2.736,290,2.239,300,1.528,319,1.276,729,2.956,738,3.583,762,2.141,790,3.4,805,4.143,806,3.412,814,1.874,815,2.11,818,3.893,819,3.893,820,3.4,821,3.4,822,2.956,823,3.4,824,3.4,835,2.11,989,4.765,990,4.765,991,2.426,992,4.073,993,4.073,994,4.073,995,4.701,996,5.094,997,4.073,998,2.907,999,2.907,1000,2.907,1001,2.907,1002,2.907,1003,2.907,1004,2.907,1005,2.907,1006,2.907,1007,4.073]],["title/injectables/ShoppingCartService.html",[189,1.092,262,1.857]],["body/injectables/ShoppingCartService.html",[3,0.335,4,0.294,8,0.294,18,0.571,27,0.801,28,0.033,29,0.47,30,0.423,38,0.335,39,0.519,54,0.676,81,0.021,82,0.021,86,0.342,87,0.406,90,1.818,92,3.164,94,0.471,105,0.865,109,0.812,112,1.057,114,1.022,115,1.022,117,0.903,137,1.463,143,1.773,154,1.774,159,0.519,179,0.684,189,1.437,191,1.604,202,1.561,203,3.8,214,1.769,215,1.604,217,3.058,219,2.215,220,2.215,221,1.041,230,1.697,248,3.517,262,2.442,266,3.354,286,1.769,290,2.532,299,2.547,300,1.604,302,2.215,303,1.967,319,1.339,344,3.272,699,2.547,837,3.058,843,3.517,1008,4.829,1009,2.547,1010,4.825,1011,4.213,1012,4.213,1013,4.213,1014,3.052,1015,4.213,1016,4.213,1017,5.203,1018,3.052,1019,4.213,1020,3.052,1021,4.213,1022,3.052,1023,4.213,1024,3.052,1025,4.213,1026,3.052,1027,4.213,1028,3.052,1029,3.052,1030,3.052,1031,3.052,1032,3.052,1033,4.213,1034,3.052,1035,3.517,1036,4.213,1037,3.052,1038,3.052,1039,4.825,1040,4.213,1041,3.052,1042,4.825,1043,3.052,1044,4.213,1045,3.052,1046,3.052,1047,3.052,1048,3.052,1049,3.052,1050,3.052,1051,4.213,1052,4.213,1053,4.213,1054,3.052,1055,3.052,1056,3.052,1057,3.052,1058,3.052,1059,3.052]],["title/interfaces/User.html",[30,0.444,83,1.29]],["body/interfaces/User.html",[3,0.477,4,0.418,8,0.418,28,0.032,30,0.735,38,0.477,81,0.026,82,0.026,83,1.749,84,2.516,86,0.308,87,0.511,89,2.855,90,1.654,93,2.248,94,0.53,202,2.119,276,3.453,278,3.131,281,3.453,282,3.453,284,3.453,1060,3.624,1061,4.972,1062,4.972]],["title/components/UserManagementComponent.html",[0,0.082,20,0.718]],["body/components/UserManagementComponent.html",[0,0.112,1,0.573,2,0.908,3,0.281,4,0.246,5,0.68,6,0.68,7,0.68,8,0.246,11,1.481,12,0.68,13,1.639,14,1.639,15,0.68,16,1.164,17,0.988,18,0.695,19,0.988,20,1.077,21,0.573,22,0.573,23,0.988,24,2.696,25,0.988,26,2.696,27,0.786,28,0.033,29,0.394,30,0.828,31,3.759,33,0.632,35,1.07,38,0.408,39,0.435,47,2.785,48,0.68,49,0.988,50,0.988,51,0.68,52,1.175,53,0.68,54,0.542,55,0.988,56,0.573,57,0.68,58,0.573,59,0.68,60,0.573,61,0.435,62,0.988,63,0.573,64,0.68,65,0.573,66,0.68,67,0.573,68,0.68,69,0.573,70,0.68,71,0.573,72,0.68,73,0.573,74,0.68,75,0.68,76,0.573,77,0.625,78,0.68,79,0.68,80,0.68,81,0.018,82,0.018,86,0.181,87,0.358,94,0.365,99,2.537,100,3.177,101,1.492,105,0.762,106,1.638,107,3.097,108,2.394,109,0.68,110,1.225,111,1.417,112,1.075,114,0.478,115,0.478,117,0.695,118,1.07,120,2.785,129,0.802,130,1.481,131,1.647,132,2.696,133,2.696,134,2.394,135,1.343,136,0.947,137,1.225,139,2.108,140,2.821,143,1.673,151,1.647,152,1.647,153,2.696,154,0.871,155,2.696,156,1.855,157,1.855,159,0.632,160,1.855,165,3.433,166,3.433,168,3.487,169,3.487,170,3.487,171,3.487,179,0.573,278,2.3,281,2.785,282,3.38,284,2.785,457,3.487,725,1.481,728,1.855,747,1.855,761,3.866,762,2.525,763,2.394,766,2.696,911,2.133,913,2.133,916,2.133,923,2.821,924,3.1,925,3.1,927,2.133,951,3.1,955,2.133,967,4.01,968,4.01,969,4.01,970,4.01,971,4.01,983,4.01,984,3.1,1063,4.233,1064,4.376,1065,4.376,1066,3.714,1067,2.555,1068,2.555,1069,2.555,1070,2.555,1071,2.555,1072,2.555,1073,2.555,1074,2.555,1075,2.555,1076,2.555,1077,2.555,1078,2.555,1079,2.555,1080,2.555,1081,2.555,1082,2.555,1083,2.555,1084,2.555,1085,2.555,1086,2.555,1087,2.555,1088,4.804,1089,2.555,1090,4.376]],["title/injectables/UserService.html",[189,1.092,261,1.857]],["body/injectables/UserService.html",[3,0.327,4,0.287,8,0.287,18,1.076,27,0.638,28,0.033,29,0.459,30,0.868,38,0.327,39,0.507,54,0.59,81,0.02,82,0.02,86,0.294,87,0.399,89,2.468,93,2.186,94,0.429,105,0.85,112,1.049,114,0.892,115,0.892,117,1.013,118,1.012,143,1.759,154,1.412,159,0.507,179,0.668,189,1.412,191,1.565,202,1.907,203,3.318,209,3.006,214,1.726,215,1.565,217,3.006,219,2.161,220,3.457,221,1.015,230,1.668,261,2.401,276,3.561,278,3.168,281,3.397,282,3.397,284,3.397,296,2.485,319,1.307,1035,2.485,1061,4.297,1062,4.297,1091,2.485,1092,4.762,1093,5.148,1094,4.142,1095,5.148,1096,4.142,1097,4.142,1098,2.977,1099,4.142,1100,2.977,1101,2.977,1102,4.142,1103,2.977,1104,4.142,1105,2.977,1106,4.142,1107,5.602,1108,3.457,1109,4.142,1110,4.142,1111,4.142,1112,5.148,1113,4.142,1114,4.142,1115,2.977,1116,2.977,1117,5.148,1118,2.977,1119,2.977,1120,2.977,1121,2.977,1122,2.977,1123,2.977,1124,2.977,1125,2.977,1126,2.977,1127,2.977,1128,2.977,1129,2.977,1130,2.977,1131,2.977,1132,2.977,1133,2.977,1134,2.977,1135,2.977,1136,2.977,1137,2.977]],["title/coverage.html",[1138,3.635]],["body/coverage.html",[0,0.162,1,0.766,8,0.329,9,2.851,10,2.851,11,3.159,20,0.766,21,0.766,22,0.766,28,0.033,30,0.473,31,2.931,33,0.581,34,2.479,36,2.479,56,0.766,58,0.766,60,0.766,61,0.581,63,0.766,65,0.766,67,0.766,69,0.766,71,0.766,73,0.766,76,0.766,81,0.022,82,0.022,83,2.195,85,2.851,94,0.285,95,3.513,96,3.295,97,3.71,111,0.909,139,1.499,141,2.479,142,2.479,151,3.762,189,1.936,190,2.201,192,2.851,221,2.247,233,2.851,242,2.851,261,1.98,262,1.98,290,1.376,331,2.851,344,1.98,345,2.851,701,2.851,702,2.851,703,3.301,740,2.851,769,2.851,799,3.295,800,2.201,801,2.851,826,2.851,827,2.851,878,2.851,899,3.956,900,3.956,901,3.956,923,2.931,928,2.479,985,2.851,986,2.851,989,2.851,990,2.851,991,2.851,1008,2.851,1009,2.851,1060,2.851,1063,3.301,1091,2.851,1138,2.851,1139,3.415,1140,3.415,1141,3.415,1142,6.126,1143,5.957,1144,4.547,1145,3.415,1146,2.851,1147,4.547,1148,2.851,1149,2.851,1150,2.851,1151,2.851,1152,5.957,1153,3.415,1154,3.415,1155,3.415,1156,3.415,1157,2.851,1158,3.415,1159,3.415,1160,3.415]],["title/dependencies.html",[1161,1.948,1162,3.212]],["body/dependencies.html",[28,0.033,29,0.73,81,0.028,82,0.028,129,1.489,135,2.491,240,1.909,297,3.957,1162,3.957,1163,4.74,1164,6.45,1165,4.74,1166,5.586,1167,5.586,1168,4.74,1169,4.74,1170,4.74,1171,4.74,1172,4.74,1173,4.74,1174,4.74,1175,4.74]],["title/miscellaneous/enumerations.html",[1176,1.41,1177,3.212]],["body/miscellaneous/enumerations.html",[28,0.032,81,0.028,82,0.028,86,0.344,159,1.071,286,3.281,1176,2.549,1177,4.047,1178,4.849,1179,5.661,1180,4.849,1181,5.661,1182,5.661,1183,5.661,1184,5.661,1185,5.661]],["title/miscellaneous/functions.html",[1176,1.41,1186,3.212]],["body/miscellaneous/functions.html",[11,3.118,28,0.032,31,2.868,54,0.551,81,0.027,82,0.027,86,0.316,93,2.049,94,0.371,95,2.868,96,2.868,97,4.197,114,0.833,115,0.833,117,1.17,134,4.029,141,4.197,142,4.197,899,3.23,900,3.23,901,4.36,923,4.029,928,4.197,961,3.714,962,4.49,1063,3.23,1157,4.49,1176,2.339,1186,3.714,1187,5.379,1188,5.782,1189,4.449,1190,4.449]],["title/index.html",[86,0.19,1191,2.683,1192,2.683]],["body/index.html",[0,0.144,4,0.405,28,0.026,54,0.521,81,0.026,82,0.026,139,1.846,205,3.512,238,3.512,432,3.512,463,3.512,497,5.148,1108,3.512,1161,3.054,1193,5.198,1194,4.207,1195,5.641,1196,5.641,1197,3.512,1198,4.207,1199,4.207,1200,5.198,1201,6.054,1202,6.25,1203,4.207,1204,4.207,1205,4.207,1206,4.207,1207,4.207,1208,4.207,1209,4.207,1210,4.207,1211,4.207,1212,4.207,1213,4.207,1214,5.641,1215,5.641,1216,4.207,1217,5.892,1218,4.207,1219,4.207,1220,4.207,1221,4.207,1222,5.198,1223,5.198,1224,5.892,1225,4.207,1226,5.198,1227,5.198,1228,4.207,1229,4.207,1230,4.207,1231,4.207,1232,5.198,1233,4.207,1234,4.207,1235,4.207,1236,4.207,1237,5.641,1238,4.207,1239,4.207,1240,4.207,1241,3.054,1242,4.207,1243,4.207]],["title/modules.html",[1244,3.635]],["body/modules.html",[28,0.029,81,0.029,82,0.029,1244,4.299]],["title/overview.html",[1241,3.161]],["body/overview.html",[2,1.242,28,0.029,46,3.689,47,2.946,81,0.029,82,0.029,84,2.946,191,2.671,582,4.242,1241,3.689]],["title/properties.html",[87,0.371,1161,1.948]],["body/properties.html",[28,0.03,81,0.029,82,0.029,87,0.493,1197,4.27,1245,5.116]],["title/miscellaneous/variables.html",[1176,1.41,1246,3.212]],["body/miscellaneous/variables.html",[18,1.025,28,0.033,81,0.027,82,0.027,86,0.325,94,0.457,111,1.219,143,1.719,154,1.867,159,0.932,179,1.228,230,1.845,260,2.196,711,3.824,1146,3.824,1148,4.57,1149,3.824,1150,4.57,1151,4.57,1176,2.408,1246,3.824,1247,4.581,1248,4.581,1249,4.581,1250,4.581,1251,4.581,1252,4.581,1253,4.581,1254,4.581,1255,4.581,1256,4.581,1257,4.581,1258,4.581,1259,4.581,1260,4.581]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":221,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1245,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":203,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":450,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":601,"title":{},"body":{"injectables/CardItemService.html":{}}}],["10",{"_index":483,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":543,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":555,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":436,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":206,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":572,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":609,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":582,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["143",{"_index":550,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":503,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":604,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":471,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":456,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":520,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":529,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":584,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":482,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18.0.0",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1198,"title":{},"body":{"index.html":{}}}],["19",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":368,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":209,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["20",{"_index":401,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":549,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":598,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":576,"title":{},"body":{"injectables/CardItemService.html":{}}}],["222",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":400,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":425,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":373,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":590,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":387,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":370,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"overview.html":{}}}],["4000",{"_index":890,"title":{},"body":{"components/PaymentComponent.html":{}}}],["5",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":457,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["6",{"_index":439,"title":{},"body":{"injectables/CardItemService.html":{}}}],["67",{"_index":562,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":437,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["73",{"_index":502,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":499,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["9",{"_index":458,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":380,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abstractcontrol",{"_index":132,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accessors",{"_index":108,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":709,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizado",{"_index":1087,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["actualizar",{"_index":1090,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["add",{"_index":463,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["addcarditem",{"_index":347,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additem",{"_index":707,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":712,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1016,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":525,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":523,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":33,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":229,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":188,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":185,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":186,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":187,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":232,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":56,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":104,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":987,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":184,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":21,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":190,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["administrar",{"_index":44,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agregada",{"_index":150,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":727,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CarditemListComponent.html":{}}}],["al",{"_index":728,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PaymentComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('dirección",{"_index":149,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('error",{"_index":1089,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":838,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('no",{"_index":730,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":725,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":949,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["angular",{"_index":1195,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":129,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":29,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":135,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["another",{"_index":493,"title":{},"body":{"injectables/CardItemService.html":{}}}],["apellido",{"_index":983,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":58,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1207,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":795,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":377,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1218,"title":{},"body":{"index.html":{}}}],["attach",{"_index":447,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":445,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":409,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1208,"title":{},"body":{"index.html":{}}}],["av",{"_index":204,"title":{},"body":{"injectables/AddressService.html":{}}}],["base",{"_index":384,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":428,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":405,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":418,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beast",{"_index":528,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":381,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":561,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":398,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":472,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":534,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":587,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":508,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boolean",{"_index":202,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bottom",{"_index":511,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1217,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":796,"title":{},"body":{"components/NavbarComponent.html":{}}}],["buy",{"_index":996,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calctotal",{"_index":806,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":810,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":825,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":876,"title":{},"body":{"components/OrderListComponent.html":{}}}],["campos",{"_index":952,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":533,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":822,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capabilities",{"_index":1235,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":971,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":413,"title":{},"body":{"injectables/CardItemService.html":{}}}],["card.cardname",{"_index":824,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.id",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":818,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":819,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["cardcopy",{"_index":1054,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1055,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardid",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1044,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":61,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":735,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":988,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":737,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":736,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":346,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":60,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":344,"title":{"injectables/CardItemService.html":{}},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":812,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":817,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardname",{"_index":332,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":333,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":421,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":334,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":335,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carrito",{"_index":729,"title":{},"body":{"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["carro",{"_index":739,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["cart",{"_index":992,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":994,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":993,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":991,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:18",{"_index":1000,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:19",{"_index":1001,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:20",{"_index":997,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:27",{"_index":999,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:41",{"_index":998,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":986,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1009,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:12",{"_index":1015,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:16",{"_index":1020,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:30",{"_index":1024,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:39",{"_index":1018,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:84",{"_index":1022,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":990,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":820,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["cartas",{"_index":872,"title":{},"body":{"components/OrderListComponent.html":{}}}],["cartitem.service",{"_index":1026,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":843,"title":{},"body":{"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":443,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["categoria",{"_index":718,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":360,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catálogo",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cerrado",{"_index":787,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":798,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1210,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1239,"title":{},"body":{"index.html":{}}}],["checkstock",{"_index":348,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":353,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1231,"title":{},"body":{"index.html":{}}}],["choose",{"_index":588,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1196,"title":{},"body":{"index.html":{}}}],["code",{"_index":1212,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":982,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":478,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":540,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1232,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":101,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":88,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":849,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["comprar",{"_index":1007,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":790,"title":{},"body":{"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["comprobar",{"_index":950,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["con",{"_index":940,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["condition",{"_index":336,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmar",{"_index":979,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":906,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["console.log",{"_index":965,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["console.log('id",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(authservice.isloggedin",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(selectedcarditem.quantity",{"_index":1049,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1050,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["console.log(this.registrationform.value",{"_index":942,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["consolelogfortesting",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":154,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":109,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":110,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1014,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":137,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":708,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":856,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":907,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contener",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contraseña",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":981,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":152,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["control.\\ncrew",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":448,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":446,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":492,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":462,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.get(field1)?.value",{"_index":963,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control.get(field2)?.value",{"_index":964,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control.value",{"_index":160,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["controls",{"_index":390,"title":{},"body":{"injectables/CardItemService.html":{}}}],["copy",{"_index":603,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":547,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":834,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":181,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":715,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":814,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1074,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":136,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":716,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":865,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":921,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["correcto",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["cosmic",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["costs",{"_index":442,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":468,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1138,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":98,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":180,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":103,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":102,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":97,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["create.component.ts:20",{"_index":113,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:24",{"_index":116,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:44",{"_index":122,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:48",{"_index":124,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:52",{"_index":126,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:56",{"_index":128,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:60",{"_index":119,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":96,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createaddress",{"_index":193,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":196,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":337,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1011,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1019,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":378,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":491,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":461,"title":{},"body":{"injectables/CardItemService.html":{}}}],["criaturas",{"_index":794,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":481,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":364,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":738,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1064,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":571,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d)(?=.*[a",{"_index":956,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["d+$/g.test(control.value",{"_index":161,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["damage",{"_index":536,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1088,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["de",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["deactivateuser",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":551,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":539,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":537,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":399,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":531,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":967,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":179,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":112,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":953,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["dependencies",{"_index":1162,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["detail",{"_index":802,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":833,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":804,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":803,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":801,"title":{},"body":{"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:16",{"_index":809,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:17",{"_index":808,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":811,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail/order",{"_index":800,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":877,"title":{},"body":{"components/OrderListComponent.html":{}}}],["dev",{"_index":1204,"title":{},"body":{"index.html":{}}}],["development",{"_index":1199,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":488,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direcciones",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["dirección",{"_index":164,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1216,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1221,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1220,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["double",{"_index":451,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":606,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":412,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":517,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dynamic",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1229,"title":{},"body":{"index.html":{}}}],["each",{"_index":444,"title":{},"body":{"injectables/CardItemService.html":{}}}],["el",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["eld",{"_index":365,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":402,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":367,"title":{},"body":{"injectables/CardItemService.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":383,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":545,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":435,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encantamientos",{"_index":793,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":484,"title":{},"body":{"injectables/CardItemService.html":{}}}],["end",{"_index":497,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":404,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entre",{"_index":969,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["enum/cart",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1177,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":514,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":438,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":841,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["escaped.\\nwhenever",{"_index":408,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["estado",{"_index":871,"title":{},"body":{"components/OrderListComponent.html":{}}}],["eventcoalescing",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":388,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1226,"title":{},"body":{"index.html":{}}}],["exile",{"_index":419,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exito",{"_index":941,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["fabled",{"_index":423,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":230,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["field1",{"_index":1190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":962,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["fiery",{"_index":544,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1211,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":774,"title":{},"body":{"components/NavbarComponent.html":{}}}],["finalizada",{"_index":846,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":828,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":830,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":829,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":827,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:19",{"_index":831,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:26",{"_index":832,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":826,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":420,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":440,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying",{"_index":567,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":473,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":374,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forbidden",{"_index":155,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["forces",{"_index":575,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":902,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":75,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":904,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":903,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":901,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form.component.ts:18",{"_index":908,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:22",{"_index":909,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:63",{"_index":912,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:67",{"_index":914,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:71",{"_index":915,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:75",{"_index":917,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:79",{"_index":918,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:83",{"_index":920,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:87",{"_index":910,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":900,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formato",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formcontrol",{"_index":130,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1080,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1078,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1079,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":120,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":954,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["four",{"_index":431,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":210,"title":{},"body":{"injectables/AddressService.html":{}}}],["function",{"_index":151,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1186,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1236,"title":{},"body":{"index.html":{}}}],["g.test(control.value",{"_index":959,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["gain",{"_index":410,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":494,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":516,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":583,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1214,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1194,"title":{},"body":{"index.html":{}}}],["generic",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":194,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":198,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1012,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1021,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":349,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":355,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":350,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":357,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardslist",{"_index":351,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcommune",{"_index":127,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getconfirmpassword",{"_index":919,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":916,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":911,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getlastname",{"_index":913,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getname",{"_index":121,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":123,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getregion",{"_index":125,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":449,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getting",{"_index":1191,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":403,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":469,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1238,"title":{},"body":{"index.html":{}}}],["god",{"_index":485,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":605,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":470,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyard",{"_index":422,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":454,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":513,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":460,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":382,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":519,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["g}{g",{"_index":464,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":726,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["hacer",{"_index":847,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1086,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":416,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":995,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1042,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":532,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":610,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":731,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["heliod",{"_index":479,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1237,"title":{},"body":{"index.html":{}}}],["henge",{"_index":455,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":791,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1206,"title":{},"body":{"index.html":{}}}],["human",{"_index":577,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":89,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["if(cardindex",{"_index":1048,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":816,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1053,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1035,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":724,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["if(search",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1045,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":836,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["if(shoppingcart.status",{"_index":842,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1085,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1002,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.userlist.find(user",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":558,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":559,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":518,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":338,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["implements",{"_index":1234,"title":{},"body":{"index.html":{}}}],["import",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["incorretos",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":581,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":486,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":86,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["ingresar",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["inject(authservice",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":189,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":191,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":813,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":807,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":599,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":554,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":83,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1061,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":490,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":882,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":852,"title":{},"body":{"components/OrderListComponent.html":{}}}],["jegantha",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":574,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kaldheim",{"_index":608,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1228,"title":{},"body":{"index.html":{}}}],["khm",{"_index":607,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":972,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["lair",{"_index":560,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":415,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":600,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":433,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":980,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["lastname",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":371,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":391,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":535,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letras",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["library",{"_index":427,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":411,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":592,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":465,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":495,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":704,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":37,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":706,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":705,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":703,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":710,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:21",{"_index":863,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:22",{"_index":864,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:23",{"_index":857,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:27",{"_index":714,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:30",{"_index":859,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:36",{"_index":861,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:39",{"_index":713,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:41",{"_index":858,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":702,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["lo",{"_index":973,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["loading",{"_index":895,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":63,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logueado",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{}}}],["long",{"_index":487,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":506,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":951,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["loses",{"_index":379,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":546,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":477,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["management",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["management.component.ts:19",{"_index":177,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:20",{"_index":1069,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:21",{"_index":1066,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:23",{"_index":178,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:25",{"_index":1067,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:47",{"_index":1070,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:51",{"_index":1071,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:55",{"_index":1072,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:59",{"_index":1073,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:63",{"_index":1068,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":31,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manavalue",{"_index":339,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["many",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":789,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":219,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayúscula",{"_index":976,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menos",{"_index":974,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["merfolk",{"_index":504,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":105,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":207,"title":{},"body":{"injectables/AddressService.html":{}}}],["minúscula",{"_index":977,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1176,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/address.model",{"_index":213,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modules",{"_index":1244,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monstrous",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":432,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["much",{"_index":541,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":589,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":394,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":770,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":773,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":772,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":65,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1205,"title":{},"body":{"index.html":{}}}],["need",{"_index":1233,"title":{},"body":{"index.html":{}}}],["new",{"_index":139,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":216,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":227,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":222,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":224,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":225,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":226,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":223,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":217,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1027,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1029,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1031,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1030,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1202,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":100,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":106,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":369,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["non",{"_index":579,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":564,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":466,"title":{},"body":{"injectables/CardItemService.html":{}}}],["notsamepassword",{"_index":966,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["nueva",{"_index":163,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["null",{"_index":153,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["number",{"_index":90,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["nymph",{"_index":521,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["o",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["obligatorio",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ocurrido",{"_index":839,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":362,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":476,"title":{},"body":{"injectables/CardItemService.html":{}}}],["only_letters",{"_index":158,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["onlyletters",{"_index":955,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onlyletters_validator",{"_index":142,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":923,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":162,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["onlynumbersvalidator",{"_index":141,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":775,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":107,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":417,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":389,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":115,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":501,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":845,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":851,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.cardlist.length",{"_index":875,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.id",{"_index":873,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":874,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":67,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":69,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":853,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":22,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":848,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1240,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1241,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1161,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1243,"title":{},"body":{"index.html":{}}}],["pago",{"_index":894,"title":{},"body":{"components/PaymentComponent.html":{}}}],["para",{"_index":734,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params.get('categoria",{"_index":719,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":720,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["passage",{"_index":424,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":960,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["passwordvalidator",{"_index":928,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":879,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":72,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":881,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":880,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":71,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["permanent",{"_index":552,"title":{},"body":{"injectables/CardItemService.html":{}}}],["petty",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalker",{"_index":372,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":792,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1230,"title":{},"body":{"index.html":{}}}],["play",{"_index":522,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":542,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{}}}],["portal",{"_index":898,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":385,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":821,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":538,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":340,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["private",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":893,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1193,"title":{},"body":{"index.html":{}}}],["properties",{"_index":87,"title":{"properties.html":{}},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":214,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":414,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":341,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["questing",{"_index":527,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":512,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":585,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":99,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":892,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizado",{"_index":896,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirect",{"_index":883,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigiendo",{"_index":897,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1242,"title":{},"body":{"index.html":{}}}],["region",{"_index":91,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registrado",{"_index":939,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":797,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":905,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":73,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["región",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1209,"title":{},"body":{"index.html":{}}}],["rest",{"_index":510,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["result.filter(carditem",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["results",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":143,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":117,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":597,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["role",{"_index":1062,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":215,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":711,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":771,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1201,"title":{},"body":{"index.html":{}}}],["running",{"_index":1222,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":406,"title":{},"body":{"injectables/CardItemService.html":{}}}],["same",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":931,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":961,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["santiago",{"_index":208,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1213,"title":{},"body":{"index.html":{}}}],["scute",{"_index":593,"title":{},"body":{"injectables/CardItemService.html":{}}}],["search",{"_index":358,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["selected",{"_index":862,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedcarditem",{"_index":1040,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1051,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":854,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1039,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1057,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1047,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1046,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1056,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1052,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":855,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":860,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1203,"title":{},"body":{"index.html":{}}}],["server",{"_index":1200,"title":{},"body":{"index.html":{}}}],["sesión",{"_index":788,"title":{},"body":{"components/NavbarComponent.html":{}}}],["set",{"_index":548,"title":{},"body":{"injectables/CardItemService.html":{}}}],["setcode",{"_index":342,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setname",{"_index":343,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["settimeout",{"_index":887,"title":{},"body":{"components/PaymentComponent.html":{}}}],["shark",{"_index":556,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1059,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":290,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1037,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":837,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1038,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":76,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1017,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1010,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":262,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shuffle",{"_index":430,"title":{},"body":{"injectables/CardItemService.html":{}}}],["six",{"_index":580,"title":{},"body":{"injectables/CardItemService.html":{}}}],["solo",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":441,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":568,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../address",{"_index":1187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../registration",{"_index":1188,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":1189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":95,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/carditem",{"_index":701,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":85,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":331,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":985,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1060,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":192,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:10",{"_index":212,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:29",{"_index":197,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":201,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:49",{"_index":199,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:16",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:17",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:18",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:28",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:45",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:57",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:61",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:67",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:71",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:80",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:87",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:91",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:95",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":345,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:10",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:328",{"_index":361,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:332",{"_index":359,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:354",{"_index":352,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:358",{"_index":356,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:362",{"_index":354,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1008,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:10",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:33",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:59",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:63",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:72",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:76",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/login/login.component.ts",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:19",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":769,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:20",{"_index":780,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:21",{"_index":776,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:25",{"_index":778,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:34",{"_index":779,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:41",{"_index":777,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":799,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":878,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:17",{"_index":884,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":885,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":886,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":899,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shopping",{"_index":989,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1063,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1192,"title":{"index.html":{}},"body":{}}],["starting",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":733,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["stored",{"_index":1219,"title":{},"body":{"index.html":{}}}],["strike",{"_index":452,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":93,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["subtotal",{"_index":823,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":732,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sun",{"_index":480,"title":{},"body":{"injectables/CardItemService.html":{}}}],["swarm",{"_index":594,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":978,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":426,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":429,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":376,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tener",{"_index":968,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["test",{"_index":1225,"title":{},"body":{"index.html":{}}}],["testing",{"_index":205,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1224,"title":{},"body":{"index.html":{}}}],["thassa\\'s",{"_index":500,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":602,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":396,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":397,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":363,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":138,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":147,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":144,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":145,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":146,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":231,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":228,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":218,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":723,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":148,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":835,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":182,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getuser",{"_index":1076,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":867,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":781,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":786,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":844,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.carditemlist",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1041,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":721,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":722,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.consolelogfortesting",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createshoppingcar(userid",{"_index":1043,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":815,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1003,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1075,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1081,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":783,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":784,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.hasitems",{"_index":1004,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":782,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":888,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":866,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":868,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.redirect",{"_index":889,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":922,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":937,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":935,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":948,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":932,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":945,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":933,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":946,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":936,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":947,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":934,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":944,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":938,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":717,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":785,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":891,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1006,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedorder",{"_index":870,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1058,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1033,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1032,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1028,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1036,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":869,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.total",{"_index":1005,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1077,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1084,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1082,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1083,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":183,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.foreach(user",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser",{"_index":943,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":366,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{}}}],["titan",{"_index":393,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":566,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":591,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":375,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":474,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":475,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":507,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":805,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":386,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":453,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":586,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":553,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":498,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":524,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":94,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":526,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":557,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":840,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["una",{"_index":975,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["undefined",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":467,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1223,"title":{},"body":{"index.html":{}}}],["unless",{"_index":407,"title":{},"body":{"injectables/CardItemService.html":{}}}],["untap",{"_index":434,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":496,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":509,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":195,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":200,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1025,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1034,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1065,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1013,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1023,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["uro",{"_index":392,"title":{},"body":{"injectables/CardItemService.html":{}}}],["use",{"_index":1215,"title":{},"body":{"index.html":{}}}],["user",{"_index":30,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.id",{"_index":220,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":176,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":92,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":20,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":261,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usuario",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validationerrors",{"_index":133,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":134,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":131,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":927,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":930,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":926,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":925,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":924,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":929,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":140,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valparaiso",{"_index":211,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":159,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":569,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1246,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehicle",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":850,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["version",{"_index":1197,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1227,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":530,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":118,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["vorinclex",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":984,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":578,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":563,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":489,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":515,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":573,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":505,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":395,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":459,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":565,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x}{1}{u}\\nwhen",{"_index":570,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":970,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["z])((?=.*\\w)|(?=.*_",{"_index":958,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["z])(?=.*[a",{"_index":957,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["z]*$)/g.test(control.value",{"_index":157,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["za",{"_index":156,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["zendikar",{"_index":596,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":595,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\n\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        4\n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                    4        5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    id: number;\n    UserId: number;\n    Name: string;\n    Number: number;\n    Region: string;\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\n\n\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  addressForm!: FormGroup;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLetters_Validator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLetters_Validator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\nexport function onlyLetters_Validator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {only_letters: {value: control.value}} : null;\n  };\n}\n\nexport function onlyNumbersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/^\\d+$/g.test(control.value);\n    return forbidden ? {onlyNumbers: {value: control.value}} : null;\n  };\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n\n  userAddressList: Address[] = [] as Address[];\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private logedUser: User = {} as User;\n  private loggedIn = new BehaviorSubject(false);\n  private userAddress = new BehaviorSubject([] as Address[]);\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === 0 || this.logedUser.UserName === ''){\n        this.loggedIn.next(false);\n        return false;\n    }\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  getUser(){\n    return this.logedUser;\n  }\n\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    Id: number;\n    CardName: string;\n    CreatedBy: number;\n    Quantity: number;\n    SetCode: string;\n    SetName: string;\n    CardNumber: number;\n    Condition: string;\n    Price: number;\n    Image: string;\n    CardType: string;\n    ManaValue: string;\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCardItem\n                            \n                            \n                                checkStock\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCardItem\n                        \n                    \n                \n            \n            \n                \naddCardItem()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:354\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:362\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:358\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:332\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:328\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CardItem[]\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: '',\n            Quantity: 5\n        }\n    ]\n\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    addCardItem(){\n        \n    }\n\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n\n  carditemList: CardItem[] = [];\n\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n\n  loginForm!: FormGroup;\n\n  constructor(private authService: AuthService,private router: Router){}\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          Ingresar\n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                            Ingresar                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  filterForm!: FormGroup;\n  isLoggedIn: boolean = false;\n\n  constructor(private router: Router, private authService: AuthService){};\n\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  @Input() currentShoppingCart: ShoppingCart;\n  total: number = 0;\n\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }else{\n        if(shoppingCart.Status === CartStatus.Abierto){\n          this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n        }\n        this.currentShoppingCart = shoppingCart;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n\n  orderList: ShoppingCart[] = [];\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  isSelected: boolean = false;\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{order.CardList.length}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{order.CardList.length}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  isPaymentSuccess: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:75\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:83\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\n\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  registrationForm!: FormGroup;\n\n  constructor(private userService: UserService){}\n\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      alert('Se ha registrado con exito');\n      console.log(this.registrationForm.value);\n      this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\nexport function onlyLettersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {onlyLetters: {value: control.value}} : null;\n  };\n}\n\nexport function passwordValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])((?=.*\\W)|(?=.*_))^[^ ]+$/g.test(control.value);\n    return forbidden ? {passwordFromat: {value: control.value}} : null;\n  };\n}\n\nexport function samePasswordValidator(field1: string, field2: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const password = control.get(field1)?.value;\n    const confirmPassword = control.get(field2)?.value;\n    const forbidden = password && confirmPassword && password !== confirmPassword;\n    console.log( password + ' || ' + confirmPassword);\n    return forbidden ? {notSamePassword: {value: confirmPassword}} : null;\n  };\n}\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\nexport interface ShoppingCart{\n    id: number;\n    UserId: number;\n    Status: CartStatus;\n    CardList: CardItem[];\n    AddressId: number;\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  total: number = 0;\n  hasItems: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  buy(){\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    shoppingCartList: ShoppingCart[] = [];\n\n    constructor(private cardItemService: CardItemService){}\n\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            console.log(selectedCardItem.Quantity)\n            console.log(selectedShoppingCart.CardList[cardIndex].Quantity)\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    id: number;\n    UserName: string;\n    FirstName: string;\n    LastName: string;\n    Password: string;\n    Email: string;\n    Role: string;\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:59\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n\n  updateForm!: FormGroup;\n  currentUser: User = {} as User;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\nexport function onlyLettersValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const forbidden = !/(^[a-zA-Z]*$)/g.test(control.value);\n    return forbidden ? {onlyLetters: {value: control.value}} : null;\n  };\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                consoleLogForTesting\n                            \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        consoleLogForTesting\n                        \n                    \n                \n            \n            \n                \nconsoleLogForTesting()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n    \n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) === undefined){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        this.consoleLogForTesting();\n\n        return true;\n    }\n\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    deactivateUser(){\n\n    }\n\n    consoleLogForTesting(){\n        this.userList.forEach(user => {\n            console.log('id: '+user.id+' userName: '+user.UserName);\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            function\n            onlyLetters_Validator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            function\n            onlyNumbersValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            onlyLettersValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            function\n            samePasswordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            function\n            onlyLettersValidator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLetters_Validator   (src/.../address-create.component.ts)\n                        \n                        \n                            onlyLettersValidator   (src/.../registration-form.component.ts)\n                        \n                        \n                            onlyLettersValidator   (src/.../user-management.component.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../address-create.component.ts)\n                        \n                        \n                            passwordValidator   (src/.../registration-form.component.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../registration-form.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/address-create/address-create.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLetters_Validator\n                        \n                    \n                \n            \n            \n                \nonlyLetters_Validator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    src/app/registration-form/registration-form.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/user-management/user-management.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  console.log(authService.isLoggedIn())\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
