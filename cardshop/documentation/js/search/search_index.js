var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.013,1,0.637]],["body/components/AccountManagementComponent.html",[0,0.021,1,1.089,2,0.982,3,0.318,4,0.28,5,0.796,6,0.796,7,0.796,8,0.28,9,4.8,10,4.8,11,2.36,12,0.419,13,1.27,14,3.511,15,0.587,16,4.758,17,0.44,18,4.006,19,2.845,20,0.796,21,1.509,22,1.509,23,1.388,24,1.191,25,1.06,26,0.707,27,1.06,28,1.089,29,1.089,30,1.089,31,1.089,32,1.38,33,1.06,34,3.511,35,1.06,36,3.511,37,0.173,38,0.324,39,5.348,40,0.771,41,1.471,42,1.177,43,1.423,44,1.388,45,0.795,46,4.758,47,0.771,48,1.637,49,1.368,50,1.699,51,0.532,52,0.029,53,0.596,54,0.276,55,0.532,56,3.01,57,1.523,58,4.006,59,1.27,60,3.141,61,3.763,62,0.908,63,1.582,64,2.389,65,0.532,66,0.982,67,1.418,68,0.683,69,0.63,70,0.846,71,0.485,72,0.531,73,2.638,74,4.758,75,0.795,76,2.638,77,1.177,78,2.638,79,3.575,80,1.104,81,2.638,82,3.575,83,0.858,84,1.066,85,0.318,86,0.532,87,0.58,88,1.066,89,3.575,90,3.575,91,4.006,92,4.8,93,5.701,94,3.141,95,5.701,96,4.758,97,2.845,98,0.796,99,1.06,100,1.06,101,0.796,102,1.177,103,0.796,104,1.06,105,0.683,106,0.796,107,0.683,108,0.796,109,0.683,110,1.06,111,0.683,112,0.485,113,1.06,114,0.796,115,0.683,116,0.796,117,0.683,118,0.796,119,0.683,120,0.683,121,0.796,122,0.683,123,0.838,124,0.796,125,0.683,126,0.796,127,0.683,128,0.796,129,0.683,130,0.796,131,0.796,132,0.683,133,0.738,134,0.796,135,0.796,136,0.796,137,0.019,138,0.019]],["title/interfaces/Address.html",[75,0.496,139,1.233]],["body/interfaces/Address.html",[3,0.399,4,0.351,8,0.351,12,0.351,15,0.679,17,0.461,37,0.217,38,0.374,52,0.029,53,0.692,54,0.376,57,1.762,62,1.051,67,1.99,72,0.614,75,0.818,85,0.399,137,0.023,138,0.023,139,1.659,140,2.451,141,3.778,142,2.533,143,3.311,144,1.225,145,2.683,146,1.924,147,2.683,148,2.079,149,2.683,150,4.095,151,2.578,152,2.028,153,4.277,154,3.389,155,3.29,156,3.963,157,2.189,158,1.64,159,3.29,160,2.549,161,5.502,162,1.526,163,1.762,164,5.502]],["title/components/AddressCreateComponent.html",[0,0.013,105,0.637]],["body/components/AddressCreateComponent.html",[0,0.02,1,0.61,2,0.91,3,0.285,4,0.25,5,0.712,6,0.712,7,0.712,8,0.25,12,0.396,13,0.982,17,0.46,20,0.712,21,1.492,22,1.492,23,0.712,24,0.712,25,0.982,26,0.656,27,0.982,28,0.61,29,0.61,30,0.61,31,0.61,32,1.303,33,0.982,35,0.982,37,0.155,38,0.3,40,0.715,41,1.405,42,1.042,43,1.272,44,1.348,45,0.917,47,0.883,49,1.058,50,1.623,51,0.475,52,0.029,53,0.675,54,0.256,55,0.475,62,0.842,65,0.656,66,1.042,70,0.776,71,0.434,72,0.357,75,0.917,77,1.042,80,0.91,83,0.767,84,0.953,85,0.285,86,0.475,87,0.518,98,0.712,99,0.982,100,0.982,101,0.712,102,1.124,103,0.712,104,0.982,105,1.04,106,0.712,107,0.61,108,0.712,109,0.61,110,0.982,111,0.61,112,0.434,113,0.982,114,0.712,115,0.61,116,0.712,117,0.61,118,0.712,119,0.61,120,0.61,121,0.712,122,0.61,123,0.777,124,0.712,125,0.61,126,0.712,127,0.61,128,0.712,129,0.61,130,0.712,131,0.712,132,0.61,133,0.66,134,0.712,135,0.712,136,0.712,137,0.018,138,0.018,147,2.638,150,3.594,152,1.623,153,3.594,155,3.256,156,3.532,165,4.618,166,4.618,167,2.692,168,2.857,169,5.444,170,3.254,171,3.714,172,2.34,173,3.726,174,4.411,175,4.411,176,5.05,177,2.733,178,2.214,179,4.411,180,2.912,181,1.058,182,3.197,183,1.315,184,3.714,185,3.714,186,3.197,187,3.714,188,2.214,189,2.523,190,3.197,191,3.197,192,3.197,193,3.197,194,3.197,195,3.197,196,3.197,197,3.197,198,2.45,199,1.605,200,2.359,201,2.359,202,2.11,203,1.371,204,3.02,205,2.912,206,1.912,207,1.605,208,3.197,209,1.965,210,2.733,211,1.511,212,3.197,213,3.197,214,3.197,215,3.197,216,3.197,217,3.197,218,3.197,219,3.714,220,5.192,221,2.645,222,3.096,223,4.584,224,3.532,225,2.965,226,3.532,227,3.594,228,3.256,229,3.714,230,2.214]],["title/components/AddressManagementComponent.html",[0,0.013,29,0.637]],["body/components/AddressManagementComponent.html",[0,0.022,1,0.697,2,0.996,3,0.325,4,0.286,5,0.813,6,0.813,7,0.813,8,0.286,11,2.411,12,0.378,13,1.075,15,0.596,17,0.448,20,0.813,21,1.512,22,1.512,23,0.813,24,1.204,25,1.075,26,0.718,27,1.075,28,0.697,29,1.098,30,0.697,31,0.697,32,1.395,33,1.075,34,3.561,35,1.075,36,3.561,37,0.177,38,0.328,40,0.783,41,1.484,42,1.116,43,1.454,44,1.395,45,0.804,47,0.783,49,1.158,50,1.714,51,0.543,52,0.029,53,0.603,54,0.28,55,0.543,62,1.173,63,1.595,65,0.543,66,0.996,68,0.697,69,0.644,70,0.812,71,0.496,72,0.407,75,0.99,76,4.242,77,1.116,80,0.996,83,0.876,84,1.089,85,0.325,86,0.543,87,0.592,94,4.054,98,0.813,99,1.075,100,1.075,101,0.813,102,1.187,103,0.813,104,1.075,105,1.098,106,0.813,107,0.697,108,0.813,109,0.697,110,1.075,111,0.697,112,0.496,113,1.075,114,0.813,115,0.697,116,0.813,117,0.697,118,0.813,119,0.697,120,0.697,121,0.813,122,0.697,123,0.85,124,0.813,125,0.697,126,0.813,127,0.697,128,0.813,129,0.697,130,0.813,131,0.813,132,0.697,133,0.754,134,0.813,135,0.813,136,0.813,137,0.02,138,0.02,155,2.886,165,4.242,166,2.695,180,3.186,181,1.379,207,1.834,220,4.063,223,4.063,228,2.886,231,4.063,232,2.07,233,4.826,234,5.405,235,4.826,236,3.653,237,4.063,238,2.07,239,2.126,240,3.653,241,3.653,242,3.653,243,3.653,244,3.075,245,4.826,246,4.826,247,4.826,248,4.826]],["title/injectables/AddressService.html",[249,1.233,250,2.201]],["body/injectables/AddressService.html",[3,0.288,4,0.254,8,0.254,12,0.45,15,0.732,17,0.467,37,0.157,38,0.303,40,0.722,45,0.814,47,0.722,49,1.068,51,0.756,52,0.029,53,0.721,54,0.318,55,0.756,59,1.321,60,2.938,62,1.045,63,1.762,65,0.853,66,0.669,67,1.871,68,0.619,69,0.571,70,0.604,71,0.44,72,0.361,75,0.954,85,0.288,86,0.482,87,0.985,94,4.084,137,0.018,138,0.018,142,2.179,144,1.219,146,1.909,147,3.274,148,2.747,149,2.662,150,4.144,151,2.462,152,1.988,153,4.234,154,3.47,155,2.662,156,3.867,157,1.771,158,1.327,159,2.662,162,1.519,163,1.425,211,1.411,221,1.909,232,1.909,239,2.193,244,4.832,249,1.646,250,2.938,251,1.77,252,2.728,253,3.24,254,3.284,255,3.748,256,4.451,257,5.475,258,4.451,259,3.24,260,2.36,261,2.938,262,4.451,263,3.748,264,2.662,265,3.748,266,4.451,267,4.451,268,3.24,269,4.451,270,3.284,271,2.025,272,4.451,273,3.24,274,4.451,275,2.662,276,2.662,277,1.198,278,1.909,279,2.235,280,1.771,281,2.938,282,2.938,283,4.451,284,3.788,285,5.475,286,3.748,287,5.475,288,4.451,289,4.451,290,4.04,291,4.451,292,5.475,293,3.24,294,4.451,295,4.451,296,1.646,297,2.728,298,1.937,299,1.77,300,3.24,301,1.114,302,2.139,303,3.24,304,2.139,305,2.39,306,1.289,307,3.24,308,3.24,309,3.24,310,3.24,311,3.24,312,3.24,313,3.24,314,3.24,315,1.198,316,3.24,317,3.24]],["title/components/AppComponent.html",[0,0.013,107,0.637]],["body/components/AppComponent.html",[0,0.023,1,0.8,2,1.088,3,0.373,4,0.328,5,0.933,6,0.933,7,0.933,8,0.328,12,0.413,13,1.174,14,3.891,17,0.412,19,3.621,20,0.933,21,1.53,22,1.53,23,0.933,24,0.933,25,1.174,26,0.784,27,1.174,28,0.8,29,0.8,30,0.8,31,0.8,33,1.174,35,1.174,37,0.203,38,0.359,45,0.623,52,0.028,53,0.588,54,0.243,67,1.249,68,0.8,69,0.738,70,0.784,71,0.569,72,0.467,75,0.784,77,1.191,80,1.088,85,0.373,86,0.623,98,0.933,99,1.174,100,1.174,101,0.933,102,1.25,103,0.933,104,1.174,105,0.8,106,0.933,107,1.156,108,0.933,109,0.8,110,1.174,111,0.8,112,0.569,113,1.174,114,0.933,115,0.8,116,0.933,117,1.156,118,0.933,119,0.8,120,0.8,121,0.933,122,0.8,123,0.929,124,0.933,125,0.8,126,0.933,127,0.8,128,0.933,129,0.8,130,0.933,131,0.933,132,0.8,133,0.865,134,0.933,135,0.933,136,0.933,137,0.022,138,0.022,144,1.174,299,2.881,318,3.528,319,5.77,320,5.273,321,5.273,322,5.77,323,4.44,324,4.19,325,5.273,326,1.249,327,4.19]],["title/injectables/AuthService.html",[44,0.743,249,1.233]],["body/injectables/AuthService.html",[3,0.169,4,0.149,8,0.149,12,0.427,14,2.21,15,0.821,17,0.465,19,2.521,26,0.282,37,0.092,38,0.204,40,0.486,42,0.87,44,0.667,45,0.935,47,0.486,48,1.03,49,1.27,50,1.663,51,0.759,52,0.029,53,0.608,54,0.316,55,0.759,57,1.786,59,1.289,60,1.977,61,2.783,62,1.105,63,1.807,64,2.8,65,0.953,66,0.947,67,1.917,68,0.876,69,0.809,70,0.773,71,0.258,72,0.608,75,0.552,85,0.169,86,0.282,87,0.984,88,1.852,94,3.494,112,0.757,123,0.743,133,0.392,137,0.012,138,0.012,142,1.192,144,1.421,146,1.808,147,1.791,150,2.783,151,1.677,152,1.663,153,3.219,155,1.791,156,3.165,157,1.192,158,1.578,159,1.791,160,1.388,162,1.353,163,1.903,181,1.388,209,1.678,211,1.579,225,1.504,230,2.116,232,1.808,238,2.393,239,1.108,249,1.108,250,3.494,251,1.037,255,2.522,260,2.559,261,2.783,271,2.063,276,1.791,277,1.888,278,2.27,279,2.116,280,2.365,281,1.977,296,1.559,297,1.598,298,1.135,299,1.037,301,0.653,306,1.192,315,0.702,326,0.566,328,1.598,329,2.996,330,2.996,331,2.522,332,2.522,333,2.45,334,3.712,335,3.712,336,3.125,337,3.712,338,2.522,339,4.215,340,4.215,341,4.215,342,4.215,343,4.215,344,4.215,345,3.549,346,2.522,347,3.549,348,2.996,349,4.215,350,2.996,351,2.996,352,1.4,353,1.757,354,2.657,355,3.165,356,2.996,357,1.388,358,1.388,359,1.03,360,2.488,361,2.996,362,1.897,363,2.303,364,2.603,365,2.22,366,2.521,367,2.996,368,2.996,369,1.977,370,2.522,371,2.21,372,1.977,373,2.996,374,1.897,375,3.549,376,3.555,377,2.996,378,1.897,379,3.11,380,1.897,381,1.897,382,1.897,383,2.996,384,2.996,385,3.549,386,3.549,387,1.897,388,2.996,389,1.897,390,2.522,391,1.897,392,2.783,393,1.808,394,2.996,395,1.897,396,4.215,397,1.637,398,1.504,399,2.522,400,1.897,401,2.996,402,2.522,403,1.791,404,2.996,405,1.897,406,2.996,407,3.125,408,2.996,409,1.897,410,2.996,411,2.996,412,2.996,413,2.996,414,2.996,415,2.996,416,2.744,417,2.507,418,1.897,419,2.21,420,2.521,421,1.285,422,3.11,423,3.11,424,2.22,425,3.599,426,2.996,427,2.521,428,1.897,429,2.996,430,2.783,431,2.739,432,4.589,433,1.592,434,1.897,435,4.877,436,4.215,437,1.897,438,2.996,439,1.897,440,2.996,441,1.977,442,1.897,443,2.996,444,1.897,445,1.598,446,1.598,447,1.897,448,1.598,449,1.037,450,1.598,451,1.4,452,1.253,453,1.598,454,3.712,455,1.897,456,1.897,457,1.804,458,4.215,459,3.712,460,2.996,461,1.897,462,2.996,463,1.897,464,1.897,465,1.897,466,1.897,467,1.897,468,1.897,469,1.897,470,1.037,471,3.712,472,2.996,473,1.4,474,1.897,475,1.897,476,1.897,477,1.897,478,1.897,479,2.996,480,1.897,481,1.897,482,1.897,483,1.897,484,2.522]],["title/components/CardDetailComponent.html",[0,0.013,109,0.637]],["body/components/CardDetailComponent.html",[0,0.017,1,0.438,2,0.716,3,0.204,4,0.18,5,0.51,6,0.51,7,0.51,8,0.18,12,0.328,13,0.772,15,0.747,17,0.467,20,0.51,21,1.433,22,1.433,23,0.51,24,0.51,25,0.772,26,0.515,27,0.772,28,0.438,29,0.438,30,0.438,31,0.438,32,1.079,33,0.772,35,0.772,37,0.111,38,0.236,40,0.562,41,1.203,42,0.716,43,0.912,44,1.218,45,0.941,47,0.756,48,1.192,49,0.832,50,1.033,51,0.341,52,0.029,53,0.466,54,0.271,55,0.341,62,0.89,65,0.515,66,0.962,67,1.033,68,0.662,69,0.611,70,0.765,71,0.311,72,0.256,75,0.515,77,0.863,80,1.162,83,0.55,84,0.683,85,0.204,86,0.341,87,0.678,88,1.246,98,0.51,99,0.772,100,0.772,101,0.51,102,0.962,103,0.51,104,0.772,105,0.438,106,0.51,107,0.438,108,0.51,109,0.89,110,0.772,111,0.438,112,0.715,113,0.772,114,0.51,115,0.438,116,0.51,117,0.438,118,0.51,119,0.438,120,0.438,121,0.51,122,0.438,123,0.611,124,0.51,125,0.438,126,0.51,127,0.438,128,0.51,129,0.438,130,0.51,131,0.51,132,0.438,133,0.473,134,0.51,135,0.51,136,0.51,137,0.014,138,0.014,144,0.772,158,1.678,160,2.159,168,2.44,172,1.937,177,2.34,178,1.74,181,1.263,183,1.389,188,2.34,189,2.159,198,2.595,199,1.151,203,0.983,205,3.077,206,1.371,209,2.081,210,2.997,211,1.656,221,2.784,222,3.258,224,3.149,225,2.644,226,3.149,228,2.787,229,4.433,230,1.151,238,1.999,275,2.073,301,0.788,326,0.683,336,3.52,353,1.937,357,1.606,358,1.606,359,1.192,364,2.837,385,3.924,419,4.155,457,0.848,484,1.93,485,4.698,486,5.361,487,1.691,488,2.241,489,2.34,490,2.558,491,2.284,492,2.919,493,2.919,494,4.181,495,5.006,496,3.077,497,3.439,498,3.439,499,3.439,500,3.439,501,3.439,502,3.077,503,3.439,504,3.439,505,3.439,506,3.439,507,2.827,508,3.466,509,2.558,510,2.292,511,2.292,512,1.379,513,2.292,514,2.919,515,2.558,516,2.292,517,2.919,518,2.919,519,2.292,520,2.292,521,2.292,522,2.292,523,2.292,524,2.292,525,2.292,526,2.292,527,2.292,528,2.292,529,2.292,530,2.292,531,2.292,532,2.292,533,2.292,534,2.292,535,2.292,536,2.292,537,2.292,538,2.292,539,2.292,540,2.292,541,1.371,542,1.691,543,2.292,544,2.292,545,3.466,546,1.371,547,2.292,548,3.466,549,3.466,550,3.466,551,3.466,552,3.466,553,3.466,554,3.466,555,3.466,556,3.466,557,3.466,558,3.466,559,2.292,560,2.292,561,2.292,562,2.292,563,2.292,564,2.292,565,2.292,566,2.292,567,2.292,568,2.292,569,2.292,570,4.181,571,1.93,572,2.292,573,2.292,574,2.292,575,2.292,576,2.292,577,2.292,578,2.292,579,2.292,580,2.292,581,2.292,582,2.292,583,1.371,584,2.292,585,1.691,586,3.466,587,2.292,588,1.513,589,4.155,590,3.924,591,3.924,592,2.787,593,2.787,594,3.924,595,3.077,596,3.439,597,4.661,598,3.466]],["title/interfaces/CardItem.html",[112,0.453,139,1.233]],["body/interfaces/CardItem.html",[3,0.331,4,0.292,8,0.292,12,0.292,15,0.673,17,0.472,37,0.18,38,0.332,52,0.029,54,0.386,57,1.565,59,0.829,62,0.711,67,2.042,85,0.331,112,0.664,137,0.02,138,0.02,139,1.377,140,2.034,142,2.171,143,2.747,144,1.532,145,2.226,151,2.457,152,1.998,157,1.945,158,1.727,159,2.922,162,1.356,296,1.807,364,2.938,421,1.597,425,3.606,430,3.226,488,1.481,489,3.02,496,3.824,497,4.274,498,4.274,499,4.274,500,4.274,501,4.274,502,3.824,503,4.274,504,4.274,505,4.274,506,4.274,592,2.922,594,4.115,595,3.226,599,3.134,600,2.226,601,4.877,602,5.198,603,4.887,604,5.793,605,4.887,606,4.115,607,4.887,608,4.887,609,4.887,610,4.887]],["title/injectables/CardItemService.html",[249,1.233,507,1.674]],["body/injectables/CardItemService.html",[3,0.089,4,0.184,8,0.079,12,0.252,15,0.636,17,0.423,26,0.262,37,0.085,38,0.12,40,0.286,45,0.525,49,0.423,51,0.42,52,0.028,53,0.315,54,0.221,55,0.42,57,0.564,59,0.392,62,0.539,65,0.631,67,1.053,68,0.192,69,0.414,70,0.239,71,0.137,77,0.583,80,1.181,85,0.089,86,0.149,87,0.458,88,0.701,97,3.849,102,0.208,112,0.7,137,0.007,138,0.007,142,1.406,151,2.486,152,1.205,157,1.124,158,0.842,162,0.489,163,0.904,171,4.692,211,1.227,230,0.884,239,1.495,249,0.651,251,0.549,253,1.543,260,1.76,264,1.053,277,1.044,278,0.756,279,0.884,280,1.124,284,2.668,290,3.659,298,0.601,299,0.549,301,0.606,302,1.163,304,0.664,306,2.506,315,0.372,364,2.28,366,1.053,369,2.119,372,1.864,379,2.607,390,1.483,441,1.163,453,0.846,457,0.372,488,2.051,489,2.49,496,4.101,497,4.584,498,4.584,499,4.584,500,4.584,501,4.584,502,4.101,503,4.584,504,4.584,505,4.584,506,4.584,507,0.884,518,1.483,583,1.92,589,2.083,595,1.864,596,4.025,601,5.231,611,0.846,612,1.98,613,1.762,614,1.762,615,1.762,616,1.762,617,2.824,618,1.762,619,1.005,620,1.163,621,1.762,622,1.005,623,1.762,624,1.005,625,2.417,626,1.483,627,1.762,628,2.809,629,1.005,630,1.762,631,1.762,632,2.377,633,2.377,634,1.483,635,1.3,636,1.005,637,2.824,638,1.762,639,1.762,640,4.959,641,4.959,642,4.959,643,1.762,644,6.212,645,1.762,646,5.675,647,3.534,648,5.843,649,4.042,650,1.762,651,5.572,652,4.959,653,6.511,654,1.762,655,1.762,656,3.534,657,4.042,658,2.824,659,1.762,660,4.042,661,1.762,662,1.762,663,1.762,664,5.572,665,4.721,666,3.534,667,4.042,668,1.762,669,1.762,670,1.762,671,1.762,672,1.762,673,3.534,674,1.762,675,1.762,676,1.762,677,4.042,678,4.042,679,4.042,680,4.042,681,1.762,682,3.403,683,3.534,684,1.762,685,5.454,686,5.675,687,4.042,688,1.762,689,1.762,690,4.424,691,4.042,692,2.824,693,3.534,694,5.572,695,4.959,696,3.534,697,3.534,698,1.762,699,4.424,700,2.824,701,4.721,702,1.762,703,1.762,704,1.762,705,1.762,706,1.762,707,1.762,708,2.824,709,2.824,710,1.762,711,3.534,712,5.154,713,2.824,714,2.824,715,1.762,716,1.762,717,3.725,718,2.824,719,1.762,720,1.762,721,1.762,722,1.762,723,1.762,724,1.762,725,3.975,726,2.824,727,1.762,728,4.042,729,1.762,730,4.424,731,1.762,732,4.042,733,3.534,734,4.042,735,4.959,736,2.824,737,1.762,738,1.762,739,1.762,740,1.762,741,3.534,742,1.762,743,1.762,744,1.762,745,1.762,746,1.762,747,1.762,748,1.762,749,1.762,750,1.762,751,1.762,752,1.762,753,1.3,754,2.824,755,4.959,756,1.762,757,4.042,758,1.762,759,3.725,760,1.762,761,1.762,762,1.762,763,2.824,764,2.824,765,1.762,766,1.762,767,1.762,768,1.762,769,1.762,770,2.824,771,2.824,772,1.762,773,1.762,774,1.762,775,1.762,776,1.762,777,4.959,778,3.534,779,1.762,780,1.762,781,1.762,782,1.762,783,1.762,784,2.824,785,1.762,786,1.762,787,2.377,788,4.042,789,4.042,790,3.534,791,1.762,792,1.762,793,2.824,794,1.762,795,1.762,796,1.762,797,1.762,798,1.762,799,2.824,800,1.762,801,3.534,802,2.377,803,2.824,804,1.762,805,1.762,806,1.762,807,1.762,808,1.762,809,2.607,810,2.824,811,2.824,812,1.762,813,4.042,814,1.762,815,1.762,816,2.824,817,4.042,818,3.534,819,1.762,820,2.824,821,2.824,822,2.824,823,1.762,824,1.762,825,1.762,826,1.762,827,1.762,828,1.762,829,1.762,830,1.762,831,1.762,832,2.824,833,1.762,834,1.762,835,2.824,836,1.762,837,2.824,838,1.762,839,1.762,840,1.762,841,1.762,842,1.762,843,1.762,844,1.762,845,1.762,846,1.762,847,2.824,848,4.721,849,1.762,850,2.824,851,1.762,852,1.762,853,3.534,854,1.762,855,1.762,856,4.424,857,1.762,858,1.762,859,3.534,860,1.762,861,1.762,862,4.959,863,1.762,864,1.762,865,1.762,866,1.762,867,1.762,868,1.762,869,1.762,870,1.762,871,2.824,872,2.824,873,2.824,874,1.762,875,1.762,876,4.959,877,1.762,878,3.534,879,1.762,880,1.762,881,2.824,882,1.762,883,1.762,884,1.762,885,4.042,886,2.824,887,3.534,888,3.534,889,3.534,890,3.534,891,1.762,892,3.534,893,1.762,894,2.824,895,2.823,896,4.042,897,1.762,898,1.762,899,1.762,900,1.762,901,1.762,902,1.762,903,1.762,904,1.762,905,1.762,906,1.762,907,1.762,908,1.762,909,1.762,910,1.762,911,3.534,912,1.762,913,1.762,914,2.824,915,1.762,916,1.762,917,1.762,918,1.762,919,1.762,920,1.762,921,1.762,922,2.824,923,1.762,924,1.762,925,1.762,926,1.762,927,2.824,928,1.762,929,1.762,930,1.762,931,1.762,932,1.762,933,1.762,934,1.762,935,1.762,936,1.762,937,2.824,938,2.824,939,1.762,940,1.762,941,1.762,942,1.762,943,2.824,944,1.762,945,1.483,946,2.824,947,3.534,948,1.762,949,1.762,950,1.762,951,1.762,952,1.762,953,1.3,954,2.824,955,3.534,956,4.042,957,4.042,958,1.762,959,1.762,960,1.762,961,1.762,962,2.824,963,1.762,964,1.762,965,1.762,966,1.762,967,1.762,968,1.762,969,4.424,970,1.762,971,4.042,972,2.824,973,2.824,974,1.762,975,1.762,976,1.762,977,1.762,978,1.762,979,1.762,980,2.824,981,1.762,982,1.762,983,1.762,984,3.534,985,1.762,986,1.762,987,1.762,988,1.762,989,1.762,990,1.762,991,1.762,992,1.762,993,1.762,994,1.762,995,3.534,996,3.534,997,1.762,998,1.483,999,1.762,1000,1.762,1001,1.762,1002,1.762,1003,1.762,1004,1.762,1005,1.762,1006,1.762,1007,1.762,1008,1.762,1009,1.762,1010,1.762,1011,1.762,1012,1.762,1013,1.762,1014,1.762,1015,1.762,1016,4.042,1017,1.762,1018,2.824,1019,2.824,1020,1.762,1021,1.762,1022,1.762,1023,1.762,1024,1.762,1025,1.762,1026,1.762,1027,1.762,1028,1.762,1029,1.762,1030,2.824,1031,1.762,1032,1.762,1033,1.762,1034,1.762,1035,1.762,1036,1.762,1037,1.762,1038,1.762,1039,1.762,1040,1.762,1041,1.762,1042,1.762,1043,1.762,1044,1.762,1045,1.762,1046,1.762,1047,1.762,1048,1.762,1049,1.762,1050,1.762,1051,1.762,1052,1.762,1053,1.762,1054,1.762,1055,1.762,1056,1.762,1057,1.762,1058,1.762,1059,1.762,1060,1.762,1061,1.762,1062,1.762,1063,1.762,1064,1.762,1065,1.762,1066,1.005,1067,1.483,1068,1.762,1069,1.005,1070,1.005,1071,0.846,1072,1.005,1073,1.005,1074,1.005,1075,2.369,1076,1.005,1077,1.005,1078,1.005,1079,1.005,1080,0.742,1081,1.005,1082,1.005,1083,1.005]],["title/components/CardManageComponent.html",[0,0.013,31,0.637]],["body/components/CardManageComponent.html",[0,0.02,1,0.614,2,0.915,3,0.286,4,0.252,5,0.717,6,0.717,7,0.717,8,0.252,12,0.397,13,0.987,15,0.674,17,0.46,18,3.731,20,0.717,21,1.493,22,1.493,23,0.717,24,0.717,25,0.987,26,0.659,27,0.987,28,0.614,29,0.614,30,0.614,31,1.043,32,1.308,33,0.987,35,0.987,37,0.156,38,0.301,40,0.718,41,1.409,42,1.127,43,1.281,44,1.35,45,0.851,47,0.718,48,1.524,49,1.063,51,0.659,52,0.029,53,0.609,54,0.294,55,0.659,62,1.179,65,0.753,66,1.127,68,0.614,69,0.567,70,0.804,71,0.437,72,0.359,75,0.659,77,1.046,80,1.309,81,4.366,83,0.772,84,0.959,85,0.286,86,0.479,87,0.885,88,1.511,98,0.717,99,0.987,100,0.987,101,0.717,102,1.127,103,0.717,104,0.987,105,0.614,106,0.717,107,0.614,108,0.717,109,0.614,110,0.987,111,0.614,112,0.823,113,0.987,114,0.717,115,0.614,116,0.717,117,0.614,118,0.717,119,0.614,120,0.614,121,0.717,122,0.614,123,0.781,124,0.717,125,0.614,126,0.717,127,0.614,128,0.717,129,0.614,130,0.717,131,0.717,132,0.614,133,0.664,134,0.717,135,0.717,136,0.717,137,0.018,138,0.018,144,1.216,151,1.763,158,1.321,181,1.063,183,1.321,225,1.616,230,2.225,239,2.188,260,2.017,296,1.639,326,0.959,353,2.125,357,2.053,358,2.053,359,1.524,364,2.538,403,3.539,419,3.269,457,1.19,485,4.366,488,2.524,489,3.101,490,2.375,507,3.101,512,1.763,541,1.924,542,2.375,589,3.269,590,3.731,591,3.731,592,2.65,593,2.65,1075,3.269,1084,2.71,1085,4.431,1086,4.431,1087,4.431,1088,3.345,1089,5.46,1090,4.431,1091,4.431,1092,3.218,1093,4.431,1094,3.269,1095,3.218,1096,4.431,1097,3.218,1098,4.431,1099,3.218,1100,2.71,1101,3.218,1102,3.218,1103,2.71,1104,3.218,1105,2.71,1106,2.71,1107,1.924,1108,2.71,1109,2.375,1110,3.218,1111,3.269,1112,4.431,1113,4.431,1114,2.925,1115,2.925,1116,2.65]],["title/components/CarditemListComponent.html",[0,0.013,111,0.637]],["body/components/CarditemListComponent.html",[0,0.02,1,0.583,2,0.881,3,0.272,4,0.239,5,0.679,6,0.679,7,0.679,8,0.239,12,0.418,13,1.188,15,0.693,17,0.462,20,0.679,21,1.485,22,1.485,23,0.679,24,0.679,25,0.951,26,0.635,27,0.951,28,0.583,29,0.583,30,0.583,31,0.583,32,1.271,33,0.951,35,0.951,37,0.148,38,0.29,40,0.692,41,1.377,42,1.101,44,1.358,45,0.793,47,0.692,48,1.469,50,1.273,51,0.635,52,0.029,53,0.595,54,0.286,55,0.635,57,1.798,59,1.188,60,3.522,65,0.635,66,1.017,67,1.468,68,0.583,69,0.538,70,0.79,71,0.414,72,0.34,75,0.635,77,1.017,80,0.881,83,0.732,84,0.909,85,0.272,86,0.454,87,0.911,88,1.468,98,0.679,99,0.951,100,0.951,101,0.679,102,1.101,103,0.679,104,0.951,105,0.583,106,0.679,107,0.583,108,0.679,109,0.583,110,0.951,111,1.019,112,0.852,113,0.951,114,0.679,115,0.583,116,0.679,117,0.583,118,0.679,119,0.583,120,0.583,121,0.679,122,0.583,123,0.752,124,0.679,125,0.583,126,0.679,127,0.583,128,0.679,129,0.583,130,0.679,131,0.679,132,0.583,133,0.63,134,0.679,135,0.679,136,0.679,137,0.017,138,0.017,152,1.468,157,1.699,158,1.59,163,1.863,181,1.396,183,1.273,230,2.679,239,1.973,264,2.553,296,1.579,301,1.694,326,0.909,357,1.978,358,1.978,359,1.469,360,1.96,363,2.333,364,2.745,365,1.699,366,1.824,369,2.818,372,2.014,386,3.595,393,1.308,488,2.316,489,3.061,496,3.842,507,3.061,512,1.699,541,1.824,542,2.251,583,1.824,585,2.251,595,2.818,606,3.595,612,4.147,628,3.937,635,3.15,1067,3.595,1100,2.569,1106,2.569,1116,2.553,1117,4.728,1118,4.728,1119,2.251,1120,3.842,1121,3.595,1122,3.595,1123,3.595,1124,4.27,1125,3.051,1126,4.492,1127,4.27,1128,3.634,1129,4.27,1130,3.051,1131,3.051,1132,3.595,1133,5.336,1134,3.595,1135,4.27,1136,4.27,1137,2.569,1138,3.051,1139,3.051,1140,3.051,1141,3.051,1142,1.532,1143,3.051,1144,3.051,1145,4.27,1146,4.27,1147,4.27,1148,3.15]],["title/components/LoginComponent.html",[0,0.013,115,0.637]],["body/components/LoginComponent.html",[0,0.02,1,0.63,2,0.93,3,0.294,4,0.258,5,0.734,6,0.734,7,0.734,8,0.258,12,0.402,13,1.003,15,0.556,17,0.466,19,2.694,20,0.734,21,1.497,22,1.497,23,0.734,24,0.734,25,1.003,26,0.67,27,1.003,28,0.63,29,0.63,30,0.63,31,0.63,32,1.325,33,1.003,35,1.003,37,0.16,38,0.306,40,0.731,41,1.424,42,1.059,43,1.312,44,1.328,45,0.886,47,0.731,48,1.55,49,1.323,50,1.644,51,0.49,52,0.029,53,0.572,54,0.262,55,0.49,59,1.228,62,1.053,63,1.654,65,0.67,66,1.139,70,0.784,71,0.448,72,0.368,75,0.67,77,1.059,80,0.93,83,0.791,84,0.983,85,0.294,86,0.49,87,0.731,98,0.734,99,1.003,100,1.003,101,0.734,102,1.139,103,0.734,104,1.003,105,0.63,106,0.734,107,0.63,108,0.734,109,0.63,110,1.003,111,0.63,112,0.448,113,1.003,114,0.734,115,1.053,116,0.734,117,0.63,118,0.734,119,0.63,120,0.63,121,0.734,122,0.63,123,1.095,124,0.734,125,0.63,126,0.734,127,0.63,128,0.734,129,0.63,130,0.734,131,0.734,132,0.63,133,0.681,134,0.734,135,0.734,136,0.734,137,0.018,138,0.018,144,1.003,158,1.777,160,2.556,168,3.005,172,2.378,177,2.769,178,2.262,181,1.081,183,1.343,188,2.262,189,2.556,198,2.201,199,1.656,203,1.414,207,1.656,209,1.766,210,2.262,211,1.25,221,1.933,222,2.769,326,0.983,346,5.02,353,2.137,359,1.55,371,4.07,376,1.972,393,1.414,397,3.257,470,1.802,491,2.804,512,1.793,1107,2.694,1134,2.777,1142,1.656,1149,2.777,1150,3.794,1151,4.506,1152,4.506,1153,5.133,1154,4.506,1155,3.298,1156,3.298,1157,3.325,1158,2.433,1159,3.298,1160,2.433,1161,3.298,1162,3.298,1163,3.298,1164,3.298,1165,3.298,1166,3.298,1167,3.298,1168,4.028,1169,3.298,1170,3.299,1171,4.644,1172,2.974]],["title/components/NavbarComponent.html",[0,0.013,117,0.637]],["body/components/NavbarComponent.html",[0,0.02,1,0.587,2,0.886,3,0.274,4,0.241,5,0.685,6,0.685,7,0.685,8,0.241,12,0.388,13,1.192,15,0.811,17,0.459,20,0.685,21,1.486,22,1.486,23,0.685,24,0.685,25,0.956,26,0.638,27,0.956,28,0.587,29,0.587,30,0.587,31,0.587,32,1.277,33,0.956,35,0.956,37,0.149,38,0.292,40,0.696,41,1.382,42,1.021,44,1.36,45,0.868,47,0.696,48,1.477,49,1.03,50,1.28,51,0.457,52,0.029,53,0.552,54,0.287,55,0.457,59,1.36,63,1.695,64,2.155,65,0.736,66,1.105,68,0.587,69,0.542,70,0.765,71,0.418,72,0.343,75,0.638,77,1.021,80,0.886,83,0.738,84,0.917,85,0.274,86,0.457,87,0.696,88,0.917,91,3.615,98,0.685,99,0.956,100,0.956,101,0.685,102,1.105,103,0.685,104,0.956,105,0.587,106,0.685,107,0.587,108,0.685,109,0.587,110,0.956,111,0.587,112,0.418,113,0.956,114,0.685,115,0.587,116,0.685,117,1.022,118,0.685,119,0.587,120,0.587,121,0.685,122,0.587,123,0.757,124,0.685,125,0.587,126,0.685,127,0.587,128,0.685,129,0.587,130,0.685,131,0.685,132,0.587,133,0.635,134,0.685,135,0.685,136,0.685,137,0.018,138,0.018,144,1.192,148,1.989,158,1.28,162,1.485,163,1.375,168,2.481,172,2.292,181,1.4,183,1.596,189,2.481,198,1.841,203,1.319,207,1.544,209,1.477,238,1.841,254,3.168,264,2.567,277,1.588,278,1.841,279,2.155,280,2.131,282,2.834,296,1.588,301,1.058,315,1.588,326,0.917,331,3.615,332,3.615,345,4.165,347,4.508,352,2.269,353,2.06,357,1.989,358,1.989,359,1.477,360,1.709,365,1.709,366,2.567,376,3.202,392,2.834,393,1.319,431,2.269,441,2.834,488,1.709,489,2.155,491,2.702,512,2.322,596,3.95,625,2.567,628,3.168,632,3.615,633,3.615,634,5.143,635,3.95,1071,2.589,1107,2.567,1142,1.544,1168,2.834,1172,2.834,1173,2.589,1174,5.354,1175,3.168,1176,4.293,1177,4.293,1178,4.947,1179,5.354,1180,4.293,1181,3.075,1182,5.354,1183,4.293,1184,3.075,1185,4.293,1186,3.075,1187,3.075,1188,3.075,1189,3.075,1190,3.075,1191,3.075,1192,3.075,1193,3.075,1194,3.075,1195,4.947,1196,5.354,1197,4.293,1198,4.293,1199,4.293,1200,4.293,1201,4.293,1202,4.293,1203,2.834]],["title/components/OrderDetailComponent.html",[0,0.013,119,0.637]],["body/components/OrderDetailComponent.html",[0,0.02,1,0.617,2,0.917,3,0.287,4,0.253,5,0.719,6,0.719,7,0.719,8,0.253,12,0.398,13,0.989,15,0.731,17,0.461,20,0.719,21,1.494,22,1.494,23,0.719,24,0.719,25,0.989,26,0.66,27,0.989,28,0.617,29,0.617,30,0.617,31,0.617,32,1.31,33,0.989,35,0.989,37,0.156,38,0.302,40,0.72,42,1.183,45,0.852,47,0.72,51,0.48,52,0.029,53,0.566,54,0.317,55,0.48,62,1.212,65,0.66,68,0.848,69,0.783,70,0.742,71,0.438,72,0.36,75,0.66,77,1.295,80,0.917,83,0.775,85,0.287,86,0.48,87,0.524,98,0.719,99,0.989,100,0.989,101,0.719,102,1.129,103,0.719,104,0.989,105,0.617,106,0.719,107,0.617,108,0.719,109,0.617,110,0.989,111,0.617,112,0.778,113,0.989,114,0.719,115,0.617,116,0.719,117,0.617,118,0.719,119,1.044,120,0.617,121,0.719,122,0.617,123,0.783,124,0.719,125,0.617,126,0.719,127,0.617,128,0.719,129,0.617,130,0.719,131,0.719,132,0.617,133,0.667,134,0.719,135,0.719,136,0.719,137,0.018,138,0.018,142,1.767,144,0.989,152,1.63,160,2.058,163,1.422,183,1.324,211,0.896,232,2.345,239,1.642,260,1.767,271,1.642,277,1.642,280,1.767,306,2.02,315,1.642,333,3.351,360,2.572,364,1.905,365,2.357,392,2.932,433,2.345,449,1.764,457,1.194,487,2.382,488,2.176,490,3.277,492,3.739,493,3.739,541,1.931,592,3.697,593,2.656,1088,2.932,1094,3.277,1111,3.277,1114,3.784,1115,3.784,1116,3.542,1120,3.609,1148,3.277,1204,3.91,1205,3.91,1206,4.988,1207,4.231,1208,4.23,1209,4.441,1210,5.076,1211,4.441,1212,3.229,1213,4.603,1214,3.229,1215,4.441,1216,2.932,1217,4.441,1218,3.739,1219,3.229,1220,4.441,1221,3.27,1222,5.076,1223,2.131,1224,2.382,1225,2.719,1226,2.719,1227,3.739,1228,4.441]],["title/components/OrderFinishComponent.html",[0,0.013,120,0.637]],["body/components/OrderFinishComponent.html",[0,0.021,1,0.653,2,0.953,3,0.304,4,0.268,5,0.762,6,0.762,7,0.762,8,0.268,12,0.362,13,1.029,15,0.57,17,0.464,20,0.762,21,1.503,22,1.503,23,0.762,24,0.762,25,1.029,26,0.687,27,1.029,28,0.653,29,0.653,30,0.653,31,0.653,33,1.029,35,1.029,37,0.165,38,0.314,40,0.749,41,1.445,42,1.156,43,1.361,44,1.372,45,0.778,47,0.749,49,1.108,50,1.669,51,0.509,52,0.029,53,0.583,54,0.268,55,0.509,57,1.479,62,0.882,64,2.319,65,0.509,66,0.706,68,0.653,69,0.603,70,0.818,71,0.464,72,0.381,75,0.687,77,1.325,80,0.953,84,1.019,85,0.304,86,0.509,87,0.749,88,1.377,92,3.889,98,0.762,99,1.029,100,1.029,101,0.762,102,1.156,103,0.762,104,1.029,105,0.653,106,0.762,107,0.653,108,0.762,109,0.653,110,1.029,111,0.653,112,0.464,113,1.029,114,0.762,115,0.653,116,0.762,117,0.653,118,0.762,119,1.069,120,1.069,121,0.762,122,0.653,123,0.814,124,0.762,125,0.653,126,0.762,127,0.653,128,0.762,129,0.653,130,0.762,131,0.762,132,0.653,133,0.706,134,0.762,135,0.762,136,0.762,137,0.019,138,0.019,162,1.281,181,1.446,183,1.377,238,2.402,271,1.934,306,1.361,326,1.019,333,3.452,353,2.155,359,1.589,360,2.398,365,2.398,403,2.762,427,2.045,433,2.585,449,1.868,452,2.258,457,1.265,470,1.868,473,2.524,491,2.857,588,2.258,1204,3.697,1205,2.258,1221,3.349,1223,2.258,1224,2.524,1229,4.715,1230,2.88,1231,4.619,1232,4.619,1233,4.619,1234,4.619,1235,4.619,1236,4.619,1237,3.42,1238,3.408,1239,4.619,1240,4.619,1241,3.408,1242,3.889,1243,3.408,1244,2.88,1245,3.42,1246,2.524,1247,3.42,1248,3.42,1249,2.88,1250,2.88,1251,3.42,1252,3.42,1253,3.889,1254,4.619,1255,4.619,1256,4.619,1257,3.889,1258,4.619]],["title/components/OrderListComponent.html",[0,0.013,30,0.637]],["body/components/OrderListComponent.html",[0,0.018,1,0.507,2,0.799,3,0.236,4,0.208,5,0.592,6,0.592,7,0.592,8,0.208,12,0.435,13,0.862,15,0.726,17,0.469,20,0.592,21,1.461,22,1.461,23,0.592,24,0.592,25,0.862,26,0.678,27,0.862,28,0.507,29,0.507,30,0.957,31,0.507,32,1.177,33,0.862,35,0.862,37,0.129,38,0.263,40,0.627,41,1.293,42,1.034,44,1.309,45,0.874,47,0.812,48,1.331,50,1.153,51,0.745,52,0.029,53,0.62,54,0.333,55,0.745,59,1.309,62,1.123,63,1.542,64,1.942,65,0.826,66,0.942,68,0.871,69,0.804,70,0.779,71,0.361,72,0.296,75,0.575,77,1.257,78,4.423,80,1.034,83,0.637,84,0.792,85,0.236,86,0.395,87,0.863,88,1.153,98,0.592,99,0.862,100,0.862,101,0.592,102,1.034,103,0.592,104,0.862,105,0.507,106,0.592,107,0.507,108,0.592,109,0.507,110,0.862,111,0.507,112,0.798,113,0.862,114,0.592,115,0.507,116,0.592,117,0.507,118,0.592,119,0.957,120,0.507,121,0.592,122,0.507,123,0.682,124,0.592,125,0.507,126,0.592,127,0.507,128,0.592,129,0.507,130,0.592,131,0.592,132,0.507,133,0.548,134,0.592,135,0.592,136,0.592,137,0.016,138,0.016,144,1.116,146,1.659,148,1.792,151,1.539,152,1.494,154,1.452,160,1.792,162,1.073,181,1.202,183,1.153,211,1.073,231,3.257,239,2.055,260,1.994,271,1.853,277,1.431,278,1.659,301,0.914,306,1.539,315,1.687,355,3.431,357,1.792,358,1.792,360,2.611,365,2.611,370,4.68,376,2.313,407,3.841,421,1.659,430,2.554,433,2.612,449,1.452,450,2.237,457,1.431,488,2.423,512,1.539,541,1.589,571,2.237,593,2.313,625,2.997,1088,3.308,1094,2.854,1114,2.554,1115,1.754,1116,2.313,1119,1.96,1120,2.554,1121,3.257,1122,3.257,1123,3.257,1204,3.957,1205,1.754,1206,3.257,1207,4.02,1208,3.929,1218,3.257,1221,3.642,1223,1.754,1225,3.257,1226,3.257,1243,2.854,1244,2.237,1253,3.257,1257,3.257,1259,4.68,1260,4.68,1261,4.562,1262,4.562,1263,4.562,1264,5.325,1265,3.868,1266,2.657,1267,3.868,1268,3.868,1269,2.657,1270,3.868,1271,2.657,1272,3.868,1273,2.657,1274,3.868,1275,3.868,1276,3.868,1277,2.657,1278,3.868,1279,2.657,1280,2.657,1281,2.657,1282,3.868,1283,2.657,1284,2.657,1285,2.657,1286,3.868,1287,3.868,1288,3.868,1289,3.868]],["title/components/PasswordRecoveryComponent.html",[0,0.013,122,0.637]],["body/components/PasswordRecoveryComponent.html",[0,0.021,1,0.646,2,0.946,3,0.301,4,0.265,5,0.753,6,0.753,7,0.753,8,0.265,12,0.407,13,1.021,15,0.688,17,0.463,20,0.753,21,1.501,22,1.501,23,0.753,24,0.753,25,1.021,26,0.681,27,1.021,28,0.646,29,0.646,30,0.646,31,0.646,32,1.342,33,1.021,35,1.021,37,0.164,38,0.312,40,0.743,41,1.439,42,0.698,45,0.866,47,0.743,49,1.337,51,0.503,52,0.029,53,0.58,54,0.266,55,0.503,58,3.859,59,1.021,65,0.681,66,1.073,70,0.791,71,0.459,72,0.377,75,0.681,77,1.073,80,0.946,83,0.811,85,0.301,86,0.503,87,0.743,88,1.008,98,0.753,99,1.021,100,1.021,101,0.753,102,1.151,103,0.753,104,1.021,105,0.646,106,0.753,107,0.646,108,0.753,109,0.646,110,1.021,111,0.646,112,0.459,113,1.021,114,0.753,115,0.646,116,0.753,117,0.646,118,0.753,119,0.646,120,0.646,121,0.753,122,1.064,123,1.101,124,0.753,125,0.646,126,0.753,127,0.646,128,0.753,129,0.646,130,0.753,131,0.753,132,0.646,133,0.698,134,0.753,135,0.753,136,0.753,137,0.019,138,0.019,146,1.966,168,2.582,172,2.409,177,2.798,178,2.301,180,3.025,181,1.337,183,1.366,188,2.301,189,2.582,198,1.966,199,1.698,203,1.45,207,1.698,209,1.577,210,1.698,211,0.938,221,1.966,222,2.301,326,1.008,352,2.495,353,2.113,354,2.798,359,1.577,371,3.382,393,1.45,398,3.215,417,3.531,425,4.113,491,2.84,509,3.382,512,1.824,514,3.859,895,2.022,1107,2.741,1142,1.698,1170,2.741,1171,3.859,1172,3.025,1203,3.965,1290,4.432,1291,5.057,1292,2.847,1293,4.298,1294,2.741,1295,4.583,1296,4.583,1297,5.199,1298,5.574,1299,4.583,1300,3.381,1301,3.381,1302,2.495,1303,3.381,1304,2.495,1305,3.381,1306,2.495,1307,3.381,1308,2.847,1309,3.381,1310,3.381,1311,3.381,1312,3.381]],["title/components/PasswordResetComponent.html",[0,0.013,125,0.637]],["body/components/PasswordResetComponent.html",[0,0.019,1,0.556,2,0.853,3,0.259,4,0.228,5,0.648,6,0.648,7,0.648,8,0.228,12,0.376,13,0.92,15,0.743,17,0.444,20,0.648,21,1.477,22,1.477,23,0.648,24,0.648,25,0.92,26,0.614,27,0.92,28,0.556,29,0.556,30,0.556,31,0.556,32,1.239,33,0.92,35,0.92,37,0.141,38,0.281,40,0.67,41,1.349,42,1.079,45,0.877,47,0.67,51,0.433,52,0.029,53,0.535,54,0.279,55,0.433,65,0.614,66,1.079,67,1.231,68,0.556,69,0.513,70,0.778,71,0.395,72,0.325,75,0.614,77,0.991,80,0.853,83,0.698,85,0.259,86,0.433,87,0.779,88,1.431,98,0.648,99,0.92,100,0.92,101,0.648,102,1.079,103,0.648,104,0.92,105,0.556,106,0.648,107,0.556,108,0.648,109,0.556,110,0.92,111,0.556,112,0.395,113,0.92,114,0.648,115,0.556,116,0.648,117,0.556,118,0.648,119,0.556,120,0.556,121,0.648,122,0.556,123,1.118,124,0.648,125,0.998,126,0.648,127,0.556,128,0.648,129,0.556,130,0.648,131,0.648,132,0.556,133,0.601,134,0.648,135,0.648,136,0.648,137,0.017,138,0.017,144,1.229,149,2.47,168,2.656,172,2.225,177,2.624,178,2.074,180,2.727,181,1.375,183,1.558,188,2.074,189,2.421,198,2.059,199,2.074,203,1.248,206,1.741,209,1.652,210,2.074,211,1.146,221,1.772,222,2.624,226,3.125,228,3.125,232,1.772,238,1.772,254,3.048,271,2.228,276,1.741,301,1.421,326,0.868,353,2.072,354,2.96,357,1.914,358,1.914,359,1.421,363,3.291,393,1.248,398,2.878,421,2.665,470,2.257,491,2.623,512,1.644,546,2.47,809,3.856,895,3.428,953,3.856,1109,2.148,1126,4.4,1128,3.856,1132,3.478,1137,2.451,1142,1.461,1160,2.148,1168,4.225,1203,2.727,1213,3.478,1216,3.977,1238,3.048,1241,4.229,1290,4.445,1304,2.148,1313,5.072,1314,2.451,1315,4.131,1316,4.131,1317,4.131,1318,4.801,1319,4.801,1320,4.4,1321,2.451,1322,4.131,1323,2.911,1324,4.131,1325,2.911,1326,2.911,1327,2.911,1328,2.451,1329,2.911,1330,3.169,1331,1.921,1332,2.911,1333,4.131,1334,2.911,1335,4.131,1336,4.131,1337,2.911,1338,2.911,1339,3.478,1340,3.478,1341,2.451,1342,2.911,1343,2.911,1344,2.911,1345,3.856,1346,3.856,1347,3.856,1348,3.856,1349,4.4,1350,4.4,1351,4.4,1352,4.4,1353,3.478,1354,3.478]],["title/components/PaymentComponent.html",[0,0.013,127,0.637]],["body/components/PaymentComponent.html",[0,0.02,1,0.624,2,0.924,3,0.291,4,0.256,5,0.728,6,0.728,7,0.728,8,0.256,12,0.4,13,1.324,15,0.678,17,0.47,20,0.728,21,1.496,22,1.496,23,0.728,24,0.728,25,0.997,26,0.759,27,0.997,28,0.624,29,0.624,30,0.624,31,0.624,32,1.318,33,0.997,35,0.997,37,0.158,38,0.305,40,0.726,41,1.418,42,0.924,43,1.3,44,1.356,45,0.817,47,0.726,48,1.54,49,1.074,50,1.772,51,0.486,52,0.029,53,0.57,54,0.26,55,0.486,57,1.434,59,0.997,65,0.666,66,0.924,68,0.624,69,0.576,70,0.746,71,0.444,72,0.364,75,0.666,77,1.054,80,0.924,83,0.784,84,0.974,85,0.291,86,0.486,87,0.726,88,1.335,98,0.728,99,0.997,100,0.997,101,0.728,102,1.134,103,0.728,104,0.997,105,0.624,106,0.728,107,0.624,108,0.728,109,0.624,110,0.997,111,0.624,112,0.444,113,0.997,114,0.728,115,0.624,116,0.728,117,0.624,118,0.728,119,0.624,120,0.624,121,0.728,122,0.624,123,0.789,124,0.728,125,0.624,126,0.728,127,1.049,128,0.728,129,0.624,130,0.728,131,0.728,132,0.624,133,0.674,134,0.728,135,0.728,136,0.728,137,0.018,138,0.018,144,0.997,146,1.92,162,1.242,163,1.759,181,1.318,183,1.335,187,3.77,253,2.446,271,1.889,277,1.656,278,1.92,280,1.782,296,1.656,306,1.3,315,1.656,326,0.974,353,2.132,359,1.54,360,2.187,365,1.782,392,2.955,393,1.92,403,3.286,457,1.208,470,1.785,509,3.303,588,2.157,725,4.626,1242,3.77,1243,3.303,1246,2.411,1249,2.751,1250,2.751,1355,2.751,1356,5.495,1357,5.452,1358,4.477,1359,4.477,1360,4.477,1361,5.108,1362,5.495,1363,4.477,1364,3.267,1365,4.477,1366,4.477,1367,4.477,1368,5.495,1369,5.495,1370,3.77,1371,3.267,1372,4.477,1373,4.477,1374,4.477,1375,4.477,1376,5.495,1377,3.267,1378,2.751,1379,4.477,1380,3.267,1381,3.267,1382,4.477,1383,3.267,1384,3.267,1385,4.477,1386,5.495,1387,4.477,1388,4.477]],["title/interfaces/Recovery.html",[139,1.233,1294,1.994]],["body/interfaces/Recovery.html",[3,0.429,4,0.377,8,0.377,12,0.377,15,0.594,17,0.468,37,0.233,38,0.391,47,0.781,52,0.028,54,0.356,63,1.593,67,1.829,85,0.429,137,0.024,138,0.024,139,1.781,140,2.631,144,1.073,145,2.88,152,1.829,154,3.471,157,2.285,275,2.88,398,3.081,895,3.939,1238,3.554,1293,4.79,1294,3.434,1389,4.055,1390,5.605,1391,5.743,1392,6.354]],["title/components/RegistrationFormComponent.html",[0,0.013,129,0.637]],["body/components/RegistrationFormComponent.html",[0,0.018,1,0.493,2,0.782,3,0.23,4,0.202,5,0.576,6,0.576,7,0.576,8,0.202,12,0.352,13,0.844,17,0.456,20,0.576,21,1.456,22,1.456,23,0.576,24,0.576,25,0.844,26,0.564,27,0.844,28,0.493,29,0.493,30,0.493,31,0.493,32,1.159,33,0.844,35,0.844,37,0.125,38,0.258,40,0.615,41,1.276,42,1.021,44,1.299,45,0.9,47,0.854,48,1.304,50,1.13,51,0.384,52,0.029,53,0.501,54,0.22,55,0.384,62,0.493,63,1.578,65,0.564,66,1.021,70,0.772,71,0.351,72,0.288,75,0.564,77,0.927,80,0.782,83,0.62,84,0.77,85,0.23,86,0.384,87,0.728,88,1.338,97,3.291,98,0.576,99,0.844,100,0.844,101,0.576,102,1.021,103,0.576,104,0.844,105,0.493,106,0.576,107,0.493,108,0.576,109,0.493,110,0.844,111,0.493,112,0.351,113,0.844,114,0.576,115,0.493,116,0.576,117,0.493,118,0.576,119,0.493,120,0.493,121,0.576,122,0.493,123,0.97,124,0.576,125,0.493,126,0.576,127,0.493,128,0.576,129,0.944,130,1.267,131,0.576,132,0.493,133,0.533,134,0.576,135,0.576,136,0.576,137,0.016,138,0.016,144,1.101,146,1.626,148,1.197,158,1.774,168,2.758,172,2.08,173,3.313,177,2.483,178,1.903,181,1.32,185,3.192,188,1.903,189,2.291,198,2.439,199,1.903,200,1.907,201,1.907,202,1.706,203,1.108,204,2.957,206,1.545,209,1.957,210,2.763,211,1.527,221,2.595,222,3.115,224,3.291,225,2.763,226,3.618,227,3.633,228,2.957,232,1.626,237,3.192,271,2.157,296,0.956,301,0.889,326,0.77,353,2.007,354,2.855,357,1.756,358,1.756,359,1.304,363,3.187,393,1.108,397,2.702,403,2.267,416,2.957,417,3.306,420,2.957,421,2.711,424,2.957,470,1.412,512,1.509,583,1.545,585,1.907,682,3.192,753,3.649,809,3.649,953,3.649,1108,2.176,1142,1.297,1158,1.907,1160,1.907,1168,4.096,1170,2.267,1172,2.502,1216,4.172,1241,3.649,1302,1.907,1304,1.907,1306,1.907,1320,4.164,1321,2.176,1328,2.176,1330,2.963,1331,1.706,1339,3.192,1340,3.192,1341,2.176,1345,4.465,1346,4.465,1347,4.465,1348,3.649,1349,4.164,1350,4.164,1351,4.164,1352,4.164,1353,3.192,1354,3.192,1393,5.164,1394,5.164,1395,2.176,1396,4.634,1397,3.791,1398,3.791,1399,3.791,1400,4.489,1401,3.791,1402,2.584,1403,3.791,1404,3.791,1405,3.192,1406,2.584,1407,2.176,1408,2.584,1409,2.176,1410,2.584,1411,2.584,1412,2.584,1413,2.584,1414,2.584,1415,2.584,1416,3.78,1417,3.192,1418,2.584,1419,2.584,1420,2.584,1421,2.584,1422,2.584,1423,2.584,1424,2.584,1425,2.584,1426,2.584,1427,2.584,1428,2.584,1429,2.584,1430,2.584,1431,2.584,1432,2.584,1433,2.584,1434,2.584,1435,2.584,1436,2.176,1437,1.907,1438,2.584,1439,2.584,1440,2.584,1441,3.192]],["title/interfaces/ShoppingCart.html",[139,1.233,433,1.43]],["body/interfaces/ShoppingCart.html",[3,0.379,4,0.334,8,0.334,12,0.417,17,0.458,37,0.206,38,0.362,52,0.029,54,0.371,59,1.187,62,1.273,63,1.478,70,0.723,85,0.379,112,0.827,137,0.022,138,0.022,139,1.575,140,2.327,142,2.424,144,1.187,145,3.186,147,3.186,151,2.424,152,2.008,154,3.328,156,3.186,157,2.12,160,2.468,162,1.775,232,2.285,239,1.97,296,1.97,360,2.546,365,2.611,427,3.825,430,3.517,431,4.495,433,2.285,451,3.143,452,2.812,488,2.12,502,4.021,600,3.186,1088,4.021,1175,3.931,1207,3.517,1442,3.586,1443,3.586,1444,4.486,1445,6.091,1446,5.328,1447,4.486,1448,5.328,1449,5.328,1450,5.328,1451,4.26]],["title/components/ShoppingCartComponent.html",[0,0.013,132,0.637]],["body/components/ShoppingCartComponent.html",[0,0.02,1,0.581,2,0.88,3,0.271,4,0.238,5,0.678,6,0.678,7,0.678,8,0.238,12,0.385,13,0.949,15,0.693,17,0.46,20,0.678,21,1.484,22,1.484,23,0.678,24,0.678,25,0.949,26,0.731,27,0.949,28,0.581,29,0.581,30,0.581,31,0.581,32,1.27,33,0.949,35,0.949,37,0.147,38,0.29,40,0.691,41,1.376,42,1.1,43,1.211,44,1.33,45,0.865,48,1.466,49,1.023,50,1.589,51,0.453,52,0.029,53,0.549,54,0.309,55,0.453,57,0.975,59,1.295,62,1.163,64,2.676,65,0.634,66,1.015,68,0.939,69,0.867,70,0.762,71,0.413,72,0.339,75,0.634,77,1.015,80,0.88,83,0.73,84,0.907,85,0.271,86,0.453,87,0.691,88,1.271,98,0.678,99,0.949,100,0.949,101,0.678,102,1.1,103,0.678,104,0.949,105,0.581,106,0.678,107,0.581,108,0.678,109,0.581,110,0.949,111,0.581,112,0.413,113,0.949,114,0.678,115,0.581,116,0.678,117,0.581,118,0.678,119,0.581,120,0.581,121,0.678,122,0.581,123,0.751,124,0.678,125,0.581,126,0.678,127,0.581,128,0.678,129,0.581,130,0.678,131,0.678,132,1.018,133,1.232,134,0.678,135,0.678,136,0.678,137,0.017,138,0.017,144,0.678,152,1.271,160,1.975,162,1.479,163,1.365,170,3.145,181,1.279,183,1.271,238,1.828,253,2.329,260,1.696,265,3.589,277,1.576,278,1.828,279,2.14,280,1.696,282,2.009,306,1.958,315,1.576,326,0.907,333,3.247,353,2.096,359,1.466,360,2.546,364,1.828,365,2.496,376,2.549,402,3.589,433,2.494,449,1.663,457,1.576,592,3.478,593,2.549,600,1.82,1103,2.563,1107,1.82,1109,2.246,1111,3.145,1114,3.704,1115,3.704,1116,3.478,1120,2.814,1148,3.145,1175,3.145,1207,4.185,1208,3.63,1221,1.82,1223,2.009,1224,2.246,1227,3.589,1246,2.246,1357,4.488,1370,3.589,1447,3.589,1452,5.027,1453,5.027,1454,2.563,1455,4.263,1456,4.263,1457,4.263,1458,4.263,1459,4.919,1460,5.33,1461,4.263,1462,4.263,1463,3.044,1464,4.263,1465,3.044,1466,4.263,1467,3.044,1468,4.263,1469,4.263,1470,3.044,1471,3.044,1472,3.044,1473,3.044,1474,3.044,1475,3.044,1476,3.044]],["title/injectables/ShoppingCartService.html",[249,1.233,355,1.994]],["body/injectables/ShoppingCartService.html",[3,0.258,4,0.227,8,0.227,12,0.461,15,0.804,17,0.469,26,0.43,37,0.231,38,0.28,40,0.667,42,0.988,45,0.851,47,0.667,49,1.25,51,0.819,52,0.029,53,0.614,54,0.332,55,0.819,57,1.669,59,1.161,62,0.995,63,1.759,64,2.065,65,0.875,68,0.552,69,0.51,70,0.708,71,0.393,72,0.323,85,0.258,86,0.43,87,0.954,137,0.017,138,0.017,142,1.637,148,2.415,152,1.932,154,3.286,157,2.47,162,1.328,163,1.317,181,1.372,207,1.453,211,1.587,230,2.616,239,1.521,249,1.521,251,1.581,253,2.847,260,2.394,261,2.715,270,3.845,271,2.116,275,2.46,276,1.73,277,1.521,278,2.053,279,1.453,280,1.904,281,2.715,284,3.97,298,1.73,299,1.581,301,1.793,302,2.715,304,1.91,305,2.135,306,1.151,315,1.521,338,3.463,355,2.46,360,2.606,363,2.247,364,2.235,365,2.593,366,1.73,369,3.634,372,1.91,379,3.035,399,3.463,421,1.241,427,1.73,433,2.78,448,2.436,449,1.581,451,2.135,452,1.91,457,1.07,473,3.035,488,1.637,489,2.616,507,2.955,515,2.135,546,3.117,600,2.46,625,2.46,1075,2.135,1080,3.035,1221,3.421,1259,4.817,1260,3.463,1378,3.463,1477,4.955,1478,2.436,1479,4.113,1480,4.786,1481,4.113,1482,4.113,1483,4.113,1484,2.893,1485,4.113,1486,4.113,1487,4.113,1488,4.113,1489,5.506,1490,2.893,1491,4.113,1492,2.893,1493,5.212,1494,4.113,1495,2.893,1496,4.113,1497,4.113,1498,2.893,1499,4.786,1500,3.463,1501,4.113,1502,2.893,1503,4.113,1504,2.893,1505,2.893,1506,2.893,1507,2.893,1508,2.893,1509,4.113,1510,2.893,1511,4.113,1512,2.893,1513,2.893,1514,2.893,1515,4.786,1516,4.113,1517,2.893,1518,4.786,1519,2.893,1520,4.113,1521,2.893,1522,2.893,1523,2.893,1524,2.893,1525,4.113,1526,4.113,1527,4.113,1528,2.893,1529,2.893,1530,2.893,1531,2.893,1532,2.893,1533,2.893]],["title/interfaces/User.html",[72,0.372,139,1.233]],["body/interfaces/User.html",[3,0.379,4,0.333,8,0.333,12,0.333,15,0.717,17,0.395,37,0.206,38,0.362,52,0.029,54,0.381,59,1.186,61,3.514,62,1.291,63,1.883,67,2.043,72,0.594,85,0.379,123,1.073,137,0.022,138,0.022,139,1.573,140,2.325,142,2.312,143,3.139,145,2.544,149,2.544,151,2.423,152,1.732,157,2.119,158,1.815,162,1.774,163,1.705,225,2.673,232,2.284,277,2.149,282,3.514,397,3.327,398,2.673,416,3.641,417,3.327,420,3.184,422,3.928,423,3.928,424,3.641,1444,4.483,1534,3.582,1535,4.255,1536,5.127,1537,5.127,1538,5.324,1539,5.324,1540,4.483,1541,5.324,1542,5.324,1543,5.324]],["title/components/UserManagementComponent.html",[0,0.013,28,0.637]],["body/components/UserManagementComponent.html",[0,0.02,1,0.577,2,0.875,3,0.269,4,0.237,5,0.673,6,0.673,7,0.673,8,0.237,11,1.993,12,0.384,13,0.944,17,0.464,20,0.673,21,1.483,22,1.483,23,0.673,24,1.091,25,0.944,26,0.63,27,0.944,28,1.014,29,0.577,30,0.577,31,0.577,32,1.264,33,0.944,34,3.128,35,0.944,36,3.128,37,0.146,38,0.288,40,0.687,41,1.371,42,1.011,43,1.202,44,1.327,45,0.919,47,0.941,48,1.458,49,1.017,50,1.583,51,0.449,52,0.029,53,0.546,54,0.284,55,0.449,56,2.543,57,0.967,63,1.773,65,0.63,66,1.011,68,0.577,69,0.532,70,0.788,71,0.41,72,0.713,73,4.621,75,0.63,77,1.011,80,0.875,83,0.724,84,0.9,85,0.269,86,0.449,87,0.49,97,3.176,98,0.673,99,0.944,100,0.944,101,0.673,102,1.096,103,0.673,104,0.944,105,0.577,106,0.673,107,0.577,108,0.673,109,0.577,110,0.944,111,0.577,112,0.41,113,0.944,114,0.673,115,0.577,116,0.673,117,0.577,118,0.673,119,0.577,120,0.577,121,0.673,122,0.577,123,0.747,124,0.673,125,0.577,126,0.673,127,0.577,128,0.673,129,0.577,130,0.673,131,0.673,132,0.577,133,0.623,134,0.673,135,0.673,136,0.673,137,0.017,138,0.017,146,2.278,148,1.964,158,1.729,168,2.817,172,2.27,173,3.614,177,2.667,178,2.128,181,1.017,183,1.583,188,2.128,189,2.461,198,1.295,199,1.516,200,2.228,201,2.228,202,1.993,203,1.295,204,2.929,206,1.806,207,1.516,209,1.827,210,2.459,211,1.474,221,2.488,222,2.912,224,3.176,225,2.667,226,3.176,227,3.506,238,1.818,276,1.806,397,2.676,416,3.176,417,3.421,420,3.176,421,2.278,424,3.176,512,1.687,546,2.929,602,4.884,753,3.919,1142,1.516,1158,2.228,1170,2.535,1216,3.506,1302,2.228,1306,2.228,1345,3.919,1346,3.919,1347,3.919,1407,2.543,1409,2.543,1416,3.569,1417,3.569,1441,3.569,1544,5.273,1545,4.899,1546,4.899,1547,4.239,1548,3.02,1549,3.02,1550,3.02,1551,3.02,1552,3.02,1553,3.02,1554,3.02,1555,3.02,1556,3.02,1557,3.02,1558,3.02,1559,3.02,1560,3.02,1561,3.02,1562,3.02,1563,3.02,1564,3.02,1565,3.02,1566,3.02,1567,5.312,1568,3.02]],["title/injectables/UserService.html",[249,1.233,354,1.674]],["body/injectables/UserService.html",[3,0.176,4,0.155,8,0.155,12,0.442,15,0.798,17,0.458,19,1.847,26,0.771,37,0.149,38,0.21,40,0.501,45,0.869,47,0.87,49,0.741,51,0.798,52,0.029,53,0.598,54,0.327,55,0.798,57,0.632,59,1.195,61,2.039,62,0.947,63,1.799,65,0.93,66,0.407,67,2.006,68,0.59,69,0.544,70,0.585,71,0.268,72,0.715,85,0.176,86,0.293,87,0.972,123,1.102,137,0.013,138,0.013,142,2.135,144,0.959,146,1.847,148,1.995,149,2.575,151,2.245,158,1.682,162,1.488,163,2.014,170,2.279,209,1.309,211,1.746,219,3.626,221,1.325,239,1.984,249,1.142,251,1.078,253,3.192,260,2.504,261,3.273,263,2.601,264,2.575,270,3.178,271,2.217,275,1.847,277,1.834,278,1.847,279,1.551,280,2.325,281,2.843,284,3.273,290,2.279,296,1.984,298,1.18,299,1.078,301,1.978,302,2.039,304,1.302,305,2.809,306,0.785,315,1.408,354,1.551,375,2.601,393,1.325,397,3.141,398,3.01,416,3.298,417,3.518,420,1.847,421,1.325,422,2.279,423,2.279,424,3.298,441,3.541,445,1.661,457,1.834,515,3.178,517,3.626,546,3.099,583,1.847,588,3.541,620,3.273,625,1.847,626,2.601,895,3.878,1080,1.456,1105,4.175,1203,2.843,1293,4.55,1294,3.374,1348,2.279,1390,3.205,1396,2.601,1436,4.175,1437,3.659,1500,2.601,1536,3.626,1537,3.626,1540,2.601,1569,1.661,1570,3.089,1571,3.806,1572,3.806,1573,3.089,1574,3.089,1575,3.089,1576,3.089,1577,4.307,1578,3.089,1579,4.307,1580,3.089,1581,3.089,1582,3.089,1583,3.089,1584,1.973,1585,3.089,1586,1.973,1587,3.089,1588,3.089,1589,1.973,1590,1.973,1591,3.089,1592,3.089,1593,1.973,1594,4.307,1595,3.089,1596,4.959,1597,3.089,1598,4.307,1599,3.089,1600,3.089,1601,3.089,1602,3.089,1603,1.973,1604,3.089,1605,3.089,1606,1.973,1607,3.089,1608,3.089,1609,1.973,1610,3.089,1611,3.089,1612,3.089,1613,1.973,1614,3.089,1615,3.089,1616,3.089,1617,3.089,1618,1.973,1619,3.089,1620,1.973,1621,3.089,1622,3.089,1623,3.806,1624,2.601,1625,3.089,1626,3.089,1627,3.089,1628,4.307,1629,3.089,1630,3.089,1631,1.973,1632,1.973,1633,3.089,1634,1.973,1635,1.973,1636,1.661,1637,1.661,1638,1.973,1639,3.806,1640,1.973,1641,1.973,1642,1.973,1643,1.973,1644,1.973,1645,1.973,1646,1.973,1647,1.973,1648,1.973,1649,1.973,1650,1.973,1651,1.973,1652,4.307,1653,3.089,1654,1.973,1655,1.973,1656,1.973,1657,1.973,1658,3.089,1659,1.973,1660,1.973,1661,1.973,1662,3.089,1663,1.973,1664,1.973,1665,3.806,1666,1.973,1667,1.973,1668,1.973,1669,1.973,1670,1.973,1671,1.973,1672,3.089,1673,3.089,1674,3.089,1675,4.307,1676,3.089,1677,3.089,1678,3.089,1679,4.307,1680,3.089,1681,3.089,1682,3.089,1683,4.307,1684,3.089,1685,3.089,1686,1.973,1687,1.973,1688,1.973]],["title/coverage.html",[1689,3.822]],["body/coverage.html",[0,0.027,1,0.772,8,0.317,9,3.403,10,3.403,11,3.746,28,0.772,29,0.772,30,0.772,31,0.772,44,0.9,52,0.029,54,0.235,72,0.451,73,2.982,75,0.601,76,2.982,78,2.982,81,2.982,105,0.772,107,0.772,109,0.772,111,0.772,112,0.549,115,0.772,117,0.772,119,0.772,120,0.772,122,0.772,125,0.772,127,0.772,129,0.772,132,0.772,137,0.021,138,0.021,139,2.283,141,3.403,165,3.803,166,2.982,167,3.403,204,2.417,205,2.668,209,1.39,238,2.211,249,2.283,250,2.668,252,3.403,318,3.403,328,3.403,354,2.029,355,2.417,433,1.733,485,3.803,486,3.403,487,3.803,507,2.029,599,3.403,611,3.403,945,5.314,998,3.403,1084,3.403,1117,3.403,1118,3.403,1119,3.803,1149,3.403,1173,3.403,1204,3.746,1205,2.668,1229,3.403,1230,3.403,1290,3.803,1291,3.403,1292,3.403,1294,2.417,1313,3.403,1314,3.403,1330,2.668,1331,2.668,1355,3.403,1389,3.403,1393,3.403,1394,3.403,1395,3.403,1442,3.403,1443,3.403,1452,3.403,1453,3.403,1454,3.403,1477,3.403,1478,3.403,1534,3.403,1544,3.403,1569,3.403,1689,3.403,1690,4.042,1691,4.042,1692,4.042,1693,6.955,1694,5.976,1695,6.415,1696,3.403,1697,3.403,1698,3.403,1699,3.403,1700,3.403,1701,6.415,1702,5.976,1703,4.042,1704,5.154,1705,4.042,1706,4.042,1707,5.032,1708,5.976,1709,4.042,1710,4.042]],["title/dependencies.html",[1711,2.059,1712,3.374]],["body/dependencies.html",[52,0.028,71,0.694,83,1.226,137,0.024,138,0.024,203,2.191,326,1.523,446,4.301,1636,4.301,1637,4.301,1712,4.301,1713,5.109,1714,6.779,1715,5.109,1716,5.946,1717,5.946,1718,5.109,1719,5.109,1720,5.109,1721,5.109,1722,5.109,1723,5.109,1724,5.109,1725,5.109,1726,5.109]],["title/miscellaneous/enumerations.html",[1727,1.524,1728,3.374]],["body/miscellaneous/enumerations.html",[37,0.252,52,0.028,69,1.168,137,0.025,138,0.025,427,3.597,1308,5.064,1727,2.847,1728,4.388,1729,5.212,1730,6.015,1731,5.212,1732,6.015,1733,6.015,1734,6.015,1735,6.015]],["title/miscellaneous/functions.html",[1727,1.524,1736,3.374]],["body/miscellaneous/functions.html",[12,0.369,15,0.778,17,0.32,37,0.228,47,0.764,51,0.7,52,0.027,53,0.525,54,0.273,55,0.7,59,1.049,65,0.938,67,1.88,137,0.023,138,0.023,159,2.817,162,1.75,198,2.705,202,4.163,204,3.635,205,4.012,224,3.389,227,3.11,232,2.02,260,2.51,271,2.096,296,2.332,363,3.096,398,3.052,421,2.02,620,4.163,1170,2.817,1330,4.012,1331,3.741,1405,4.771,1707,3.966,1727,2.574,1736,3.966,1737,6.307,1738,5.667,1739,4.711,1740,4.711,1741,4.711,1742,4.711,1743,4.711,1744,4.711,1745,4.711,1746,4.711,1747,4.711,1748,4.711,1749,4.711,1750,4.711,1751,5.667,1752,4.711,1753,4.711,1754,4.711,1755,4.711,1756,4.711,1757,4.711,1758,4.711,1759,4.711]],["title/index.html",[37,0.135,1760,2.79,1761,2.79]],["body/index.html",[0,0.024,4,0.372,52,0.023,53,0.529,137,0.023,138,0.023,209,1.632,286,3.995,323,3.995,717,3.995,759,3.995,802,5.528,1624,3.995,1711,3.501,1762,5.692,1763,4.745,1764,6.098,1765,6.098,1766,3.995,1767,4.745,1768,4.745,1769,5.692,1770,6.466,1771,6.638,1772,4.745,1773,4.745,1774,4.745,1775,4.745,1776,4.745,1777,4.745,1778,4.745,1779,4.745,1780,4.745,1781,4.745,1782,4.745,1783,6.098,1784,6.098,1785,4.745,1786,6.323,1787,4.745,1788,4.745,1789,4.745,1790,4.745,1791,5.692,1792,5.692,1793,6.323,1794,4.745,1795,5.692,1796,5.692,1797,4.745,1798,4.745,1799,4.745,1800,4.745,1801,5.692,1802,4.745,1803,4.745,1804,4.745,1805,4.745,1806,6.098,1807,4.745,1808,4.745,1809,4.745,1810,3.501,1811,4.745,1812,4.745]],["title/modules.html",[1813,3.822]],["body/modules.html",[52,0.025,137,0.025,138,0.025,1813,4.56]],["title/overview.html",[1810,3.35]],["body/overview.html",[2,1.109,52,0.025,97,3.66,137,0.025,138,0.025,140,2.934,251,2.934,787,4.522,1810,3.963]],["title/properties.html",[38,0.273,1711,2.059]],["body/properties.html",[38,0.367,52,0.026,137,0.025,138,0.025,1766,4.541,1814,5.394]],["title/miscellaneous/variables.html",[1157,2.957,1727,1.524]],["body/miscellaneous/variables.html",[15,0.609,17,0.396,26,0.866,37,0.239,44,1.099,52,0.028,54,0.338,57,1.579,59,1.099,63,1.369,68,1.112,69,1.026,137,0.024,138,0.024,163,1.579,184,4.153,211,1.616,280,1.963,301,2.004,315,1.824,353,1.697,600,2.95,620,3.256,1128,3.64,1150,4.153,1157,3.64,1437,3.64,1696,4.153,1697,5.219,1698,4.153,1699,4.904,1700,4.904,1727,2.695,1815,4.933,1816,4.933,1817,4.933,1818,4.933,1819,4.933,1820,4.933,1821,4.933,1822,5.825,1823,4.933,1824,4.933,1825,4.933,1826,4.933,1827,4.933]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":306,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["0.0.0",{"_index":1814,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["0665",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0d24",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["100960c55891.jpg?1650599698",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":287,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13/13",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["139",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["18.0.0",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1767,"title":{},"body":{"index.html":{}}}],["19",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1f9c",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":290,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["20",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["23d3",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3213",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3835",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{},"components/PaymentComponent.html":{}}}],["4.2.0",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1382,"title":{},"body":{"components/PaymentComponent.html":{}}}],["4138",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4350",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a64",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d25",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d71",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4df2",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["67",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7e73",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["8c01",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8cbf",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f2b",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9475",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9798",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["99e9",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9eb7",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a23f",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a70e",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":200,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":512,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1542,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["acion",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/PaymentComponent.html":{}}}],["aclcular",{"_index":1272,"title":{},"body":{"components/OrderListComponent.html":{}}}],["activatedroute",{"_index":1126,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["activo",{"_index":1243,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/PasswordResetComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1500,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":546,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["additem",{"_index":1124,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1129,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1488,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":314,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":248,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":245,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":246,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":247,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":317,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1445,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":244,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":250,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1105,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":218,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1143,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":230,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":605,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aleatorio",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["alert('dirección",{"_index":217,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1435,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1568,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1249,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1475,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1106,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1142,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1438,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(message",{"_index":1336,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["alert(this.submittext",{"_index":586,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacenar",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1764,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":203,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["antes",{"_index":1373,"title":{},"body":{"components/PaymentComponent.html":{}}}],["apellido",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1776,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1201,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1787,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["attach",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1777,"title":{},"body":{"index.html":{}}}],["av",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b45f",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["base",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["beast",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfe9",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bolleano",{"_index":1215,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["boolean",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1786,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1460,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1404,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1264,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1268,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1288,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1208,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1218,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1228,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1289,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcula",{"_index":1466,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calcular",{"_index":1220,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["cambiar",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1405,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1440,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":593,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":1804,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1347,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1111,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1113,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1075,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1115,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1114,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1112,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1528,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1529,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":494,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1520,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":1145,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1073,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1070,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.id",{"_index":1079,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1451,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1147,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1146,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":507,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1088,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":1226,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":496,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":500,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":506,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":504,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1448,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1259,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1148,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["carros",{"_index":1479,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1456,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1458,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1457,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1454,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:24",{"_index":1467,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:28",{"_index":1470,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:32",{"_index":1461,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:48",{"_index":1465,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:65",{"_index":1463,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1443,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1478,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:115",{"_index":1495,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1485,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":1492,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:51",{"_index":1498,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:67",{"_index":1490,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1453,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":488,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["cartitem.service",{"_index":1502,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":489,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1133,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":609,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cerrado",{"_index":1194,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1202,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1779,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1808,"title":{},"body":{"index.html":{}}}],["checkear",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["checkemail",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["checkemail(email",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["checkrecovery",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["checkrecovery(token",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["checkstock",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1800,"title":{},"body":{"index.html":{}}}],["choose",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["clave",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":1765,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["code",{"_index":1781,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":590,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1354,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["color",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1801,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["completo",{"_index":1136,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1221,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1447,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1439,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":591,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":501,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1231,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1241,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1320,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["console.log(user.id",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":301,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1484,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":207,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1125,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1266,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":1321,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contega",{"_index":1742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":226,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contenido",{"_index":1455,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["contiene",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["contrario",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasena/'+token",{"_index":1312,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["contrasenas",{"_index":1753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1353,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["control",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["contructor",{"_index":509,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{}}}],["copy",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1245,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":241,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":541,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1223,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1554,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":542,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":1281,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1304,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["core/validators/validators",{"_index":206,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["correlativo",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":164,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":607,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1689,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["creacion",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["creado",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":240,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:27",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:38",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:58",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:62",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:66",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:70",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:77",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":601,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createorupdatecarditem(card",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createrecovery",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["createrecovery(email",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["createrecovery(email:string",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["createshoppingcar",{"_index":1481,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1491,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1450,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1200,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crypto",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["cryptojs.lib.wordarray.random(16",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1116,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentdate",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdate.gettime",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["currentshoppingcart",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currenttimestamp",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser",{"_index":1545,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["damage",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["date",{"_index":1390,"title":{},"body":{"interfaces/Recovery.html":{},"injectables/UserService.html":{}}}],["datos",{"_index":1567,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["dcon",{"_index":1462,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1216,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1444,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":1449,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1403,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1236,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["dependencies",{"_index":1712,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":490,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1244,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":493,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":492,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":487,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":520,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:109",{"_index":522,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:113",{"_index":524,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":526,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:121",{"_index":528,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:125",{"_index":530,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:129",{"_index":532,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:133",{"_index":534,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:137",{"_index":536,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":538,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:145",{"_index":540,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:152",{"_index":511,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1212,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1214,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":513,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1211,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":516,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":508,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1219,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":510,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":486,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1205,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1094,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["dev",{"_index":1773,"title":{},"body":{"index.html":{}}}],["development",{"_index":1768,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["differenceinhours",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["differenceinmillis",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["direccion",{"_index":156,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":220,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1785,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1790,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1543,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1789,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["donde",{"_index":1365,"title":{},"body":{"components/PaymentComponent.html":{}}}],["double",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":1798,"title":{},"body":{"index.html":{}}}],["each",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":602,"title":{},"body":{"interfaces/CardItem.html":{},"components/UserManagementComponent.html":{}}}],["editar",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":296,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1199,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["encontrar",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1540,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entrada",{"_index":1213,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{}}}],["entre",{"_index":1346,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1728,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1308,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["equal",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":588,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"injectables/UserService.html":{}}}],["es",{"_index":221,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1493,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["espera",{"_index":1368,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esta",{"_index":1108,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1795,"title":{},"body":{"index.html":{}}}],["exile",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1242,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["existentes",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1433,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["expirado",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fabled",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":315,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fecha",{"_index":1391,"title":{},"body":{"interfaces/Recovery.html":{}}}],["field1",{"_index":1757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1780,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["finalizacion",{"_index":1375,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1254,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["findrecovery",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["findrecovery(token",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser.id",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["finish",{"_index":1232,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1234,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1233,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1230,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1235,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1237,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1229,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1240,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1397,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1399,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1398,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1395,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1413,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1414,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1406,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1401,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1402,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1408,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1410,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1411,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1412,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1394,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formaulario",{"_index":1324,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["formcontrol",{"_index":198,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1560,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1558,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1559,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["four",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":291,"title":{},"body":{"injectables/AddressService.html":{}}}],["fromulario",{"_index":514,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["fucion",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1487,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1708,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1736,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1805,"title":{},"body":{"index.html":{}}}],["gain",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generado",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["generar",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["generate",{"_index":1783,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1763,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["generic",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1482,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1494,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardname",{"_index":519,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":527,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":539,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":535,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":529,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1328,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1302,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1407,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":533,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1409,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":537,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":531,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":521,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getregion",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":523,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":525,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getting",{"_index":1760,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1807,"title":{},"body":{"index.html":{}}}],["god",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1089,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["habilidad",{"_index":603,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1541,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1255,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1566,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1459,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1518,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["heliod",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1806,"title":{},"body":{"index.html":{}}}],["henge",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1197,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1775,"title":{},"body":{"index.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["human",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1074,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(cardindex",{"_index":1524,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1225,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":1068,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(differenceinhours",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["if(finduser",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["if(hasstock",{"_index":1527,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1080,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(message",{"_index":1335,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["if(recovery.userid",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["if(result",{"_index":585,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["if(search",{"_index":1071,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1521,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1377,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(this.authservice.getuser().id",{"_index":1103,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1565,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.checkemail(email",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1471,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1247,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1251,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":544,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.userservie.checkemail(this.email?.value",{"_index":1309,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["if(user.id",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["iko",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":503,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":594,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["imagenes",{"_index":1217,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["implements",{"_index":1803,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":237,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1538,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":1754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":1741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1107,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["inicio",{"_index":1239,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":249,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1222,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1209,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["intento",{"_index":1392,"title":{},"body":{"interfaces/Recovery.html":{}}}],["intentos",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":139,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1536,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1361,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1261,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":515,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["items",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"components/ShoppingCartComponent.html":{}}}],["jegantha",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["js",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["juego",{"_index":604,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":608,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1797,"title":{},"body":{"index.html":{}}}],["khm",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":232,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":227,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1121,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1123,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1122,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1119,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1127,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:27",{"_index":1279,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:31",{"_index":1280,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:35",{"_index":1267,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:46",{"_index":1131,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:50",{"_index":1273,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:60",{"_index":1277,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:63",{"_index":1130,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:70",{"_index":1271,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:85",{"_index":1269,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1118,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":239,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":231,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/OrderListComponent.html":{}}}],["lo",{"_index":1348,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1386,"title":{},"body":{"components/PaymentComponent.html":{}}}],["localtoken",{"_index":1318,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["logeduser",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["loguear",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":596,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1085,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1087,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1086,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1084,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:25",{"_index":1091,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:42",{"_index":1095,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:50",{"_index":1097,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:58",{"_index":1092,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:24",{"_index":235,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1549,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1547,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:35",{"_index":236,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts:65",{"_index":1550,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:69",{"_index":1551,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:73",{"_index":1552,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:77",{"_index":1553,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:84",{"_index":1548,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":505,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/PasswordResetComponent.html":{}}}],["manejo",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["many",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":1196,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.abs(currenttimestamp",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["math.max(maxid",{"_index":304,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1350,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1501,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1349,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["mensaje",{"_index":517,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/UserService.html":{}}}],["merfolk",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["message",{"_index":1333,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":288,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1351,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1727,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":1756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":297,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["models/recovery.model",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["models/shopping",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{}}}],["modules",{"_index":1813,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["mostrar",{"_index":1120,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["much",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1774,"title":{},"body":{"index.html":{}}}],["need",{"_index":1802,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":294,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":209,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":300,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":312,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":307,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":309,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":310,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":311,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":308,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":302,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1503,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1505,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1507,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1506,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1771,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":219,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":161,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":159,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":228,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":229,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1134,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{}}}],["obetener",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["objeto",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":222,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["obteener",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["ocurrido",{"_index":1250,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":1739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":204,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":205,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1253,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1258,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1286,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1287,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1262,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1256,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1809,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1810,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1711,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1812,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1357,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parametros",{"_index":1132,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["params.get('categoria",{"_index":1138,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('recovery",{"_index":1332,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["params.get('search",{"_index":1139,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["pasarela",{"_index":1464,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["passage",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordrecoverycomponent",{"_index":122,"title":{"components/PasswordRecoveryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordresetcomponent",{"_index":125,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordvalidator",{"_index":1330,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1358,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1360,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1359,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":127,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1446,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1198,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1799,"title":{},"body":{"index.html":{}}}],["play",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1388,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":592,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":502,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":1385,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proceso",{"_index":1356,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1762,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":298,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":225,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":497,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":162,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["randombytes",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["randombytes.tostring(cryptojs.enc.hex",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1384,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1496,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1376,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1260,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["recoverpassform",{"_index":1297,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery",{"_index":1294,"title":{"interfaces/Recovery.html":{}},"body":{"components/PasswordRecoveryComponent.html":{},"interfaces/Recovery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["recovery'},{'name",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["recovery.component.css",{"_index":1296,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.html",{"_index":1295,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts",{"_index":1292,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recovery.component.ts:26",{"_index":1299,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:38",{"_index":1300,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:47",{"_index":1303,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:54",{"_index":1301,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.date",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.date.gettime",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.token",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery.userid",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["recovery/password",{"_index":1291,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recoverytimestamp",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["recuperacion",{"_index":1293,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"interfaces/Recovery.html":{},"injectables/UserService.html":{}}}],["recuperar",{"_index":1203,"title":{},"body":{"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/UserService.html":{}}}],["redireccionar",{"_index":1093,"title":{},"body":{"components/CardManageComponent.html":{}}}],["redirecciones",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["redirect",{"_index":1362,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"components/ShoppingCartComponent.html":{}}}],["redirigiendo",{"_index":1387,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigir",{"_index":1374,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1811,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1486,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":1740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":233,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1432,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1400,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":129,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1396,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["región",{"_index":223,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1778,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":1758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":295,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1539,"title":{},"body":{"interfaces/User.html":{}}}],["reset",{"_index":1315,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["reset.component.css",{"_index":1317,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.html",{"_index":1316,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":1314,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:27",{"_index":1326,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:31",{"_index":1322,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:49",{"_index":1323,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:77",{"_index":1327,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:81",{"_index":1329,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:88",{"_index":1325,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":1313,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["respectivos",{"_index":1275,"title":{},"body":{"components/OrderListComponent.html":{}}}],["rest",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":583,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["result.filter(carditem",{"_index":1072,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":518,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{}}}],["results",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":211,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1537,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":299,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1128,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":491,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{}}}],["routeroutlet",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1770,"title":{},"body":{"index.html":{}}}],["running",{"_index":1791,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1331,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1341,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":289,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1782,"title":{},"body":{"index.html":{}}}],["scute",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":163,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":1755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["segundos",{"_index":1369,"title":{},"body":{"components/PaymentComponent.html":{}}}],["seleccionada",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["seleccionado",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["seleccionar",{"_index":1098,"title":{},"body":{"components/CardManageComponent.html":{}}}],["selecionada",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selecionado",{"_index":1206,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["selected",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1516,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1525,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1263,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1515,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1531,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1523,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1522,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1530,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1526,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1265,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1276,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1772,"title":{},"body":{"index.html":{}}}],["server",{"_index":1769,"title":{},"body":{"index.html":{}}}],["service",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["sesión",{"_index":1195,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":589,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":498,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setea",{"_index":1278,"title":{},"body":{"components/OrderListComponent.html":{}}}],["setear",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":499,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1090,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1096,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1379,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1533,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":433,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1513,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":1378,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1514,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":132,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1489,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1480,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":355,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1210,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":610,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulacion",{"_index":1372,"title":{},"body":{"components/PaymentComponent.html":{}}}],["simular",{"_index":1370,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sistema",{"_index":1535,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":600,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":224,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":1737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":485,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1117,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":599,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/recovery.model.ts",{"_index":1389,"title":{},"body":{"interfaces/Recovery.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1442,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1534,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":293,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:107",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:124",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:134",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:143",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:156",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:167",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:178",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:186",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:194",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:202",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:210",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1066,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1477,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:106",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:118",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:127",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:136",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:157",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:167",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:176",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:202",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:45",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:61",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:95",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1707,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1204,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/password",{"_index":1290,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1355,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1363,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1364,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:59",{"_index":1371,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1393,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1452,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1544,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1761,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1788,"title":{},"body":{"index.html":{}}}],["strike",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["submittext",{"_index":495,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subtotal",{"_index":1227,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1144,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sumar",{"_index":1270,"title":{},"body":{"components/OrderListComponent.html":{}}}],["sun",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sus",{"_index":1274,"title":{},"body":{"components/OrderListComponent.html":{}}}],["suscribible",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1185,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1352,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["t",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tempo",{"_index":1367,"title":{},"body":{"components/PaymentComponent.html":{}}}],["tener",{"_index":1345,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":1738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":1794,"title":{},"body":{"index.html":{}}}],["testing",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1793,"title":{},"body":{"index.html":{}}}],["texto",{"_index":597,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":208,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":215,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":212,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":213,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":214,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":316,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":313,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":303,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":1141,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":216,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1246,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":242,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":543,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1556,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1104,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.registrationform.get('username')?.value,this.registrationform.get('password')?.value",{"_index":1434,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1193,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1101,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1252,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":547,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":582,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":580,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":579,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":581,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":578,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1067,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1069,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1082,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1078,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1077,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1076,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1081,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.createorupdatecarditem(this.selectedcard",{"_index":584,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1517,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":1140,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":1100,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["this.cardlist",{"_index":1099,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.createshoppingcar(userid",{"_index":1519,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1224,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1472,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1248,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1555,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1561,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":1190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.findrecovery(token",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generaterandomtoken",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getcard(cardid).quantity",{"_index":1083,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.gotodetail",{"_index":1102,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1473,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":1189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1380,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1282,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.localtoken",{"_index":1337,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.logeduser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":1283,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.recoverpassform",{"_index":1305,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.recoverpassform.get('email",{"_index":1307,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.redirect",{"_index":1381,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1415,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1424,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1422,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1431,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1419,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1428,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1420,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1429,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1423,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1430,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1421,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1427,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1425,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1137,"title":{},"body":{"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.router.navigate",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/actualizar",{"_index":1311,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1192,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1110,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1109,"title":{},"body":{"components/CardManageComponent.html":{},"components/PasswordResetComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1383,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1476,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":548,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":552,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":558,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":556,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":553,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":555,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":557,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":554,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":549,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":550,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":551,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1285,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1532,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1509,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1508,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1504,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1511,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":1284,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.submittext",{"_index":545,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1474,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1557,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1564,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1562,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1563,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updatepasswordform",{"_index":1338,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updatepasswordform.get('confirmpassword",{"_index":1343,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updatepasswordform.get('password",{"_index":1342,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.updateuser(user",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["this.useraddress.asobservable",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":243,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrecoverytry.find(recovery",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrecoverytry.push(recovery",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.userservice.checkrecovery(token",{"_index":1334,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.userservice.createuser",{"_index":1426,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updatepassword(this.localtoken,this.password?.value",{"_index":1344,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservie.createrecovery(this.email?.value",{"_index":1310,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["those",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["tine",{"_index":1469,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["tipo",{"_index":595,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["titan",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{},"injectables/UserService.html":{}}}],["token.\\n",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1207,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trae",{"_index":1135,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["trample",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1512,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1792,"title":{},"body":{"index.html":{}}}],["unless",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1499,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1510,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1546,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updatepassword",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepassword(token",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepasswordform",{"_index":1319,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["updateshoppingcart",{"_index":1483,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1497,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":606,"title":{},"body":{"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{}}}],["uro",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1784,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":305,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":234,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrecoverytry",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":354,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservie",{"_index":1298,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["uso",{"_index":1437,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"interfaces/Recovery.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/PasswordResetComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/PasswordRecoveryComponent.html":{}}}],["vacio",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1238,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Recovery.html":{}}}],["validaciones",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":201,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":202,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":199,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1306,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1340,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1418,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1417,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1416,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1339,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":210,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validez",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["valki",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":160,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["valores",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"interfaces/Recovery.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":292,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":238,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordResetComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1157,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["varieble",{"_index":1468,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vehicle",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1257,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["verifica",{"_index":1366,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":1766,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1796,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":598,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1441,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wrath",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":587,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"components/PasswordResetComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1436,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de creacion de direccion de entrega del cliente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Acion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de direccion\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente de formulario de creacion de direccion de entrega del cliente\n */\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  /**\n   * Formulario de direccion\n   */\n  addressForm!: FormGroup;\n\n  /**\n   * Constructor con dependencia a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n   */\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  /**\n   * Acion submit de formulario\n   */\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Titulo de aplicacion\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * @description\n * Componente principal de la aplicacion\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /**\n   * Titulo de aplicacion\n   */\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de usuario\n\n                                                        \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de direcciones\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:178\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:210\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n        this.loggedIn.next(false);\n        return false;\n    }\n\n    this.setUserIdToShoppingCart();\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para editar cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                            \n                        \n\n                \n                    \n                            Contructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de cartas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Iniciacion de Formulario de editar cartas\nIniciacion de valores de carta selecionada\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario para editar cartas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:29\n                        \n                    \n\n            \n                \n                    Fromulario para editar carta del catalogo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                        \n                    \n\n            \n                \n                    Variable para item de carta selecionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n            \n                \n                    Variable para mensaje de resultado de submit\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:113\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:125\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:141\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:145\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardItemService } from '../core/services/cartitem.service';\n\n/**\n * @description\n * Componente para formulario para editar cartas del catalogo\n */\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n  /**\n   * Fromulario para editar carta del catalogo\n   */\n  cardForm!: FormGroup;\n  /**\n   * Variable para mensaje de resultado de submit\n   */\n  submitText: string = '';\n  /**\n   * Variable para item de carta selecionada\n   */\n  selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Contructor con dependencias a la capa service\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de manejo de cartas\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService,\n  ){}\n\n  /**\n   * Iniciacion de Formulario de editar cartas\n   * Iniciacion de valores de carta selecionada\n   */\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  /**\n   * Accion de submit de formulario para editar cartas\n   */\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    const result = this.cardItemService.createOrUpdateCardItem(this.selectedCard);\n    if(result){\n      alert(this.submitText + ' con éxito');\n    }else{\n      alert(this.submitText + ' con error');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de administracion de cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Funcion para redireccionar a pantalla de detalle de carta\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Iniciacion de listado de cartas del catalogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Accion para seleccionar carta en la pantalla\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas del catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente de pantalla de administracion de cartas del catalogo\n */\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n  /**\n   * Listado de cartas del catalogo\n   */\n  cardList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a la capa service\n   * @param authService \n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de cartas del catalogo\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService\n  ){}\n\n  /**\n   * Iniciacion de listado de cartas del catalogo\n   */\n  ngOnInit(): void {\n    this.cardList = this.cardItemService.getCardsList();\n  }\n\n  /**\n   * Accion para seleccionar carta en la pantalla\n   * @param card \n   */\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  /**\n   * Funcion para redireccionar a pantalla de detalle de carta\n   */\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar catalogo de cartas.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de catalogo de cartas\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Accion para agregar una carta seleccionada a al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSe obtiene parametros de url:\n -categoria = tipo de carta\n -search = nombre de carta\nSe obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas a mostrar en el catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente para mostrar catalogo de cartas.\n */\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n  /**\n   * Listado de cartas a mostrar en el catalogo\n   */\n  carditemList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param route Manejo de redirecciones\n   * @param cardItemService Manejo de catalogo de cartas\n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  /**\n   * Iniciacion de componente.\n   * Se obtiene parametros de url:\n   *  -categoria = tipo de carta\n   *  -search = nombre de carta\n   * Se obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  /**\n   * Accion para agregar una carta seleccionada a al carrito de compras\n   * @param cardId Identificador de carta\n   * @param cardName Nombre de carta\n   */\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de ingreso a la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:59\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * @description\n * Componente de formulario de ingreso a la aplicacion\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                    Recuperar Contraseña\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                    Recuperar Contraseña                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar detalle de un carrito de compras selecionado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con iniciacion de objeto de carrito de compras\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:23\n                            \n                        \n                \n                    \n                        Valor de entrada del carrito selecionado\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:27\n                            \n                        \n                \n                    \n                        Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion para calcular precio total de la compra\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Precio total del carrito de compras\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Precio total de compra del carro\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n/**\n * @description\n * Componente para mostrar detalle de un carrito de compras selecionado\n */\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  /**\n   * Valor de entrada del carrito selecionado\n   */\n  @Input() currentShoppingCart: ShoppingCart;\n  /**\n   * Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n   */\n  @Input() showImage: boolean = false;\n  /**\n   * Precio total de compra del carro\n   */\n  total: number = 0;\n\n  /**\n   * Constructor con iniciacion de objeto de carrito de compras\n   */\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  /**\n   * Funcion para calcular precio total de la compra\n   * @param cardList Listado de cartas del carrito selecionado\n   * @returns Precio total del carrito de compras\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar los carritos de compra realizados por el usuario logueado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de carrito de compras\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Funcion para sumar el total de cartas de un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas de un carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                total de cartas del carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Funcion para aclcular el total de la compra del carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Valor total de la compra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Accion que setea carrito de compras seleccionado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:35\n                        \n                    \n\n            \n                \n                    Booleano para mostrar card con informacion del carrito de compras seleccionado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:27\n                        \n                    \n\n            \n                \n                    Listado de carritos de compra realizados por el usuario activo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:31\n                        \n                    \n\n            \n                \n                    Carrito de compras seleccionado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n/**\n * @description\n * Componente para listar los carritos de compra realizados por el usuario logueado\n */\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n  /**\n   * Listado de carritos de compra realizados por el usuario activo\n   */\n  orderList: ShoppingCart[] = [];\n  /**\n   * Carrito de compras seleccionado\n   */\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Booleano para mostrar card con informacion del carrito de compras seleccionado\n   */\n  isSelected: boolean = false;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param shoppingCartService Manejo de carrito de compras \n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  /**\n   * Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n   */\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  /**\n   * Accion que setea carrito de compras seleccionado\n   * @param selected Carrito de compras selecionado\n   */\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  /**\n   * Funcion para aclcular el total de la compra del carrito de compras\n   * @param cardList Listado de cartas del carrito de compras\n   * @returns Valor total de la compra\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  /**\n   * Funcion para sumar el total de cartas de un carrito de compras\n   * @param cardList Listado de cartas de un carrito de compras\n   * @returns total de cartas del carrito de compras\n   */\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordRecoveryComponent.html":{"url":"components/PasswordRecoveryComponent.html","title":"component - PasswordRecoveryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordRecoveryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-recovery/password-recovery.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para iniciar recuperacion de contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-recovery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-recovery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-recovery.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                recoverPassForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userServie: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-recovery/password-recovery.component.ts:26\n                            \n                        \n\n                \n                    \n                            Contructor con dependencia a funciones de manejo de ususario\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userServie\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de informacion de ususario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de recuperacion de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario de recuperar contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        recoverPassForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-recovery/password-recovery.component.ts:26\n                        \n                    \n\n            \n                \n                    Fromulario para recuperar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-recovery/password-recovery.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\n\n/**\n * @description\n * Componente para iniciar recuperacion de contrasena\n */\n@Component({\n  selector: 'app-password-recovery',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-recovery.component.html',\n  styleUrl: './password-recovery.component.css'\n})\nexport class PasswordRecoveryComponent {\n  /**\n   * Fromulario para recuperar contrasena\n   */\n  recoverPassForm!: FormGroup;\n\n  /**\n   * Contructor con dependencia a funciones de manejo de ususario\n   * @param router Manejo de redirecciones\n   * @param userServie Funciones de informacion de ususario\n   */\n  constructor(private router: Router, private userServie: UserService){}\n\n  /**\n   * Iniciacion de formulario de recuperacion de contrasena\n   */\n  ngOnInit(): void {\n    this.recoverPassForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get email(){\n    return this.recoverPassForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario de recuperar contrasena\n   */\n  onSubmit() {\n    alert('Se ha enviado Email de recuperacion');\n\n    if(this.userServie.checkEmail(this.email?.value)){\n      let token = this.userServie.createRecovery(this.email?.value);\n      this.router.navigate(['/actualizar-contrasena/'+token]);\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Email\n            \n              \n            \n                Email es obligatorio.\n                Email no tiene el formato correcto.\n              \n            \n          \n\n          \n            Recuperar Contrasena\n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Email                                                      Email es obligatorio.                Email no tiene el formato correcto.                                                          Recuperar Contrasena            Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordRecoveryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-reset/password-reset.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para recuperar contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-reset\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-reset.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-reset.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                localToken\n                            \n                            \n                                updatePasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-reset/password-reset.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de Usuarios\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de parametros de entrada\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-reset/password-reset.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Iniciacion y validacion de token\nIniciacion de formaulario de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-reset/password-reset.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        localToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/password-reset/password-reset.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable para manejar token\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-reset/password-reset.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para actualizar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-reset/password-reset.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-reset/password-reset.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { UserService } from '../core/services/user.service';\n\n/**\n * @description\n * Componente para formulario para recuperar contrasena\n */\n@Component({\n  selector: 'app-password-reset',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n  /**\n   * Formulario para actualizar contrasena\n   */\n  updatePasswordForm!: FormGroup;\n  /**\n   * Variable para manejar token\n   */\n  localToken: string = '';\n\n  /**\n   * Constructor con dependencia a capa service\n   * @param userService Manejo de Usuarios\n   * @param router Manejo de redirecciones\n   * @param route Manejo de parametros de entrada\n   */\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute \n  ){}\n\n  /**\n   * Iniciacion y validacion de token\n   * Iniciacion de formaulario de contrasena\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const token = params.get('recovery') || '';\n      const message = this.userService.checkRecovery(token);\n      if(message != ''){\n        alert(message);\n        this.router.navigate(['/']);\n      }\n      this.localToken = token;\n    });\n    this.updatePasswordForm = new FormGroup({\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get password(){\n    return this.updatePasswordForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.updatePasswordForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    let message = this.userService.updatePassword(this.localToken,this.password?.value);\n    if(message == ''){\n      alert('Se ha actualizado la Contraseña');\n      this.router.navigate(['/login']);\n    }else{\n      alert(message);\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Debe tener entre 8 y 16 caracteres.\n              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n            \n            \n          \n    \n          \n            Confirmar Contraseña\n            \n              \n            \n              Confirmar Contraseña es obligatorio.\n              Debe tener entre 8 y 16 caracteres.\n              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n              Las contraseñas no coinciden.\n            \n            \n          \n          \n        \n    \n        Confirmar\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Contraseña                                                    Contraseña obligatorio.              Debe tener entre 8 y 16 caracteres.              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                                            Confirmar Contraseña                                                    Confirmar Contraseña es obligatorio.              Debe tener entre 8 y 16 caracteres.              La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.              Las contraseñas no coinciden.                                                                Confirmar                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de Mock de proceso de pago\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:24\n                            \n                        \n\n                \n                    \n                            Contructor de componente con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\nTempo de espera de 4 segundos para simular proceso de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n            \n                \n                    Booleano para indicar si se ha realizado el pago\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente de pantalla de Mock de proceso de pago\n */\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  /**\n   * Booleano para indicar si se ha realizado el pago\n   */\n  isPaymentSuccess: boolean = false;\n\n  /**\n   * Contructor de componente con dependencias a funciones de sesion\n   * @param authService Manejo de informacion de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\n   * Tempo de espera de 4 segundos para simular proceso de pago.\n   */\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  /**\n   * Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n   */\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Recovery.html":{"url":"interfaces/Recovery.html","title":"interface - Recovery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Recovery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/Recovery.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Estructura con valores para la validacion de recuperacion de contrasena\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de intento de recuperacion\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token de intento de recuperacion de contrasena\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Recovery{\n    /**\n     * Identificador de usuario\n     */\n    UserId: number;\n    /**\n     * Token de intento de recuperacion de contrasena\n     */\n    token: string;\n    /**\n     * Fecha de intento de recuperacion\n     */\n    date: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de usuario\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      const result = this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n      if(result){\n        alert('Se ha registrado con exito');\n        this.authService.login(this.registrationForm.get('username')?.value,this.registrationForm.get('password')?.value);\n        this.router.navigate(['/']);\n      }else{\n        alert('El nombre de usuario ya esta en uso');\n      }\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar contenido de carrito de compras\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor dcon dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para simular pago, redirige a mock pasarela de pago\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras actual del cliente logueado.\nse calcula el precio del total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:24\n                        \n                    \n\n            \n                \n                    Varieble que contiene el carrito de compras actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                        \n                    \n\n            \n                \n                    Booleano que indica si el carrito tine items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:28\n                        \n                    \n\n            \n                \n                    Valor de precio total del carro de compras\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para mostrar contenido de carrito de compras\n */\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n  /**\n   * Varieble que contiene el carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Valor de precio total del carro de compras\n   */\n  total: number = 0;\n  /**\n   * Booleano que indica si el carrito tine items\n   */\n  hasItems: boolean = false;\n\n  /**\n   * Constructor dcon dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras actual del cliente logueado.\n   * se calcula el precio del total del carrito\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  /**\n   * Funcion para simular pago, redirige a mock pasarela de pago\n   */\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(private cardItemService: CardItemService){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con formulario de edicion de usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Iniciacion de informacion de usuario.\nIniciacion de formulario de edicion de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable con informacion de usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de edicion de usuario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente con formulario de edicion de usuario\n */\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n  /**\n   * Formulario de edicion de usuario\n   */\n  updateForm!: FormGroup;\n  /**\n   * Variable con informacion de usuario\n   */\n  currentUser: User = {} as User;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de informacion de usuario.\n   * Iniciacion de formulario de edicion de usuario\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                            \n                                userRecoveryTry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                checkRecovery\n                            \n                            \n                                createRecovery\n                            \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                findRecovery\n                            \n                            \n                                generateRandomToken\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:127\n                        \n                    \n\n\n            \n                \n                        Funcion para validar si email ya se encuentra en uso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email para validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si email se encuentra en uso\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkRecovery\n                        \n                    \n                \n            \n            \n                \ncheckRecovery(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:176\n                        \n                    \n\n\n            \n                \n                        Funcion para checkear validez de token de recuperacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                mensaje de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRecovery\n                        \n                    \n                \n            \n            \n                \ncreateRecovery(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un registro de recuperar contrasena\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    email para recuperar contrasena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Token generado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nValida si email ya se encuentra en uso.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findRecovery\n                        \n                    \n                \n            \n            \n                \nfindRecovery(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para encontrar item de recuperacion segun un token dado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Token de recuperacion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Recovery\n\n                        \n                            \n                                Item de recuperacion de clave\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomToken\n                        \n                    \n                \n            \n            \n                \ngenerateRandomToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Funcion para generar token aleatorio\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(token: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar contrasena dado un token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    token de recuperacion\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    nueva contrasena\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                mensaje de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRecoveryTry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Recovery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:45\n                        \n                    \n\n            \n                \n                    Listado de intentos de recuperacion de contrasena\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { Recovery } from '../models/Recovery.model';\nimport * as CryptoJS from 'crypto-js';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Listado de intentos de recuperacion de contrasena\n     */\n    userRecoveryTry: Recovery[] = [];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Valida si email ya se encuentra en uso.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        if(this.checkEmail(email)){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n    /**\n     * Funcion para validar si email ya se encuentra en uso\n     * @param email email para validar\n     * @returns booleano si email se encuentra en uso\n     */\n    checkEmail(email: string): boolean{\n        return (this.userList.find(user => user.Email === email) !== undefined)\n    }\n\n    /**\n     * Funcion para crear un registro de recuperar contrasena\n     * @param email email para recuperar contrasena\n     * @returns Token generado\n     */\n    createRecovery(email:string): string{\n        let findUser = this.userList.find(user => user.Email === email);\n\n        if(findUser == undefined){\n            return '';\n        }\n\n        let recovery = {} as Recovery;\n        recovery.UserId = findUser.id;\n        recovery.date = new Date();\n        recovery.token = this.generateRandomToken();\n\n        this.userRecoveryTry.push(recovery);\n\n        return recovery.token;\n    }\n\n    /**\n     * Funcion para generar token aleatorio\n     * @returns Token\n     */\n    generateRandomToken(): string {\n        const randomBytes = CryptoJS.lib.WordArray.random(16);\n        return randomBytes.toString(CryptoJS.enc.Hex);\n    }\n\n    /**\n     * Funcion para encontrar item de recuperacion segun un token dado\n     * @param token Token de recuperacion\n     * @returns Item de recuperacion de clave\n     */\n    findRecovery(token: string): Recovery{\n        return this.userRecoveryTry.find(recovery => recovery.token === token) || {} as Recovery;\n    }\n\n    /**\n     * Funcion para checkear validez de token de recuperacion\n     * @param token Token de recuperacion\n     * @returns mensaje de error\n     */\n    checkRecovery(token: string): string{\n        let recovery = this.findRecovery(token);\n        let currentDate = new Date();\n\n        if(recovery.UserId == undefined){\n            return 'error de recuperacion'\n        }\n\n        const recoverytimestamp = recovery.date.getTime();\n        const currenttimestamp = currentDate.getTime();\n        const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n        const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n        if(differenceInHours > 1){\n            return 'token ha expirado'\n        }\n\n        return '';\n    }\n\n    /**\n     * Funcion para actualizar contrasena dado un token \n     * @param token token de recuperacion\n     * @param password nueva contrasena\n     * @returns mensaje de error\n     */\n    updatePassword(token: string, password: string): string{\n        let recovery = this.findRecovery(token);\n        let currentDate = new Date();\n\n        if(recovery.UserId == undefined){\n            return 'error de recuperacion';\n        }\n\n        const recoverytimestamp = recovery.date.getTime();\n        const currenttimestamp = currentDate.getTime();\n        const differenceInMillis = Math.abs(currenttimestamp - recoverytimestamp);\n        const differenceInHours = differenceInMillis / (1000 * 60 * 60);\n\n        if(differenceInHours > 1){\n            return 'token ha expirado';\n        }\n\n        let user: User = this.userList.find(user => user.id === recovery.UserId ) || {} as User\n\n        if(user.id == undefined){\n            return 'error de recuperacion';\n        }\n\n        console.log(user.id);\n        user.Password = password;\n\n        let result = this.updateUser(user);\n\n        if (!result) {\n            return 'error al actualizar usuario';\n        }\n\n        return '';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/Recovery.model.ts\n            \n            interface\n            Recovery\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/password-recovery/password-recovery.component.ts\n            \n            component\n            PasswordRecoveryComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            crypto-js : ^4.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
