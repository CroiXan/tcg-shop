var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.039,1,0.61]],["body/components/AccountManagementComponent.html",[0,0.063,1,1.037,2,0.935,3,0.324,4,0.285,5,0.758,6,0.758,7,0.758,8,0.285,9,4.73,10,4.73,11,2.303,12,0.488,13,1.314,14,3.444,15,0.663,16,4.681,17,0.521,18,3.935,19,2.784,20,0.758,21,1.451,22,1.451,23,1.332,24,1.14,25,1.012,26,0.663,27,1.012,28,1.037,29,1.037,30,1.037,31,1.037,32,1.431,33,1.012,34,3.444,35,1.012,36,3.444,37,0.211,38,0.381,39,5.272,40,0.793,41,1.527,42,1.217,43,1.377,44,1.332,45,0.818,46,4.681,47,0.862,48,1.585,49,1.314,50,1.644,51,0.544,52,0.029,53,0.549,54,0.331,55,0.544,56,2.945,57,1.585,58,3.935,59,1.217,60,3.077,61,3.698,62,0.862,63,1.644,64,2.331,65,0.544,66,1.012,67,1.585,68,0.7,69,0.645,70,0.792,71,0.451,72,0.487,73,2.577,74,4.681,75,0.747,76,2.577,77,1.124,78,2.577,79,3.503,80,1.053,81,2.577,82,3.503,83,0.883,84,1.024,85,0.324,86,0.496,87,0.593,88,1.102,89,3.503,90,3.503,91,3.935,92,4.73,93,5.627,94,3.077,95,5.627,96,4.681,97,2.784,98,0.758,99,1.012,100,1.012,101,0.758,102,1.124,103,0.758,104,1.012,105,0.645,106,0.758,107,0.645,108,0.758,109,0.645,110,1.012,111,0.645,112,0.451,113,1.012,114,0.758,115,0.645,116,0.758,117,0.645,118,0.758,119,0.645,120,0.645,121,0.758,122,0.645,123,0.793,124,0.758,125,0.645,126,0.758,127,0.645,128,0.758,129,0.645,130,0.758,131,0.758,132,0.645,133,0.7,134,0.758,135,0.758,136,0.758,137,0.02,138,0.02]],["title/interfaces/Address.html",[75,0.469,139,1.404]],["body/interfaces/Address.html",[3,0.409,4,0.36,8,0.36,12,0.409,15,0.77,17,0.547,37,0.267,38,0.443,52,0.029,53,0.639,54,0.453,57,1.84,62,1.001,67,2.239,72,0.566,75,0.77,85,0.409,137,0.023,138,0.023,139,1.876,140,2.63,141,3.718,142,2.476,143,3.253,144,1.369,145,2.907,146,1.876,147,2.63,148,2.029,149,2.907,150,4.035,151,2.521,152,2.121,153,4.217,154,3.651,155,3.232,156,3.903,157,2.306,158,1.589,159,3.232,160,2.494,161,5.436,162,1.475,163,1.71,164,5.436]],["title/components/AddressCreateComponent.html",[0,0.039,105,0.61]],["body/components/AddressCreateComponent.html",[0,0.059,1,0.576,2,0.865,3,0.289,4,0.255,5,0.676,6,0.676,7,0.676,8,0.255,12,0.46,13,1.012,17,0.546,20,0.676,21,1.435,22,1.435,23,0.676,24,0.676,25,0.937,26,0.613,27,0.937,28,0.576,29,0.576,30,0.576,31,0.576,32,1.349,33,0.937,35,0.937,37,0.188,38,0.353,40,0.734,41,1.457,42,1.075,43,1.228,44,1.293,45,0.946,47,0.989,49,1.012,50,1.568,51,0.485,52,0.029,53,0.623,54,0.306,55,0.485,62,0.798,65,0.672,66,1.075,70,0.725,71,0.402,72,0.325,75,0.863,77,0.993,80,0.865,83,0.787,84,0.913,85,0.289,86,0.443,87,0.529,98,0.676,99,0.937,100,0.937,101,0.676,102,1.072,103,0.676,104,0.937,105,0.989,106,0.676,107,0.576,108,0.676,109,0.576,110,0.937,111,0.576,112,0.402,113,0.937,114,0.676,115,0.576,116,0.676,117,0.576,118,0.676,119,0.576,120,0.576,121,0.676,122,0.576,123,0.734,124,0.676,125,0.576,126,0.676,127,0.576,128,0.676,129,0.576,130,0.676,131,0.676,132,0.576,133,0.625,134,0.676,135,0.676,136,0.676,137,0.018,138,0.018,147,2.576,150,3.527,152,1.688,153,3.527,155,3.191,156,3.468,165,4.552,166,4.552,167,2.627,168,3.035,169,5.367,170,3.186,171,3.641,172,2.475,173,3.657,174,4.331,175,4.331,176,4.971,177,2.912,178,2.35,179,4.331,180,3.186,181,1.091,182,3.126,183,1.362,184,3.641,185,3.641,186,3.126,187,3.641,188,2.35,189,2.672,190,3.126,191,3.126,192,3.126,193,3.126,194,3.126,195,3.126,196,3.126,197,3.126,198,2.586,199,1.696,200,2.299,201,2.299,202,2.054,203,1.434,204,2.956,205,2.847,206,2.054,207,1.556,208,3.126,209,2.215,210,2.912,211,1.568,212,3.126,213,3.126,214,3.126,215,3.126,216,3.126,217,3.126,218,3.126,219,3.641,220,5.124,221,2.797,222,3.307,223,4.511,224,3.468,225,2.903,226,3.833,227,3.527,228,3.527,229,3.641,230,2.157]],["title/components/AddressManagementComponent.html",[0,0.039,29,0.61]],["body/components/AddressManagementComponent.html",[0,0.064,1,0.66,2,0.949,3,0.332,4,0.292,5,0.774,6,0.774,7,0.774,8,0.292,11,2.354,12,0.44,13,1.11,15,0.673,17,0.531,20,0.774,21,1.454,22,1.454,23,0.774,24,1.153,25,1.027,26,0.673,27,1.027,28,0.66,29,1.046,30,0.66,31,0.66,32,1.447,33,1.027,34,3.495,35,1.027,36,3.495,37,0.216,38,0.387,40,0.804,41,1.541,42,1.153,43,1.407,44,1.339,45,0.827,47,0.875,49,1.11,50,1.659,51,0.556,52,0.029,53,0.555,54,0.336,55,0.556,62,1.118,63,1.659,65,0.556,66,1.027,68,0.716,69,0.66,70,0.76,71,0.461,72,0.373,75,0.934,76,4.176,77,1.065,80,0.949,83,0.902,84,1.047,85,0.332,86,0.507,87,0.606,94,3.99,98,0.774,99,1.027,100,1.027,101,0.774,102,1.134,103,0.774,104,1.027,105,1.046,106,0.774,107,0.66,108,0.774,109,0.66,110,1.027,111,0.66,112,0.461,113,1.027,114,0.774,115,0.66,116,0.774,117,0.66,118,0.774,119,0.66,120,0.66,121,0.774,122,0.66,123,0.804,124,0.774,125,0.66,126,0.774,127,0.66,128,0.774,129,0.66,130,0.774,131,0.774,132,0.66,133,0.716,134,0.774,135,0.774,136,0.774,137,0.02,138,0.02,155,2.825,165,4.176,166,2.635,180,3.495,181,1.43,207,1.783,220,3.993,223,3.993,228,3.122,231,3.993,232,2.18,233,4.75,234,5.33,235,4.75,236,3.581,237,3.993,238,2.18,239,2.069,240,3.581,241,3.581,242,3.581,243,3.581,244,3.01,245,4.75,246,4.75,247,4.75,248,4.75]],["title/injectables/AddressService.html",[249,1.207,250,2.175]],["body/injectables/AddressService.html",[3,0.293,4,0.258,8,0.258,12,0.524,15,0.829,17,0.554,37,0.191,38,0.356,40,0.74,45,0.838,47,0.805,49,1.021,51,0.777,52,0.029,53,0.666,54,0.381,55,0.777,59,1.266,60,2.874,62,0.994,63,1.836,65,0.879,66,0.685,67,2.101,68,0.633,69,0.584,70,0.562,71,0.407,72,0.33,75,0.898,85,0.293,86,0.449,87,1.016,94,4.019,137,0.019,138,0.019,142,2.121,144,1.36,146,1.855,147,3.21,148,2.687,149,2.874,150,4.079,151,2.403,152,2.077,153,4.17,154,3.736,155,2.6,156,3.805,157,1.855,158,1.278,159,2.6,162,1.465,163,1.375,211,1.463,221,2.006,232,2.006,239,2.135,244,4.761,249,1.594,250,2.874,251,1.719,252,2.663,253,3.177,254,3.675,255,3.675,256,4.372,257,5.398,258,4.372,259,3.168,260,2.301,261,2.874,262,4.372,263,3.675,264,2.6,265,3.675,266,4.372,267,4.372,268,3.168,269,4.372,270,3.675,271,2.121,272,4.372,273,3.168,274,4.372,275,2.874,276,2.874,277,1.155,278,1.855,279,2.177,280,1.718,281,2.874,282,2.874,283,4.372,284,3.722,285,5.398,286,3.675,287,5.398,288,4.372,289,4.372,290,3.971,291,4.372,292,5.398,293,3.168,294,4.372,295,4.372,296,1.594,297,2.663,298,1.884,299,1.719,300,3.168,301,1.155,302,2.082,303,3.168,304,2.082,305,2.331,306,1.155,307,3.168,308,3.168,309,3.168,310,3.168,311,3.168,312,3.168,313,3.168,314,3.168,315,1.155,316,3.168,317,3.168]],["title/components/AppComponent.html",[0,0.039,107,0.61]],["body/components/AppComponent.html",[0,0.068,1,0.759,2,1.04,3,0.382,4,0.336,5,0.891,6,0.891,7,0.891,8,0.336,12,0.482,13,1.215,14,3.828,17,0.488,19,3.561,20,0.891,21,1.473,22,1.473,23,0.891,24,0.891,25,1.125,26,0.737,27,1.125,28,0.759,29,0.759,30,0.759,31,0.759,33,1.125,35,1.125,37,0.248,38,0.424,45,0.64,52,0.029,53,0.542,54,0.291,67,1.396,68,0.824,69,0.759,70,0.733,71,0.53,72,0.429,75,0.737,77,1.139,80,1.04,85,0.382,86,0.584,98,0.891,99,1.125,100,1.125,101,0.891,102,1.197,103,0.891,104,1.125,105,0.759,106,0.891,107,1.103,108,0.891,109,0.759,110,1.125,111,0.759,112,0.53,113,1.125,114,0.891,115,0.759,116,0.891,117,1.103,118,0.891,119,0.759,120,0.759,121,0.891,122,0.759,123,0.881,124,0.891,125,0.759,126,0.891,127,0.759,128,0.891,129,0.759,130,0.891,131,0.891,132,0.759,133,0.824,134,0.891,135,0.891,136,0.891,137,0.022,138,0.022,144,1.311,299,2.823,318,3.465,319,5.701,320,5.203,321,5.203,322,5.701,323,4.374,324,4.122,325,5.203,326,1.297,327,4.122]],["title/injectables/AuthService.html",[44,0.716,249,1.207]],["body/injectables/AuthService.html",[3,0.17,4,0.15,8,0.15,12,0.497,14,2.147,15,0.933,17,0.552,19,2.455,26,0.261,37,0.111,38,0.238,40,0.494,42,0.893,44,0.631,45,0.964,47,0.538,48,0.988,49,1.217,50,1.606,51,0.779,52,0.03,53,0.559,54,0.379,55,0.779,57,1.86,59,1.234,60,1.918,61,2.714,62,1.051,63,1.883,64,2.736,65,0.983,66,0.973,67,2.153,68,0.9,69,0.829,70,0.721,71,0.237,72,0.559,75,0.514,85,0.17,86,0.261,87,1.015,88,1.93,94,3.423,112,0.707,123,0.699,133,0.368,137,0.012,138,0.012,142,1.147,144,1.589,146,1.751,147,1.736,150,2.714,151,1.622,152,1.729,153,3.149,155,1.736,156,3.097,157,1.238,158,1.522,159,1.736,160,1.339,162,1.3,163,1.845,181,1.437,209,1.882,211,1.639,225,1.453,230,2.056,232,1.894,238,2.522,239,1.064,249,1.064,250,3.423,251,0.998,255,2.454,260,2.499,261,2.714,271,2.159,276,1.918,277,1.83,278,2.209,279,2.056,280,2.305,281,1.918,296,1.505,297,1.547,298,1.094,299,0.998,301,0.671,306,1.064,315,0.671,326,0.579,328,1.547,329,2.919,330,2.919,331,2.454,332,2.454,333,2.384,334,3.627,335,3.627,336,3.049,337,3.627,338,2.454,339,4.129,340,4.129,341,4.129,342,4.129,343,4.129,344,4.129,345,3.471,346,2.454,347,3.471,348,2.919,349,4.129,350,2.919,351,2.919,352,1.354,353,1.83,354,2.826,355,3.097,356,2.919,357,1.453,358,1.453,359,1.064,360,2.427,361,2.919,362,1.84,363,2.455,364,2.541,365,2.159,366,2.455,367,2.919,368,2.919,369,1.918,370,2.454,371,2.147,372,1.918,373,2.919,374,1.84,375,3.471,376,3.488,377,2.919,378,1.84,379,3.037,380,1.84,381,1.84,382,1.84,383,2.919,384,2.919,385,3.471,386,3.471,387,1.84,388,2.919,389,1.84,390,2.454,391,1.84,392,2.714,393,2.056,394,2.919,395,1.84,396,4.129,397,1.584,398,1.736,399,2.454,400,1.84,401,2.919,402,2.454,403,1.736,404,2.919,405,1.84,406,2.919,407,3.049,408,2.919,409,1.84,410,2.919,411,2.919,412,2.919,413,2.919,414,2.919,415,2.919,416,2.677,417,2.443,418,1.84,419,2.147,420,2.455,421,1.339,422,3.037,423,3.037,424,2.157,425,3.524,426,2.919,427,2.455,428,1.84,429,2.919,430,2.714,431,2.669,432,4.502,433,1.539,434,1.84,435,4.791,436,4.129,437,1.84,438,2.919,439,1.84,440,2.919,441,1.918,442,1.84,443,2.919,444,1.84,445,1.547,446,1.547,447,1.84,448,1.547,449,0.998,450,1.547,451,1.354,452,1.209,453,1.547,454,3.627,455,1.84,456,1.84,457,1.746,458,4.129,459,3.627,460,2.919,461,1.84,462,2.919,463,1.84,464,1.84,465,1.84,466,1.84,467,1.84,468,1.84,469,1.84,470,0.998,471,3.627,472,2.919,473,1.354,474,1.84,475,1.84,476,1.84,477,1.84,478,1.84,479,2.919,480,1.84,481,1.84,482,1.84,483,1.84,484,2.454]],["title/components/CardDetailComponent.html",[0,0.039,109,0.61]],["body/components/CardDetailComponent.html",[0,0.049,1,0.41,2,0.677,3,0.206,4,0.181,5,0.482,6,0.482,7,0.482,8,0.181,12,0.379,13,0.791,15,0.846,17,0.554,20,0.482,21,1.376,22,1.376,23,0.482,24,0.482,25,0.732,26,0.48,27,0.732,28,0.41,29,0.41,30,0.41,31,0.41,32,1.112,33,0.732,35,0.732,37,0.134,38,0.276,40,0.574,41,1.242,42,0.732,43,0.876,44,1.165,45,0.971,47,0.843,48,1.146,49,0.791,50,0.99,51,0.346,52,0.03,53,0.427,54,0.323,55,0.346,62,0.843,65,0.525,66,0.989,67,1.146,68,0.677,69,0.624,70,0.714,71,0.287,72,0.232,75,0.48,77,0.818,80,1.109,83,0.561,84,0.651,85,0.206,86,0.316,87,0.694,88,1.288,98,0.482,99,0.732,100,0.732,101,0.482,102,0.914,103,0.482,104,0.732,105,0.41,106,0.482,107,0.41,108,0.482,109,0.843,110,0.732,111,0.41,112,0.666,113,0.732,114,0.482,115,0.41,116,0.482,117,0.41,118,0.482,119,0.41,120,0.41,121,0.482,122,0.41,123,0.574,124,0.482,125,0.41,126,0.482,127,0.41,128,0.482,129,0.41,130,0.482,131,0.482,132,0.41,133,0.445,134,0.482,135,0.482,136,0.482,137,0.014,138,0.014,144,0.853,158,1.622,160,2.1,168,2.58,172,2.039,177,2.482,178,1.837,181,1.306,183,1.439,188,2.482,189,2.278,198,2.741,199,1.209,203,1.022,205,3.007,206,1.464,209,2.347,210,3.197,211,1.722,221,2.946,222,3.483,224,3.082,225,2.58,226,3.406,228,3.007,229,4.356,230,1.109,238,2.1,275,2.226,301,0.812,326,0.701,336,3.443,353,2.023,357,1.686,358,1.686,359,1.235,364,2.776,385,3.846,419,4.083,457,0.812,484,1.873,485,4.631,486,5.292,487,1.639,488,2.181,489,2.278,490,2.491,491,2.436,492,2.847,493,2.847,494,4.096,495,4.921,496,3.007,497,3.366,498,3.366,499,3.366,500,3.366,501,3.366,502,3.007,503,3.366,504,3.366,505,3.366,506,3.366,507,2.763,508,3.386,509,2.491,510,2.228,511,2.228,512,1.436,513,2.228,514,2.847,515,2.847,516,2.228,517,3.386,518,2.847,519,2.228,520,2.228,521,2.228,522,2.228,523,2.228,524,2.228,525,2.228,526,2.228,527,2.228,528,2.228,529,2.228,530,2.228,531,2.228,532,2.228,533,2.228,534,2.228,535,2.228,536,2.228,537,2.228,538,2.228,539,2.228,540,2.228,541,1.325,542,1.639,543,2.228,544,2.228,545,3.386,546,1.464,547,2.228,548,3.386,549,3.386,550,3.386,551,3.386,552,3.386,553,3.386,554,3.386,555,3.386,556,3.386,557,3.386,558,3.386,559,2.228,560,2.228,561,2.228,562,2.228,563,2.228,564,2.228,565,2.228,566,2.228,567,2.228,568,2.228,569,2.228,570,4.096,571,1.873,572,2.228,573,2.228,574,2.228,575,2.228,576,2.228,577,2.228,578,2.228,579,2.228,580,2.228,581,2.228,582,2.228,583,1.464,584,2.228,585,1.639,586,3.386,587,2.228,588,1.639,589,4.083,590,3.846,591,3.846,592,2.721,593,2.721,594,3.846,595,3.007,596,3.366,597,4.576,598,3.386]],["title/interfaces/CardItem.html",[112,0.426,139,1.404]],["body/interfaces/CardItem.html",[3,0.338,4,0.297,8,0.297,12,0.338,15,0.762,17,0.56,37,0.22,38,0.392,52,0.029,54,0.465,57,1.629,59,0.79,62,0.673,67,2.298,85,0.338,112,0.619,137,0.02,138,0.02,139,1.549,140,2.172,142,2.115,143,2.686,144,1.717,145,2.4,151,2.399,152,2.088,157,2.041,158,1.672,159,2.861,162,1.306,296,1.754,364,2.879,421,1.676,425,3.54,430,3.163,488,1.435,489,2.96,496,3.76,497,4.208,498,4.208,499,4.208,500,4.208,501,4.208,502,3.76,503,4.208,504,4.208,505,4.208,506,4.208,592,2.861,594,4.045,595,3.163,599,3.07,600,2.172,601,4.809,602,5.132,603,4.812,604,5.72,605,4.812,606,4.045,607,4.812,608,4.812,609,4.812,610,4.812]],["title/injectables/CardItemService.html",[249,1.207,507,1.648]],["body/injectables/CardItemService.html",[3,0.09,4,0.186,8,0.079,12,0.29,15,0.717,17,0.5,26,0.241,37,0.103,38,0.139,40,0.289,45,0.535,49,0.398,51,0.426,52,0.029,53,0.286,54,0.263,55,0.426,57,0.577,59,0.369,62,0.506,65,0.645,67,1.167,68,0.194,69,0.42,70,0.219,71,0.125,77,0.549,80,1.126,85,0.09,86,0.137,87,0.465,88,0.718,97,3.784,102,0.194,112,0.652,137,0.007,138,0.007,142,1.355,151,2.425,152,1.243,157,1.165,158,0.802,162,0.463,163,0.864,171,4.613,211,1.266,230,0.849,239,1.441,249,0.621,251,0.526,253,1.49,260,1.703,264,1.014,277,1.001,278,0.723,279,0.849,280,1.079,284,2.598,290,3.583,298,0.577,299,0.526,301,0.621,302,1.121,304,0.637,306,2.268,315,0.353,364,2.218,366,1.014,369,2.056,372,1.805,379,2.536,390,1.433,441,1.121,453,0.815,457,0.353,488,1.991,489,2.425,496,4.033,497,4.514,498,4.514,499,4.514,500,4.514,501,4.514,502,4.033,503,4.514,504,4.514,505,4.514,506,4.514,507,0.849,518,1.433,583,2.056,589,2.02,595,1.805,596,3.949,601,5.158,611,0.815,612,1.918,613,1.705,614,1.705,615,1.705,616,1.705,617,2.746,618,1.705,619,0.97,620,1.121,621,1.705,622,0.97,623,1.705,624,0.97,625,2.35,626,1.433,627,1.705,628,2.736,629,0.97,630,1.705,631,1.705,632,2.308,633,2.308,634,1.433,635,1.254,636,0.97,637,2.746,638,1.705,639,1.705,640,4.87,641,4.87,642,4.87,643,1.705,644,6.136,645,1.705,646,5.591,647,3.448,648,5.761,649,3.953,650,1.705,651,5.487,652,4.87,653,6.44,654,1.705,655,1.705,656,3.448,657,3.953,658,2.746,659,1.705,660,3.953,661,1.705,662,1.705,663,1.705,664,5.487,665,4.631,666,3.448,667,3.953,668,1.705,669,1.705,670,1.705,671,1.705,672,1.705,673,3.448,674,1.705,675,1.705,676,1.705,677,3.953,678,3.953,679,3.953,680,3.953,681,1.705,682,3.323,683,3.448,684,1.705,685,5.368,686,5.591,687,3.953,688,1.705,689,1.705,690,4.334,691,3.953,692,2.746,693,3.448,694,5.487,695,4.87,696,3.448,697,3.448,698,1.705,699,4.334,700,2.746,701,4.631,702,1.705,703,1.705,704,1.705,705,1.705,706,1.705,707,1.705,708,2.746,709,2.746,710,1.705,711,3.448,712,5.066,713,2.746,714,2.746,715,1.705,716,1.705,717,3.643,718,2.746,719,1.705,720,1.705,721,1.705,722,1.705,723,1.705,724,1.705,725,3.407,726,2.746,727,1.705,728,3.953,729,1.705,730,4.334,731,1.705,732,3.953,733,3.448,734,3.953,735,4.87,736,2.746,737,1.705,738,1.705,739,1.705,740,1.705,741,3.448,742,1.705,743,1.705,744,1.705,745,1.705,746,1.705,747,1.705,748,1.705,749,1.705,750,1.705,751,1.705,752,1.705,753,1.254,754,2.746,755,4.87,756,1.705,757,3.953,758,1.705,759,3.643,760,1.705,761,1.705,762,1.705,763,2.746,764,2.746,765,1.705,766,1.705,767,1.705,768,1.705,769,1.705,770,2.746,771,2.746,772,1.705,773,1.705,774,1.705,775,1.705,776,1.705,777,4.87,778,3.448,779,1.705,780,1.705,781,1.705,782,1.705,783,1.705,784,2.746,785,1.705,786,1.705,787,2.308,788,3.953,789,3.953,790,3.448,791,1.705,792,1.705,793,2.746,794,1.705,795,1.705,796,1.705,797,1.705,798,1.705,799,2.746,800,1.705,801,3.448,802,2.308,803,2.746,804,1.705,805,1.705,806,1.705,807,1.705,808,1.705,809,2.898,810,2.746,811,2.746,812,1.705,813,3.953,814,1.705,815,1.705,816,2.746,817,3.953,818,3.448,819,1.705,820,2.746,821,2.746,822,2.746,823,1.705,824,1.705,825,1.705,826,1.705,827,1.705,828,1.705,829,1.705,830,1.705,831,1.705,832,2.746,833,1.705,834,1.705,835,2.746,836,1.705,837,2.746,838,1.705,839,1.705,840,1.705,841,1.705,842,1.705,843,1.705,844,1.705,845,1.705,846,1.705,847,2.746,848,4.631,849,1.705,850,2.746,851,1.705,852,1.705,853,3.448,854,1.705,855,1.705,856,4.334,857,1.705,858,1.705,859,3.448,860,1.705,861,1.705,862,4.87,863,1.705,864,1.705,865,1.705,866,1.705,867,1.705,868,1.705,869,1.705,870,1.705,871,2.746,872,2.746,873,2.746,874,1.705,875,1.705,876,4.87,877,1.705,878,3.448,879,1.705,880,1.705,881,2.746,882,1.705,883,1.705,884,1.705,885,3.953,886,2.746,887,3.448,888,3.448,889,3.448,890,3.448,891,1.705,892,3.448,893,1.705,894,2.746,895,4.631,896,3.953,897,1.705,898,1.705,899,1.705,900,1.705,901,1.705,902,1.705,903,1.705,904,1.705,905,1.705,906,1.705,907,1.705,908,1.705,909,1.705,910,1.705,911,3.448,912,1.705,913,1.705,914,2.746,915,1.705,916,1.705,917,1.705,918,1.705,919,1.705,920,1.705,921,1.705,922,2.746,923,1.705,924,1.705,925,1.705,926,1.705,927,2.746,928,1.705,929,1.705,930,1.705,931,1.705,932,1.705,933,1.705,934,1.705,935,1.705,936,1.705,937,2.746,938,2.746,939,1.705,940,1.705,941,1.705,942,1.705,943,2.746,944,1.705,945,1.433,946,2.746,947,3.448,948,1.705,949,1.705,950,1.705,951,1.705,952,1.705,953,1.433,954,2.746,955,3.448,956,3.953,957,3.953,958,1.705,959,1.705,960,1.705,961,1.705,962,2.746,963,1.705,964,1.705,965,1.705,966,1.705,967,1.705,968,1.705,969,4.334,970,1.705,971,3.953,972,2.746,973,2.746,974,1.705,975,1.705,976,1.705,977,1.705,978,1.705,979,1.705,980,2.746,981,1.705,982,1.705,983,1.705,984,3.448,985,1.705,986,1.705,987,1.705,988,1.705,989,1.705,990,1.705,991,1.705,992,1.705,993,1.705,994,1.705,995,3.448,996,3.448,997,1.705,998,1.433,999,1.705,1000,1.705,1001,1.705,1002,1.705,1003,1.705,1004,1.705,1005,1.705,1006,1.705,1007,1.705,1008,1.705,1009,1.705,1010,1.705,1011,1.705,1012,1.705,1013,1.705,1014,1.705,1015,1.705,1016,3.953,1017,1.705,1018,2.746,1019,2.746,1020,1.705,1021,1.705,1022,1.705,1023,1.705,1024,1.705,1025,1.705,1026,1.705,1027,1.705,1028,1.705,1029,1.705,1030,2.746,1031,1.705,1032,1.705,1033,1.705,1034,1.705,1035,1.705,1036,1.705,1037,1.705,1038,1.705,1039,1.705,1040,1.705,1041,1.705,1042,1.705,1043,1.705,1044,1.705,1045,1.705,1046,1.705,1047,1.705,1048,1.705,1049,1.705,1050,1.705,1051,1.705,1052,1.705,1053,1.705,1054,1.705,1055,1.705,1056,1.705,1057,1.705,1058,1.705,1059,1.705,1060,1.705,1061,1.705,1062,1.705,1063,1.705,1064,1.705,1065,1.705,1066,0.97,1067,1.433,1068,1.705,1069,0.97,1070,0.97,1071,0.815,1072,0.97,1073,0.97,1074,0.97,1075,2.301,1076,0.97,1077,0.97,1078,0.97,1079,0.97,1080,0.713,1081,0.97,1082,0.97,1083,0.97]],["title/components/CardManageComponent.html",[0,0.039,31,0.61]],["body/components/CardManageComponent.html",[0,0.059,1,0.58,2,0.87,3,0.291,4,0.256,5,0.68,6,0.68,7,0.68,8,0.256,12,0.462,13,1.016,15,0.762,17,0.546,18,3.658,20,0.68,21,1.436,22,1.436,23,0.68,24,0.68,25,0.941,26,0.616,27,0.941,28,0.58,29,0.58,30,0.58,31,0.991,32,1.354,33,0.941,35,0.941,37,0.19,38,0.354,40,0.737,41,1.461,42,1.164,43,1.236,44,1.295,45,0.877,47,0.802,48,1.473,49,1.016,51,0.675,52,0.029,53,0.56,54,0.353,55,0.675,62,1.125,65,0.774,66,1.164,68,0.629,69,0.58,70,0.751,71,0.405,72,0.328,75,0.616,77,0.997,80,1.254,81,4.299,83,0.793,84,0.92,85,0.291,86,0.446,87,0.912,88,1.569,98,0.68,99,0.941,100,0.941,101,0.68,102,1.075,103,0.68,104,0.941,105,0.58,106,0.68,107,0.58,108,0.68,109,0.58,110,0.941,111,0.58,112,0.77,113,0.941,114,0.68,115,0.58,116,0.68,117,0.58,118,0.68,119,0.58,120,0.58,121,0.68,122,0.58,123,0.737,124,0.68,125,0.58,126,0.68,127,0.58,128,0.68,129,0.58,130,0.68,131,0.68,132,0.58,133,0.629,134,0.68,135,0.68,136,0.68,137,0.018,138,0.018,144,1.356,151,1.71,158,1.272,181,1.096,183,1.369,225,1.567,230,2.167,239,2.13,260,1.96,296,1.586,326,0.99,353,2.226,357,2.167,358,2.167,359,1.586,364,2.479,403,3.475,419,3.201,457,1.147,485,4.299,488,2.465,489,3.04,490,2.315,507,3.04,512,1.846,541,1.871,542,2.315,589,3.201,590,3.658,591,3.658,592,2.588,593,2.588,1075,3.201,1084,2.645,1085,4.352,1086,4.352,1087,4.352,1088,3.279,1089,5.382,1090,4.352,1091,4.352,1092,3.147,1093,4.352,1094,3.201,1095,3.147,1096,4.352,1097,3.147,1098,4.352,1099,3.147,1100,2.645,1101,3.147,1102,3.147,1103,2.645,1104,3.147,1105,2.645,1106,2.645,1107,1.871,1108,2.645,1109,2.645,1110,3.147,1111,3.201,1112,4.352,1113,4.352,1114,2.86,1115,2.86,1116,2.588]],["title/components/CarditemListComponent.html",[0,0.039,111,0.61]],["body/components/CarditemListComponent.html",[0,0.058,1,0.549,2,0.837,3,0.276,4,0.243,5,0.644,6,0.644,7,0.644,8,0.243,12,0.487,13,1.228,15,0.784,17,0.548,20,0.644,21,1.427,22,1.427,23,0.644,24,0.644,25,0.906,26,0.593,27,0.906,28,0.549,29,0.549,30,0.549,31,0.549,32,1.315,33,0.906,35,0.906,37,0.18,38,0.341,40,0.71,41,1.427,42,1.137,44,1.302,45,0.816,47,0.772,48,1.418,50,1.224,51,0.65,52,0.03,53,0.547,54,0.342,55,0.65,57,1.875,59,1.137,60,3.455,65,0.65,66,1.048,67,1.64,68,0.595,69,0.549,70,0.739,71,0.383,72,0.31,75,0.593,77,0.968,80,0.837,83,0.751,84,0.871,85,0.276,86,0.422,87,0.938,88,1.524,98,0.644,99,0.906,100,0.906,101,0.644,102,1.05,103,0.644,104,0.906,105,0.549,106,0.644,107,0.549,108,0.644,109,0.549,110,0.906,111,0.968,112,0.798,113,0.906,114,0.644,115,0.549,116,0.644,117,0.549,118,0.644,119,0.549,120,0.549,121,0.644,122,0.549,123,0.71,124,0.644,125,0.549,126,0.644,127,0.549,128,0.644,129,0.549,130,0.644,131,0.644,132,0.549,133,0.595,134,0.644,135,0.644,136,0.644,137,0.018,138,0.018,152,1.524,157,1.777,158,1.536,163,1.807,181,1.447,183,1.318,230,2.617,239,1.916,264,2.491,296,1.527,301,1.766,326,0.937,357,2.086,358,2.086,359,1.527,360,1.904,363,2.491,364,2.685,365,1.646,366,1.772,369,2.754,372,1.959,386,3.522,393,1.484,488,2.257,489,2.999,496,3.775,507,2.999,512,1.777,541,1.772,542,2.192,583,1.959,585,2.192,595,2.754,606,3.522,612,4.073,628,3.867,635,3.082,1067,3.522,1100,2.505,1106,2.505,1116,2.491,1117,4.656,1118,4.656,1119,2.192,1120,3.775,1121,3.522,1122,3.522,1123,3.522,1124,4.19,1125,2.98,1126,5.256,1127,4.19,1128,4.073,1129,4.19,1130,2.98,1131,2.98,1132,4.19,1133,5.256,1134,3.522,1135,4.19,1136,4.19,1137,2.98,1138,2.98,1139,2.98,1140,2.98,1141,2.98,1142,1.617,1143,2.98,1144,2.98,1145,4.19,1146,4.19,1147,4.19,1148,3.082]],["title/components/LoginComponent.html",[0,0.039,115,0.61]],["body/components/LoginComponent.html",[0,0.06,1,0.594,2,0.885,3,0.299,4,0.263,5,0.698,6,0.698,7,0.698,8,0.263,12,0.468,13,1.034,15,0.627,17,0.552,19,2.633,20,0.698,21,1.44,22,1.44,23,0.698,24,0.698,25,0.957,26,0.627,27,0.957,28,0.594,29,0.594,30,0.594,31,0.594,32,1.372,33,0.957,35,0.957,37,0.194,38,0.36,40,0.75,41,1.476,42,1.093,43,1.268,44,1.273,45,0.914,47,0.816,48,1.499,49,1.271,50,1.59,51,0.501,52,0.029,53,0.526,54,0.313,55,0.501,59,1.176,62,1.002,63,1.721,65,0.687,66,1.176,70,0.733,71,0.415,72,0.336,75,0.627,77,1.01,80,0.885,83,0.813,84,0.943,85,0.299,86,0.457,87,0.75,98,0.698,99,0.957,100,0.957,101,0.698,102,1.087,103,0.698,104,0.957,105,0.594,106,0.698,107,0.594,108,0.698,109,0.594,110,0.957,111,0.594,112,0.415,113,0.957,114,0.698,115,1.002,116,0.698,117,0.594,118,0.698,119,0.594,120,0.594,121,0.698,122,0.594,123,1.04,124,0.698,125,0.594,126,0.698,127,0.594,128,0.698,129,0.594,130,0.698,131,0.698,132,0.594,133,0.645,134,0.698,135,0.698,136,0.698,137,0.019,138,0.019,144,1.115,158,1.721,160,2.496,168,3.195,172,2.516,177,2.951,178,2.402,181,1.115,183,1.392,188,2.402,189,2.708,198,2.319,199,1.75,203,1.48,207,1.606,209,1.986,210,2.402,211,1.294,221,2.031,222,2.951,326,1.015,346,4.95,353,2.239,359,1.614,371,4.002,376,1.918,393,1.606,397,3.195,470,1.75,491,3.005,512,1.878,1107,2.633,1134,2.712,1142,1.75,1149,2.712,1150,3.722,1151,4.427,1152,4.427,1153,5.054,1154,4.427,1155,3.226,1156,3.226,1157,3.257,1158,2.373,1159,3.226,1160,2.712,1161,3.226,1162,3.226,1163,3.226,1164,3.226,1165,3.226,1166,3.226,1167,3.226,1168,4.436,1169,3.226,1170,3.235,1171,4.573,1172,2.91]],["title/components/NavbarComponent.html",[0,0.039,117,0.61]],["body/components/NavbarComponent.html",[0,0.058,1,0.553,2,0.842,3,0.278,4,0.245,5,0.65,6,0.65,7,0.65,8,0.245,12,0.45,13,1.232,15,0.921,17,0.544,20,0.65,21,1.429,22,1.429,23,0.65,24,0.65,25,0.911,26,0.597,27,0.911,28,0.553,29,0.553,30,0.553,31,0.553,32,1.321,33,0.911,35,0.911,37,0.181,38,0.343,40,0.714,41,1.432,42,1.052,44,1.305,45,0.894,47,0.776,48,1.426,49,0.984,50,1.231,51,0.466,52,0.029,53,0.507,54,0.344,55,0.466,59,1.305,63,1.764,64,2.098,65,0.755,66,1.141,68,0.6,69,0.553,70,0.714,71,0.386,72,0.313,75,0.597,77,0.972,80,0.842,83,0.757,84,0.878,85,0.278,86,0.425,87,0.714,88,0.945,91,3.542,98,0.65,99,0.911,100,0.911,101,0.65,102,1.054,103,0.65,104,0.911,105,0.553,106,0.65,107,0.553,108,0.65,109,0.553,110,0.911,111,0.553,112,0.386,113,0.911,114,0.65,115,0.553,116,0.65,117,0.972,118,0.65,119,0.553,120,0.553,121,0.65,122,0.553,123,0.714,124,0.65,125,0.553,126,0.65,127,0.553,128,0.65,129,0.553,130,0.65,131,0.65,132,0.553,133,0.6,134,0.65,135,0.65,136,0.65,137,0.018,138,0.018,144,1.329,148,1.933,158,1.231,162,1.432,163,1.325,168,2.626,172,2.423,181,1.451,183,1.659,189,2.626,198,1.933,203,1.378,207,1.496,209,1.656,238,1.933,254,3.542,264,2.506,277,1.536,278,1.787,279,2.098,280,2.073,282,2.769,296,1.536,301,1.095,315,1.536,326,0.945,331,3.542,332,3.542,345,4.091,347,4.434,352,2.21,353,2.156,357,2.098,358,2.098,359,1.536,360,1.656,365,1.656,366,2.506,376,3.137,392,2.769,393,1.496,431,2.21,441,2.769,488,1.656,489,2.098,491,2.894,512,2.443,596,3.881,625,2.506,628,3.1,632,3.542,633,3.542,634,5.074,635,3.881,1071,2.525,1107,2.506,1142,1.63,1168,3.1,1172,2.769,1173,2.525,1174,5.275,1175,3.1,1176,4.213,1177,4.213,1178,4.866,1179,5.275,1180,4.213,1181,3.004,1182,5.275,1183,4.213,1184,3.004,1185,4.213,1186,3.004,1187,3.004,1188,3.004,1189,3.004,1190,3.004,1191,3.004,1192,3.004,1193,3.004,1194,3.004,1195,4.866,1196,5.275,1197,4.213,1198,4.213,1199,4.213,1200,4.213,1201,4.213,1202,4.213,1203,3.542]],["title/components/OrderDetailComponent.html",[0,0.039,119,0.61]],["body/components/OrderDetailComponent.html",[0,0.06,1,0.582,2,0.872,3,0.292,4,0.257,5,0.683,6,0.683,7,0.683,8,0.257,12,0.463,13,1.019,15,0.828,17,0.546,20,0.683,21,1.436,22,1.436,23,0.683,24,0.683,25,0.943,26,0.618,27,0.943,28,0.582,29,0.582,30,0.582,31,0.582,32,1.356,33,0.943,35,0.943,37,0.19,38,0.355,40,0.739,42,1.223,45,0.878,47,0.804,51,0.49,52,0.029,53,0.52,54,0.381,55,0.49,62,1.156,65,0.677,68,0.872,69,0.804,70,0.693,71,0.406,72,0.329,75,0.618,77,1.239,80,0.872,83,0.795,85,0.292,86,0.447,87,0.535,98,0.683,99,0.943,100,0.943,101,0.683,102,1.077,103,0.683,104,0.943,105,0.582,106,0.683,107,0.582,108,0.683,109,0.582,110,0.943,111,0.582,112,0.727,113,0.943,114,0.683,115,0.582,116,0.683,117,0.582,118,0.683,119,0.993,120,0.582,121,0.683,122,0.582,123,0.739,124,0.683,125,0.582,126,0.683,127,0.582,128,0.683,129,0.582,130,0.683,131,0.683,132,0.582,133,0.631,134,0.683,135,0.683,136,0.683,137,0.019,138,0.019,142,1.714,144,1.099,152,1.695,160,2.002,163,1.372,183,1.372,211,0.923,232,2.473,239,1.59,260,1.714,271,1.714,277,1.59,280,1.714,306,1.822,315,1.59,333,3.285,360,2.513,364,1.85,365,2.298,392,2.867,433,2.286,449,1.713,457,1.151,487,2.323,488,2.118,490,3.209,492,3.667,493,3.667,541,1.878,592,3.633,593,2.594,1088,2.867,1094,3.209,1111,3.209,1114,3.718,1115,3.718,1116,3.478,1120,3.543,1148,3.209,1204,3.845,1205,3.845,1206,4.917,1207,4.168,1208,4.161,1209,4.362,1210,4.997,1211,4.362,1212,3.157,1213,5.39,1214,3.157,1215,4.362,1216,3.209,1217,4.362,1218,3.667,1219,3.157,1220,4.362,1221,3.205,1222,4.997,1223,2.075,1224,2.323,1225,2.654,1226,2.654,1227,3.667,1228,4.362]],["title/components/OrderFinishComponent.html",[0,0.039,120,0.61]],["body/components/OrderFinishComponent.html",[0,0.061,1,0.617,2,0.907,3,0.31,4,0.273,5,0.724,6,0.724,7,0.724,8,0.273,12,0.42,13,1.061,15,0.643,17,0.551,20,0.724,21,1.445,22,1.445,23,0.724,24,0.724,25,0.982,26,0.643,27,0.982,28,0.617,29,0.617,30,0.617,31,0.617,33,0.982,35,0.982,37,0.202,38,0.37,40,0.769,41,1.5,42,1.195,43,1.316,44,1.317,45,0.8,47,0.836,49,1.061,50,1.614,51,0.52,52,0.029,53,0.537,54,0.321,55,0.52,57,1.537,62,0.836,64,2.261,65,0.52,66,0.724,68,0.669,69,0.617,70,0.766,71,0.431,72,0.349,75,0.643,77,1.269,80,0.907,84,0.979,85,0.31,86,0.474,87,0.769,88,1.428,92,3.817,98,0.724,99,0.982,100,0.982,101,0.724,102,1.104,103,0.724,104,0.982,105,0.617,106,0.724,107,0.617,108,0.724,109,0.617,110,0.982,111,0.617,112,0.431,113,0.982,114,0.724,115,0.617,116,0.724,117,0.617,118,0.724,119,1.018,120,1.018,121,0.724,122,0.617,123,0.769,124,0.724,125,0.617,126,0.724,127,0.617,128,0.724,129,0.617,130,0.724,131,0.724,132,0.617,133,0.669,134,0.724,135,0.724,136,0.724,137,0.019,138,0.019,162,1.233,181,1.5,183,1.428,238,2.535,271,2.025,306,1.221,326,1.053,333,3.386,353,2.259,359,1.655,360,2.34,365,2.34,403,2.7,427,1.991,433,2.526,449,1.817,452,2.201,457,1.221,470,1.817,473,2.463,491,3.064,588,2.463,1204,3.631,1205,2.201,1221,3.285,1223,2.201,1224,2.463,1229,4.644,1230,2.815,1231,4.541,1232,4.541,1233,4.541,1234,4.541,1235,4.541,1236,4.541,1237,3.348,1238,4.541,1239,4.541,1240,4.541,1241,3.817,1242,3.817,1243,3.341,1244,2.815,1245,3.348,1246,2.463,1247,3.348,1248,3.348,1249,2.815,1250,2.815,1251,3.348,1252,3.348,1253,3.817,1254,4.541,1255,4.541,1256,4.541,1257,3.817,1258,4.541]],["title/components/OrderListComponent.html",[0,0.039,30,0.61]],["body/components/OrderListComponent.html",[0,0.053,1,0.477,2,0.757,3,0.24,4,0.211,5,0.56,6,0.56,7,0.56,8,0.211,12,0.507,13,0.885,15,0.822,17,0.556,20,0.56,21,1.404,22,1.404,23,0.56,24,0.56,25,0.819,26,0.634,27,0.819,28,0.477,29,0.477,30,0.908,31,0.477,32,1.216,33,0.819,35,0.819,37,0.156,38,0.308,40,0.641,41,1.338,42,1.066,44,1.255,45,0.9,47,0.908,48,1.282,50,1.107,51,0.765,52,0.029,53,0.57,54,0.4,55,0.765,59,1.255,62,1.069,63,1.601,64,1.886,65,0.85,66,0.968,68,0.895,69,0.825,70,0.728,71,0.333,72,0.27,75,0.536,77,1.202,78,4.354,80,0.985,83,0.652,84,0.757,85,0.24,86,0.367,87,0.888,88,1.191,98,0.56,99,0.819,100,0.819,101,0.56,102,0.985,103,0.56,104,0.819,105,0.477,106,0.56,107,0.477,108,0.56,109,0.477,110,0.819,111,0.477,112,0.746,113,0.819,114,0.56,115,0.477,116,0.56,117,0.477,118,0.56,119,0.908,120,0.477,121,0.56,122,0.477,123,0.641,124,0.56,125,0.477,126,0.56,127,0.477,128,0.56,129,0.477,130,0.56,131,0.56,132,0.477,133,0.517,134,0.56,135,0.56,136,0.56,137,0.016,138,0.016,144,1.242,146,1.606,148,1.738,151,1.488,152,1.55,154,1.54,160,1.738,162,1.028,181,1.242,183,1.191,211,1.107,231,3.184,239,1.997,260,1.936,271,1.936,277,1.381,278,1.606,301,0.944,306,1.381,315,1.633,355,3.365,357,1.886,358,1.886,360,2.551,365,2.551,370,4.605,376,2.252,407,3.765,421,1.738,430,2.489,433,2.551,449,1.405,450,2.176,457,1.381,488,2.364,512,1.606,541,1.54,571,2.176,593,2.252,625,2.931,1088,3.239,1094,2.786,1114,2.489,1115,1.702,1116,2.252,1119,1.905,1120,2.489,1121,3.184,1122,3.184,1123,3.184,1204,3.89,1205,1.702,1206,3.184,1207,3.954,1208,3.858,1218,3.184,1221,3.577,1223,1.702,1225,3.184,1226,3.184,1243,2.786,1244,2.176,1253,3.184,1257,3.184,1259,4.605,1260,4.605,1261,4.478,1262,4.478,1263,4.478,1264,5.244,1265,3.787,1266,2.589,1267,3.787,1268,3.787,1269,2.589,1270,3.787,1271,2.589,1272,3.787,1273,2.589,1274,3.787,1275,3.787,1276,3.787,1277,2.589,1278,3.787,1279,2.589,1280,2.589,1281,2.589,1282,3.787,1283,2.589,1284,2.589,1285,2.589,1286,3.787,1287,3.787,1288,3.787,1289,3.787]],["title/components/PasswordRecoveryComponent.html",[0,0.039,122,0.61]],["body/components/PasswordRecoveryComponent.html",[0,0.061,1,0.612,2,0.902,3,0.307,4,0.27,5,0.718,6,0.718,7,0.718,8,0.27,12,0.475,13,1.055,15,0.78,17,0.55,20,0.718,21,1.444,22,1.444,23,0.718,24,0.718,25,0.977,26,0.639,27,0.977,28,0.612,29,0.612,30,0.612,31,0.612,32,1.393,33,0.977,35,0.977,37,0.2,38,0.368,40,0.765,41,1.495,42,0.718,45,0.894,47,0.832,49,1.286,51,0.515,52,0.029,53,0.534,54,0.319,55,0.515,58,3.796,59,0.977,65,0.701,66,1.11,70,0.741,71,0.427,72,0.346,75,0.639,77,1.025,80,0.902,83,0.837,85,0.307,86,0.47,87,0.765,88,1.045,98,0.718,99,0.977,100,0.977,101,0.718,102,1.1,103,0.718,104,0.977,105,0.612,106,0.718,107,0.612,108,0.718,109,0.612,110,0.977,111,0.612,112,0.427,113,0.977,114,0.718,115,0.612,116,0.718,117,0.612,118,0.718,119,0.612,120,0.612,121,0.718,122,1.014,123,1.047,124,0.718,125,0.612,126,0.718,127,0.612,128,0.718,129,0.612,130,0.718,131,0.718,132,0.612,133,0.664,134,0.718,135,0.718,136,0.718,137,0.019,138,0.019,146,1.915,168,2.741,172,2.555,177,2.987,178,2.45,180,3.322,181,1.387,183,1.42,188,2.45,189,2.741,198,2.072,199,1.802,203,1.524,207,1.654,209,1.774,210,1.802,211,0.971,221,2.072,222,2.45,326,1.045,352,2.443,353,2.215,354,2.987,359,1.646,371,3.322,393,1.654,398,3.77,417,3.472,425,4.051,470,1.802,491,3.051,509,3.322,512,1.915,514,3.796,1107,2.685,1142,1.802,1170,2.685,1171,3.796,1172,2.968,1203,4.993,1290,4.37,1291,4.993,1292,2.792,1293,5.758,1294,4.516,1295,4.516,1296,4.516,1297,5.131,1298,5.506,1299,4.516,1300,3.321,1301,3.321,1302,2.443,1303,3.321,1304,2.792,1305,3.321,1306,2.443,1307,3.321,1308,2.792,1309,3.321]],["title/components/PasswordResetComponent.html",[0,0.039,125,0.61]],["body/components/PasswordResetComponent.html",[0,0.07,1,0.799,2,1.074,3,0.402,4,0.353,5,0.938,6,0.938,7,0.938,8,0.353,20,0.938,21,1.479,22,1.479,23,0.938,24,0.938,25,1.162,26,0.761,27,0.938,28,0.799,29,0.799,30,0.799,31,0.799,33,1.162,35,1.162,52,0.029,53,0.559,70,0.558,71,0.558,72,0.452,75,0.761,77,1.166,80,1.074,85,0.402,86,0.615,98,0.938,99,1.162,100,1.162,101,0.938,102,1.219,103,0.938,104,1.162,105,0.799,106,0.938,107,0.799,108,0.938,109,0.799,110,1.162,111,0.799,112,0.558,113,1.162,114,0.938,115,0.799,116,0.938,117,0.799,118,0.938,119,0.799,120,0.799,121,0.938,122,0.799,123,1.124,124,0.938,125,1.124,126,0.938,127,0.799,128,0.938,129,0.799,130,0.938,131,0.938,132,0.799,133,0.867,134,0.938,135,0.938,136,0.938,137,0.023,138,0.023,1290,3.192,1310,3.648,1311,3.648,1312,6.099,1313,5.373,1314,5.373,1315,5.373]],["title/components/PaymentComponent.html",[0,0.039,127,0.61]],["body/components/PaymentComponent.html",[0,0.06,1,0.589,2,0.879,3,0.296,4,0.26,5,0.691,6,0.691,7,0.691,8,0.26,12,0.466,13,1.371,15,0.767,17,0.557,20,0.691,21,1.438,22,1.438,23,0.691,24,0.691,25,0.951,26,0.712,27,0.951,28,0.589,29,0.589,30,0.589,31,0.589,32,1.365,33,0.951,35,0.951,37,0.193,38,0.358,40,0.745,41,1.471,42,0.951,43,1.256,44,1.301,45,0.841,47,0.81,48,1.489,49,1.027,50,1.716,51,0.496,52,0.029,53,0.524,54,0.311,55,0.496,57,1.489,59,0.951,65,0.682,66,0.951,68,0.639,69,0.589,70,0.697,71,0.411,72,0.333,75,0.623,77,1.005,80,0.879,83,0.805,84,0.934,85,0.296,86,0.453,87,0.745,88,1.383,98,0.691,99,0.951,100,0.951,101,0.691,102,1.083,103,0.691,104,0.951,105,0.589,106,0.691,107,0.589,108,0.691,109,0.589,110,0.951,111,0.589,112,0.411,113,0.951,114,0.691,115,0.589,116,0.691,117,0.589,118,0.691,119,0.589,120,0.589,121,0.691,122,0.589,123,0.745,124,0.691,125,0.589,126,0.691,127,0.998,128,0.691,129,0.589,130,0.691,131,0.691,132,0.589,133,0.639,134,0.691,135,0.691,136,0.691,137,0.019,138,0.019,144,1.108,146,1.866,162,1.194,163,1.704,181,1.365,183,1.383,187,3.697,253,2.386,271,1.976,277,1.603,278,1.866,280,1.728,296,1.603,306,1.165,315,1.603,326,1.005,353,2.234,359,1.603,360,2.129,365,1.728,392,2.891,393,2.19,403,3.222,457,1.165,470,1.734,509,3.236,588,2.351,725,3.986,1242,3.697,1243,3.236,1246,2.351,1249,2.686,1250,2.686,1316,2.686,1317,5.418,1318,5.386,1319,4.398,1320,4.398,1321,4.398,1322,5.029,1323,5.418,1324,4.398,1325,3.196,1326,4.398,1327,4.398,1328,4.398,1329,5.418,1330,5.418,1331,3.697,1332,3.196,1333,4.398,1334,4.398,1335,4.398,1336,4.398,1337,5.418,1338,3.196,1339,2.686,1340,4.398,1341,3.196,1342,3.196,1343,4.398,1344,3.196,1345,3.196,1346,4.398,1347,5.418,1348,4.398,1349,4.398]],["title/components/RegistrationFormComponent.html",[0,0.039,129,0.61]],["body/components/RegistrationFormComponent.html",[0,0.053,1,0.464,2,0.741,3,0.233,4,0.205,5,0.544,6,0.544,7,0.544,8,0.205,12,0.408,13,0.867,17,0.541,20,0.544,21,1.399,22,1.399,23,0.544,24,0.544,25,0.802,26,0.525,27,0.802,28,0.464,29,0.464,30,0.464,31,0.464,32,1.196,33,0.802,35,0.802,37,0.152,38,0.302,40,0.628,41,1.32,42,1.051,44,1.245,45,0.927,47,0.955,48,1.256,50,1.084,51,0.391,52,0.029,53,0.459,54,0.262,55,0.391,62,0.464,63,1.639,65,0.576,66,1.051,70,0.721,71,0.324,72,0.262,75,0.525,77,0.88,80,0.741,83,0.634,84,0.736,85,0.233,86,0.356,87,0.746,88,1.386,97,3.225,98,0.544,99,0.802,100,0.802,101,0.544,102,0.971,103,0.544,104,0.802,105,0.464,106,0.544,107,0.464,108,0.544,109,0.464,110,0.802,111,0.464,112,0.324,113,0.802,114,0.544,115,0.464,116,0.544,117,0.464,118,0.544,119,0.464,120,0.464,121,0.544,122,0.464,123,0.918,124,0.544,125,0.464,126,0.544,127,0.464,128,0.544,129,0.896,130,1.213,131,0.544,132,0.464,133,0.503,134,0.544,135,0.544,136,0.544,137,0.016,138,0.016,144,1.225,146,1.574,148,1.155,158,1.717,168,2.926,172,2.194,173,3.241,177,2.638,178,2.013,181,1.366,185,3.119,188,2.013,189,2.421,198,2.573,199,2.013,200,1.852,201,1.852,202,1.654,203,1.155,204,2.891,206,1.654,209,2.204,210,2.942,211,1.585,221,2.742,222,3.327,224,3.225,225,2.7,226,3.927,227,3.565,228,3.196,232,1.702,237,3.119,271,2.262,296,0.918,301,0.918,326,0.792,353,2.098,354,3.043,357,1.847,358,1.847,359,1.352,363,3.423,393,1.253,397,2.638,403,2.206,416,2.891,417,3.242,420,2.891,421,2.867,424,2.891,470,1.366,512,1.574,583,1.654,585,1.852,682,3.119,753,3.577,809,4.087,953,4.087,1108,2.116,1142,1.366,1158,1.852,1160,2.116,1168,4.511,1170,2.206,1172,2.438,1216,4.596,1241,4.087,1302,1.852,1304,2.116,1306,1.852,1350,5.094,1351,5.094,1352,2.116,1353,5.423,1354,3.71,1355,3.71,1356,3.71,1357,4.406,1358,4.862,1359,2.517,1360,3.71,1361,2.517,1362,3.71,1363,3.71,1364,3.119,1365,2.517,1366,2.116,1367,2.517,1368,2.116,1369,2.517,1370,2.517,1371,2.517,1372,2.517,1373,2.517,1374,2.517,1375,3.241,1376,1.852,1377,2.517,1378,3.704,1379,3.119,1380,2.517,1381,3.71,1382,3.71,1383,2.517,1384,2.517,1385,2.517,1386,2.517,1387,2.517,1388,2.517,1389,2.517,1390,2.517,1391,2.517,1392,2.517,1393,2.517,1394,2.517,1395,2.517,1396,2.517,1397,2.517,1398,2.517,1399,2.517,1400,2.517,1401,2.116,1402,1.852,1403,2.517,1404,2.517,1405,2.517,1406,5.023,1407,5.023,1408,5.023,1409,4.087,1410,4.862,1411,4.862,1412,4.862,1413,4.862,1414,3.71,1415,3.71,1416,3.119]],["title/interfaces/ShoppingCart.html",[139,1.404,433,1.404]],["body/interfaces/ShoppingCart.html",[3,0.388,4,0.341,8,0.341,12,0.487,17,0.543,37,0.253,38,0.428,52,0.029,54,0.447,59,1.137,62,1.216,63,1.537,70,0.676,85,0.388,112,0.775,137,0.022,138,0.022,139,1.778,140,2.493,142,2.367,144,1.325,145,3.456,147,3.127,151,2.367,152,2.099,154,3.583,156,3.127,157,2.23,160,2.413,162,1.719,232,2.413,239,1.917,296,1.917,360,2.488,365,2.553,427,3.765,430,3.456,431,4.432,433,2.23,451,3.084,452,2.755,488,2.066,502,3.96,600,3.127,1088,3.96,1175,3.869,1207,3.456,1417,3.524,1418,3.524,1419,4.421,1420,6.025,1421,5.259,1422,4.421,1423,5.259,1424,5.259,1425,5.259,1426,4.192]],["title/components/ShoppingCartComponent.html",[0,0.039,132,0.61]],["body/components/ShoppingCartComponent.html",[0,0.058,1,0.548,2,0.836,3,0.275,4,0.242,5,0.643,6,0.643,7,0.643,8,0.242,12,0.448,13,0.977,15,0.784,17,0.545,20,0.643,21,1.427,22,1.427,23,0.643,24,0.643,25,0.904,26,0.685,27,0.904,28,0.548,29,0.548,30,0.548,31,0.548,32,1.313,33,0.904,35,0.904,37,0.179,38,0.341,40,0.708,41,1.425,42,1.135,43,1.168,44,1.275,45,0.891,48,1.416,49,0.977,50,1.534,51,0.461,52,0.029,53,0.504,54,0.371,55,0.461,57,1.006,59,1.241,62,1.109,64,2.614,65,0.649,66,1.046,68,0.967,69,0.891,70,0.712,71,0.382,72,0.31,75,0.592,77,0.967,80,0.836,83,0.749,84,0.869,85,0.275,86,0.421,87,0.708,88,1.316,98,0.643,99,0.904,100,0.904,101,0.643,102,1.049,103,0.643,104,0.904,105,0.548,106,0.643,107,0.548,108,0.643,109,0.548,110,0.904,111,0.548,112,0.382,113,0.904,114,0.643,115,0.548,116,0.643,117,0.548,118,0.643,119,0.548,120,0.548,121,0.643,122,0.548,123,0.708,124,0.643,125,0.548,126,0.643,127,0.548,128,0.643,129,0.548,130,0.643,131,0.643,132,0.967,133,1.178,134,0.643,135,0.643,136,0.643,137,0.018,138,0.018,144,0.749,152,1.316,160,1.919,162,1.425,163,1.316,170,3.077,181,1.323,183,1.316,238,1.919,253,2.269,260,1.643,265,3.516,277,1.525,278,1.774,279,2.082,280,1.643,282,1.954,306,1.764,315,1.525,326,0.935,333,3.18,353,2.194,359,1.525,360,2.487,364,1.774,365,2.437,376,2.487,402,3.516,433,2.434,449,1.613,457,1.525,592,3.413,593,2.487,600,1.768,1103,2.499,1107,1.768,1109,2.499,1111,3.077,1114,3.637,1115,3.637,1116,3.413,1120,2.749,1148,3.077,1175,3.077,1207,4.121,1208,3.56,1221,1.768,1223,1.954,1224,2.187,1227,3.516,1246,2.187,1318,4.414,1331,3.516,1422,3.516,1427,4.957,1428,4.957,1429,2.499,1430,4.182,1431,4.182,1432,4.182,1433,4.182,1434,4.839,1435,5.251,1436,4.182,1437,4.182,1438,2.973,1439,4.182,1440,2.973,1441,4.182,1442,2.973,1443,4.182,1444,4.182,1445,2.973,1446,2.973,1447,2.973,1448,2.973,1449,2.973,1450,2.973,1451,2.973]],["title/injectables/ShoppingCartService.html",[249,1.207,355,1.968]],["body/injectables/ShoppingCartService.html",[3,0.261,4,0.23,8,0.23,12,0.538,15,0.913,17,0.556,26,0.4,37,0.283,38,0.328,40,0.683,42,1.017,45,0.876,47,0.743,49,1.198,51,0.842,52,0.03,53,0.565,54,0.399,55,0.842,57,1.737,59,1.11,62,0.945,63,1.832,64,2.008,65,0.901,68,0.564,69,0.52,70,0.66,71,0.363,72,0.294,85,0.261,86,0.4,87,0.984,137,0.017,138,0.017,142,1.584,148,2.354,152,2.017,154,3.532,157,2.602,162,1.277,163,1.268,181,1.422,207,1.406,211,1.649,230,2.555,239,1.47,249,1.47,251,1.532,253,2.784,260,2.334,261,2.65,270,4.313,271,2.217,275,2.65,276,1.856,277,1.47,278,1.995,279,1.406,280,1.848,281,2.65,284,3.904,298,1.679,299,1.532,301,1.871,302,2.65,304,1.856,305,2.077,306,1.029,315,1.47,338,3.39,355,2.398,360,2.547,363,2.398,364,2.176,365,2.534,366,1.679,369,3.567,372,1.856,379,2.967,399,3.39,421,1.296,427,1.679,433,2.72,448,2.373,449,1.532,451,2.077,452,1.856,457,1.029,473,2.967,488,1.584,489,2.555,507,2.892,515,2.373,546,3.372,600,2.398,625,2.398,1075,2.077,1080,2.967,1221,3.356,1259,4.744,1260,3.39,1339,3.39,1452,4.883,1453,2.373,1454,4.032,1455,4.704,1456,4.032,1457,4.032,1458,4.032,1459,2.823,1460,4.032,1461,4.032,1462,4.032,1463,4.032,1464,5.427,1465,2.823,1466,4.032,1467,2.823,1468,5.131,1469,4.032,1470,2.823,1471,4.032,1472,4.032,1473,2.823,1474,4.704,1475,3.39,1476,4.032,1477,2.823,1478,4.032,1479,2.823,1480,2.823,1481,2.823,1482,2.823,1483,2.823,1484,4.032,1485,2.823,1486,4.032,1487,2.823,1488,2.823,1489,2.823,1490,4.704,1491,4.032,1492,2.823,1493,4.704,1494,2.823,1495,4.032,1496,2.823,1497,2.823,1498,2.823,1499,2.823,1500,4.032,1501,4.032,1502,4.032,1503,2.823,1504,2.823,1505,2.823,1506,2.823,1507,2.823,1508,2.823]],["title/interfaces/User.html",[72,0.345,139,1.404]],["body/interfaces/User.html",[3,0.388,4,0.341,8,0.341,12,0.388,15,0.813,17,0.468,37,0.252,38,0.428,52,0.029,54,0.459,59,1.136,61,3.454,62,1.234,63,1.965,67,2.3,72,0.547,85,0.388,123,1.02,137,0.022,138,0.022,139,1.776,140,2.49,142,2.256,143,3.081,145,2.752,149,2.752,151,2.366,152,1.806,157,2.229,158,1.76,162,1.718,163,1.653,225,2.616,232,2.411,277,2.094,282,3.454,397,3.267,398,3.125,416,3.581,417,3.267,420,3.125,422,3.866,423,3.866,424,3.581,1419,4.417,1509,3.52,1510,4.188,1511,5.062,1512,5.062,1513,5.255,1514,5.255,1515,4.417,1516,5.255,1517,5.255,1518,5.255]],["title/components/UserManagementComponent.html",[0,0.039,28,0.61]],["body/components/UserManagementComponent.html",[0,0.057,1,0.543,2,0.831,3,0.273,4,0.24,5,0.638,6,0.638,7,0.638,8,0.24,11,1.938,12,0.446,13,0.971,17,0.55,20,0.638,21,1.426,22,1.426,23,0.638,24,1.042,25,0.899,26,0.589,27,0.899,28,0.964,29,0.543,30,0.543,31,0.543,32,1.308,33,0.899,34,3.06,35,0.899,36,3.06,37,0.178,38,0.339,40,0.704,41,1.42,42,1.042,43,1.159,44,1.272,45,0.948,47,1.055,48,1.408,49,0.971,50,1.529,51,0.458,52,0.029,53,0.502,54,0.34,55,0.458,56,2.479,57,0.998,63,1.847,65,0.645,66,1.042,68,0.589,69,0.543,70,0.736,71,0.379,72,0.658,73,4.554,75,0.589,77,0.963,80,0.831,83,0.743,84,0.862,85,0.273,86,0.418,87,0.499,97,3.111,98,0.638,99,0.899,100,0.899,101,0.638,102,1.045,103,0.638,104,0.899,105,0.543,106,0.638,107,0.543,108,0.638,109,0.543,110,0.899,111,0.543,112,0.379,113,0.899,114,0.638,115,0.543,116,0.638,117,0.543,118,0.638,119,0.543,120,0.543,121,0.638,122,0.543,123,0.704,124,0.638,125,0.543,126,0.638,127,0.543,128,0.638,129,0.543,130,0.638,131,0.638,132,0.543,133,0.589,134,0.638,135,0.638,136,0.638,137,0.018,138,0.018,146,2.219,148,1.908,158,1.673,168,2.991,172,2.399,173,3.544,177,2.839,178,2.256,181,1.048,183,1.646,188,2.256,189,2.605,198,1.353,199,1.6,200,2.17,201,2.17,202,1.938,203,1.353,204,2.865,206,1.938,207,1.468,209,2.056,210,2.614,211,1.529,221,2.627,222,3.106,224,3.111,225,2.605,226,3.439,227,3.439,238,1.908,276,1.938,397,2.614,416,3.111,417,3.359,420,3.111,421,2.401,424,3.111,512,1.764,546,3.167,602,4.812,753,3.849,1142,1.6,1158,2.17,1170,2.473,1216,3.849,1302,2.17,1306,2.17,1366,2.479,1368,2.479,1378,3.496,1379,3.496,1406,4.398,1407,4.398,1408,4.398,1416,3.496,1519,5.204,1520,4.818,1521,4.818,1522,4.159,1523,2.949,1524,2.949,1525,2.949,1526,2.949,1527,2.949,1528,2.949,1529,2.949,1530,2.949,1531,2.949,1532,2.949,1533,2.949,1534,2.949,1535,2.949,1536,2.949,1537,2.949,1538,2.949,1539,2.949,1540,2.949,1541,2.949,1542,5.232,1543,2.949]],["title/injectables/UserService.html",[249,1.207,354,1.796]],["body/injectables/UserService.html",[3,0.242,4,0.213,8,0.213,12,0.487,15,0.875,17,0.519,19,2.268,26,0.804,37,0.23,38,0.311,40,0.646,45,0.853,47,1.072,49,0.891,51,0.768,52,0.029,53,0.516,54,0.372,55,0.768,59,1.258,61,2.507,62,1.013,63,1.935,65,0.903,66,0.565,67,2.23,68,0.522,69,0.482,70,0.491,71,0.336,72,0.679,85,0.242,86,0.37,87,0.985,123,1.065,137,0.016,138,0.016,142,2.286,144,1.247,146,2.1,148,2.272,149,3.254,151,2.369,158,1.762,162,1.579,163,2.027,170,2.806,211,1.7,219,3.207,221,1.75,239,2.004,249,1.391,251,1.418,253,3.352,260,2.369,261,3.254,263,3.207,264,2.268,271,2.286,275,2.507,277,2.004,278,1.618,279,1.899,280,2.369,281,3.254,284,3.254,290,2.806,296,2.004,298,1.555,299,1.418,301,1.391,302,2.507,304,1.718,305,2.806,306,0.953,315,1.642,354,2.07,375,3.207,397,3.315,398,2.944,416,3.528,417,3.437,420,2.268,421,1.75,422,2.806,423,2.806,424,3.528,441,3.613,445,2.198,457,1.391,546,3.254,620,3.254,625,2.268,626,3.207,1080,1.923,1105,4.621,1401,4.621,1402,3.642,1409,3.207,1475,3.207,1511,4.162,1512,4.162,1515,3.207,1544,2.198,1545,3.815,1546,4.504,1547,3.815,1548,3.815,1549,4.951,1550,3.815,1551,3.815,1552,3.815,1553,2.614,1554,3.815,1555,2.614,1556,4.951,1557,3.815,1558,5.497,1559,3.815,1560,4.951,1561,3.815,1562,3.815,1563,3.815,1564,3.815,1565,2.614,1566,3.815,1567,3.815,1568,2.614,1569,3.815,1570,3.815,1571,3.815,1572,3.815,1573,2.614,1574,3.815,1575,3.815,1576,4.504,1577,3.207,1578,3.815,1579,3.815,1580,3.815,1581,4.951,1582,3.815,1583,3.815,1584,2.614,1585,2.614,1586,4.504,1587,2.614,1588,2.614,1589,2.614,1590,2.614,1591,2.614,1592,2.614,1593,2.614,1594,2.614,1595,2.614,1596,2.614,1597,2.614,1598,2.614,1599,3.815,1600,2.614,1601,2.614,1602,2.614,1603,2.614,1604,2.614,1605,2.614]],["title/coverage.html",[1606,3.787]],["body/coverage.html",[0,0.081,1,0.737,8,0.326,9,3.361,10,3.361,11,3.694,28,0.737,29,0.737,30,0.737,31,0.737,44,0.865,52,0.029,54,0.283,72,0.416,73,2.941,75,0.566,76,2.941,78,2.941,81,2.941,105,0.737,107,0.737,109,0.737,111,0.737,112,0.514,115,0.737,117,0.737,119,0.737,120,0.737,122,0.737,125,0.737,127,0.737,129,0.737,132,0.737,137,0.022,138,0.022,139,2.512,141,3.361,165,3.754,166,2.941,167,3.361,204,2.377,205,2.628,209,1.571,238,2.342,249,2.23,250,2.628,252,3.361,306,1.458,318,3.361,328,3.361,354,2.169,355,2.377,433,1.696,485,3.754,486,3.361,487,3.754,507,1.991,599,3.361,611,3.361,945,5.259,998,3.361,1084,3.361,1117,3.361,1118,3.361,1119,3.754,1149,3.361,1173,3.361,1204,3.694,1205,2.628,1229,3.361,1230,3.361,1290,3.754,1291,3.361,1292,3.361,1310,3.361,1311,3.361,1316,3.361,1350,3.361,1351,3.361,1352,3.361,1375,2.941,1376,2.941,1417,3.361,1418,3.361,1427,3.361,1428,3.361,1429,3.361,1452,3.361,1453,3.361,1509,3.361,1519,3.361,1544,3.361,1606,3.361,1607,3.998,1608,3.998,1609,3.998,1610,6.888,1611,5.621,1612,6.358,1613,3.361,1614,3.361,1615,3.361,1616,3.361,1617,3.361,1618,6.437,1619,5.621,1620,3.998,1621,5.103,1622,3.998,1623,4.978,1624,5.921,1625,3.998,1626,3.998,1627,3.998]],["title/dependencies.html",[1628,2.038,1629,3.343]],["body/dependencies.html",[52,0.029,71,0.654,83,1.28,137,0.025,138,0.025,203,2.332,326,1.599,446,4.273,1629,4.273,1630,5.083,1631,6.726,1632,5.083,1633,5.908,1634,5.908,1635,5.083,1636,5.083,1637,5.083,1638,5.083,1639,5.083,1640,5.083,1641,5.083,1642,5.083]],["title/miscellaneous/enumerations.html",[1643,1.503,1644,3.343]],["body/miscellaneous/enumerations.html",[37,0.311,52,0.028,69,1.21,137,0.025,138,0.025,427,3.544,1308,5.01,1643,2.8,1644,4.338,1645,5.16,1646,5.96,1647,5.16,1648,5.96,1649,5.96,1650,5.96,1651,5.96]],["title/miscellaneous/functions.html",[1643,1.503,1652,3.343]],["body/miscellaneous/functions.html",[12,0.43,15,0.884,17,0.379,37,0.28,47,0.857,51,0.721,52,0.028,53,0.484,54,0.329,55,0.721,59,1.005,65,0.969,67,2.114,137,0.024,138,0.024,159,2.765,162,1.695,198,2.866,202,4.105,204,3.577,205,3.954,224,3.333,227,3.056,232,2.133,260,2.454,271,2.202,296,2.277,363,3.333,398,3.577,421,2.133,620,4.105,1170,2.765,1364,4.711,1375,4.426,1376,4.123,1623,3.909,1643,2.523,1652,3.909,1653,6.245,1654,5.604,1655,4.649,1656,4.649,1657,4.649,1658,4.649,1659,4.649,1660,4.649,1661,4.649,1662,4.649,1663,4.649,1664,4.649,1665,4.649,1666,4.649,1667,5.604,1668,4.649,1669,4.649,1670,4.649,1671,4.649,1672,4.649,1673,4.649,1674,4.649,1675,4.649]],["title/index.html",[37,0.167,1676,2.77,1677,2.77]],["body/index.html",[0,0.072,4,0.381,52,0.024,53,0.488,137,0.024,138,0.024,209,1.841,286,3.938,323,3.938,717,3.938,759,3.938,802,5.468,1577,3.938,1628,3.446,1678,5.63,1679,4.685,1680,6.035,1681,6.035,1682,3.938,1683,4.685,1684,4.685,1685,5.63,1686,6.405,1687,6.577,1688,4.685,1689,4.685,1690,4.685,1691,4.685,1692,4.685,1693,4.685,1694,4.685,1695,4.685,1696,4.685,1697,4.685,1698,4.685,1699,6.035,1700,6.035,1701,4.685,1702,6.261,1703,4.685,1704,4.685,1705,4.685,1706,4.685,1707,5.63,1708,5.63,1709,6.261,1710,4.685,1711,5.63,1712,5.63,1713,4.685,1714,4.685,1715,4.685,1716,4.685,1717,5.63,1718,4.685,1719,4.685,1720,4.685,1721,4.685,1722,6.035,1723,4.685,1724,4.685,1725,4.685,1726,3.446,1727,4.685,1728,4.685]],["title/modules.html",[1729,3.787]],["body/modules.html",[52,0.026,137,0.026,138,0.026,1729,4.514]],["title/overview.html",[1726,3.314]],["body/overview.html",[2,1.064,52,0.026,97,3.166,137,0.026,138,0.026,140,3.166,251,2.888,725,3.916,787,4.475,1726,3.916]],["title/properties.html",[38,0.324,1628,2.038]],["body/properties.html",[38,0.435,52,0.027,137,0.026,138,0.026,1682,4.494,1730,5.346]],["title/miscellaneous/variables.html",[1157,2.926,1643,1.503]],["body/miscellaneous/variables.html",[15,0.69,17,0.469,26,0.816,37,0.294,44,1.054,52,0.029,54,0.407,57,1.651,59,1.054,63,1.425,68,1.152,69,1.062,137,0.024,138,0.024,163,1.534,184,4.099,211,1.685,280,1.916,301,2.102,315,1.777,353,1.777,600,2.899,620,3.205,1128,4.099,1150,4.099,1157,3.587,1402,3.587,1613,4.099,1614,5.16,1615,4.099,1616,4.846,1617,4.846,1643,2.645,1731,4.876,1732,4.876,1733,4.876,1734,4.876,1735,4.876,1736,4.876,1737,4.876,1738,5.765,1739,4.876,1740,4.876,1741,4.876,1742,4.876,1743,4.876]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":306,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1730,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["0665",{"_index":1042,"title":{},"body":{"injectables/CardItemService.html":{}}}],["07f490ab46be.jpg?1690004795",{"_index":846,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0d24",{"_index":780,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0ef8a7f636ae.jpg?1665343456",{"_index":967,"title":{},"body":{"injectables/CardItemService.html":{}}}],["0f2d5d623b9c.jpg?1676913289",{"_index":1065,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1",{"_index":284,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["1/+1",{"_index":741,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1/1",{"_index":945,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["10",{"_index":788,"title":{},"body":{"injectables/CardItemService.html":{}}}],["100",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["100960c55891.jpg?1650599698",{"_index":672,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11",{"_index":868,"title":{},"body":{"injectables/CardItemService.html":{}}}],["114",{"_index":974,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11908477e9f8.jpg?1631051073",{"_index":1028,"title":{},"body":{"injectables/CardItemService.html":{}}}],["11b6",{"_index":746,"title":{},"body":{"injectables/CardItemService.html":{}}}],["12",{"_index":884,"title":{},"body":{"injectables/CardItemService.html":{}}}],["120",{"_index":727,"title":{},"body":{"injectables/CardItemService.html":{}}}],["123",{"_index":287,"title":{},"body":{"injectables/AddressService.html":{}}}],["13",{"_index":906,"title":{},"body":{"injectables/CardItemService.html":{}}}],["139",{"_index":958,"title":{},"body":{"injectables/CardItemService.html":{}}}],["13e9",{"_index":828,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14",{"_index":921,"title":{},"body":{"injectables/CardItemService.html":{}}}],["14/14",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["143",{"_index":874,"title":{},"body":{"injectables/CardItemService.html":{}}}],["15",{"_index":813,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1579f338f232.jpg?1689995727",{"_index":808,"title":{},"body":{"injectables/CardItemService.html":{}}}],["16",{"_index":953,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["160",{"_index":772,"title":{},"body":{"injectables/CardItemService.html":{}}}],["161",{"_index":752,"title":{},"body":{"injectables/CardItemService.html":{}}}],["169",{"_index":835,"title":{},"body":{"injectables/CardItemService.html":{}}}],["17",{"_index":968,"title":{},"body":{"injectables/CardItemService.html":{}}}],["171",{"_index":849,"title":{},"body":{"injectables/CardItemService.html":{}}}],["179",{"_index":923,"title":{},"body":{"injectables/CardItemService.html":{}}}],["18",{"_index":787,"title":{},"body":{"injectables/CardItemService.html":{},"overview.html":{}}}],["18.0.0",{"_index":1631,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":1683,"title":{},"body":{"index.html":{}}}],["19",{"_index":1007,"title":{},"body":{"injectables/CardItemService.html":{}}}],["197",{"_index":643,"title":{},"body":{"injectables/CardItemService.html":{}}}],["199",{"_index":1011,"title":{},"body":{"injectables/CardItemService.html":{}}}],["1f9c",{"_index":805,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2",{"_index":290,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["2.3.0",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":998,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["20",{"_index":682,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["2021",{"_index":873,"title":{},"body":{"injectables/CardItemService.html":{}}}],["203",{"_index":942,"title":{},"body":{"injectables/CardItemService.html":{}}}],["205e",{"_index":1025,"title":{},"body":{"injectables/CardItemService.html":{}}}],["21",{"_index":1046,"title":{},"body":{"injectables/CardItemService.html":{}}}],["216",{"_index":910,"title":{},"body":{"injectables/CardItemService.html":{}}}],["22/22",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":1049,"title":{},"body":{"injectables/CardItemService.html":{}}}],["229",{"_index":681,"title":{},"body":{"injectables/CardItemService.html":{}}}],["23d3",{"_index":917,"title":{},"body":{"injectables/CardItemService.html":{}}}],["244",{"_index":710,"title":{},"body":{"injectables/CardItemService.html":{}}}],["245798d840d2.jpg?1594736944",{"_index":936,"title":{},"body":{"injectables/CardItemService.html":{}}}],["26b61357711d.jpg?1682209507",{"_index":783,"title":{},"body":{"injectables/CardItemService.html":{}}}],["28741131f313.jpg?1712354624",{"_index":952,"title":{},"body":{"injectables/CardItemService.html":{}}}],["2c45",{"_index":880,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3",{"_index":648,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3",{"_index":929,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3/3.\\n",{"_index":662,"title":{},"body":{"injectables/CardItemService.html":{}}}],["30",{"_index":645,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3213",{"_index":864,"title":{},"body":{"injectables/CardItemService.html":{}}}],["365c7fe4a5d6.jpg?1572490333",{"_index":749,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3835",{"_index":1062,"title":{},"body":{"injectables/CardItemService.html":{}}}],["39",{"_index":1033,"title":{},"body":{"injectables/CardItemService.html":{}}}],["3cba71c50ea5.jpg?1709218862",{"_index":994,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4",{"_index":725,"title":{},"body":{"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["4/4",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":1343,"title":{},"body":{"components/PaymentComponent.html":{}}}],["4138",{"_index":829,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4350",{"_index":1063,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4421",{"_index":747,"title":{},"body":{"injectables/CardItemService.html":{}}}],["448f",{"_index":1043,"title":{},"body":{"injectables/CardItemService.html":{}}}],["44ce",{"_index":918,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4518",{"_index":806,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4680",{"_index":903,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4795",{"_index":881,"title":{},"body":{"injectables/CardItemService.html":{}}}],["47ce",{"_index":865,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4862",{"_index":844,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4884",{"_index":722,"title":{},"body":{"injectables/CardItemService.html":{}}}],["488b",{"_index":1026,"title":{},"body":{"injectables/CardItemService.html":{}}}],["49fa",{"_index":670,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a3d",{"_index":950,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4a64",{"_index":934,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d25",{"_index":705,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4d71",{"_index":767,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4df2",{"_index":965,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4e2c",{"_index":1004,"title":{},"body":{"injectables/CardItemService.html":{}}}],["4ea7",{"_index":781,"title":{},"body":{"injectables/CardItemService.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["5.3.3",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":753,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["5552",{"_index":669,"title":{},"body":{"injectables/CardItemService.html":{}}}],["56cb",{"_index":704,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6",{"_index":730,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6/6",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":891,"title":{},"body":{"injectables/CardItemService.html":{}}}],["6e51a8b07e4f.jpg?1572490640",{"_index":867,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7",{"_index":728,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7.8.0",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["7295",{"_index":721,"title":{},"body":{"injectables/CardItemService.html":{}}}],["73",{"_index":812,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7a4f1b60900d.jpg?1650599829",{"_index":707,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7e73",{"_index":843,"title":{},"body":{"injectables/CardItemService.html":{}}}],["7f9c",{"_index":766,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8",{"_index":809,"title":{},"body":{"injectables/CardItemService.html":{},"components/RegistrationFormComponent.html":{}}}],["8c01",{"_index":1064,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8cbf",{"_index":723,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8daf",{"_index":768,"title":{},"body":{"injectables/CardItemService.html":{}}}],["8f2b",{"_index":706,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9",{"_index":754,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9/9",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["9000",{"_index":964,"title":{},"body":{"injectables/CardItemService.html":{}}}],["901f89b8f290.jpg?1594736606",{"_index":883,"title":{},"body":{"injectables/CardItemService.html":{}}}],["930d",{"_index":1027,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9475",{"_index":993,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94cd",{"_index":935,"title":{},"body":{"injectables/CardItemService.html":{}}}],["94d3",{"_index":882,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9798",{"_index":1005,"title":{},"body":{"injectables/CardItemService.html":{}}}],["99e9",{"_index":748,"title":{},"body":{"injectables/CardItemService.html":{}}}],["9eb7",{"_index":671,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a015",{"_index":866,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a23f",{"_index":807,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a333",{"_index":933,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a628",{"_index":919,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a68f",{"_index":904,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a70e",{"_index":902,"title":{},"body":{"injectables/CardItemService.html":{}}}],["a818",{"_index":966,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abierto",{"_index":1648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["abilities",{"_index":655,"title":{},"body":{"injectables/CardItemService.html":{}}}],["abordar",{"_index":1545,"title":{},"body":{"injectables/UserService.html":{}}}],["abstractcontrol",{"_index":200,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ac83",{"_index":951,"title":{},"body":{"injectables/CardItemService.html":{}}}],["accessors",{"_index":178,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["accion",{"_index":512,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["acciones",{"_index":1517,"title":{},"body":{"interfaces/User.html":{}}}],["account",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["acion",{"_index":187,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/PaymentComponent.html":{}}}],["aclcular",{"_index":1272,"title":{},"body":{"components/OrderListComponent.html":{}}}],["activatedroute",{"_index":1126,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["activo",{"_index":1243,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{}}}],["actual",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["actualizacion",{"_index":283,"title":{},"body":{"injectables/AddressService.html":{}}}],["actualizado",{"_index":276,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["actualizados",{"_index":1475,"title":{},"body":{"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["actualizar",{"_index":546,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":759,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["additem",{"_index":1124,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additem(cardid",{"_index":1129,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["additemresult",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemresult[1",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["additemtoshoppingcart(cardid",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["additemtoshoppingcart(userid",{"_index":1463,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addition",{"_index":840,"title":{},"body":{"injectables/CardItemService.html":{}}}],["additional",{"_index":838,"title":{},"body":{"injectables/CardItemService.html":{}}}],["address",{"_index":75,"title":{"interfaces/Address.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["address):boolean",{"_index":314,"title":{},"body":{"injectables/AddressService.html":{}}}],["address.commune",{"_index":248,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.name",{"_index":245,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.number",{"_index":246,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.region",{"_index":247,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["address.service",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["address.userid",{"_index":317,"title":{},"body":{"injectables/AddressService.html":{}}}],["addresscreatecomponent",{"_index":105,"title":{"components/AddressCreateComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressform",{"_index":176,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["addressid",{"_index":1420,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["addresslist",{"_index":244,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{}}}],["addressmanagementcomponent",{"_index":29,"title":{"components/AddressManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["addressservice",{"_index":250,"title":{"injectables/AddressService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["admin",{"_index":1105,"title":{},"body":{"components/CardManageComponent.html":{},"injectables/UserService.html":{}}}],["administracion",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{}}}],["administrar",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["agrega",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["agregada",{"_index":218,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["agregado",{"_index":1143,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["agregar",{"_index":230,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["agrego",{"_index":605,"title":{},"body":{"interfaces/CardItem.html":{}}}],["al",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('dirección",{"_index":217,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["alert('el",{"_index":1400,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert('error",{"_index":1543,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["alert('ha",{"_index":1249,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["alert('necesita",{"_index":1450,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["alert('no",{"_index":1106,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["alert('se",{"_index":1142,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["alert('usuario",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert('vuelva",{"_index":1403,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["alert(this.submittext",{"_index":586,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["almacenar",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["ambas",{"_index":1668,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1680,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1630,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1632,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":203,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"dependencies.html":{}}}],["anonima",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["another",{"_index":798,"title":{},"body":{"injectables/CardItemService.html":{}}}],["antes",{"_index":1334,"title":{},"body":{"components/PaymentComponent.html":{}}}],["apellido",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["aplicacion",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["app.component.css",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":107,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1692,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artefactos",{"_index":1201,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifact",{"_index":652,"title":{},"body":{"injectables/CardItemService.html":{}}}],["artifacts",{"_index":1703,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["attach",{"_index":738,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacking",{"_index":736,"title":{},"body":{"injectables/CardItemService.html":{}}}],["attacks",{"_index":690,"title":{},"body":{"injectables/CardItemService.html":{}}}],["authguardguard",{"_index":1617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":44,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice,private",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["authservice.isloggedin",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1693,"title":{},"body":{"index.html":{}}}],["av",{"_index":285,"title":{},"body":{"injectables/AddressService.html":{}}}],["b10e",{"_index":782,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b45f",{"_index":845,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b4c4",{"_index":992,"title":{},"body":{"injectables/CardItemService.html":{}}}],["b6a9",{"_index":830,"title":{},"body":{"injectables/CardItemService.html":{}}}],["base",{"_index":659,"title":{},"body":{"injectables/CardItemService.html":{}}}],["basic",{"_index":713,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield",{"_index":686,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\nescape—{g}{g}{u}{u",{"_index":698,"title":{},"body":{"injectables/CardItemService.html":{}}}],["battlefield.\\n{x",{"_index":979,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bd",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["beast",{"_index":848,"title":{},"body":{"injectables/CardItemService.html":{}}}],["becomes",{"_index":656,"title":{},"body":{"injectables/CardItemService.html":{}}}],["behaviorsubject",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["behemoths",{"_index":890,"title":{},"body":{"injectables/CardItemService.html":{}}}],["beyond",{"_index":679,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bfe9",{"_index":1044,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bird",{"_index":773,"title":{},"body":{"injectables/CardItemService.html":{}}}],["block",{"_index":1038,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocked",{"_index":854,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blocks",{"_index":926,"title":{},"body":{"injectables/CardItemService.html":{}}}],["blue",{"_index":818,"title":{},"body":{"injectables/CardItemService.html":{}}}],["bolleano",{"_index":1215,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["boolean",{"_index":277,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["booleana",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["booleano",{"_index":278,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["booleno",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["borrower",{"_index":1030,"title":{},"body":{"injectables/CardItemService.html":{}}}],["boton",{"_index":1182,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bottom",{"_index":821,"title":{},"body":{"injectables/CardItemService.html":{}}}],["brazen",{"_index":1029,"title":{},"body":{"injectables/CardItemService.html":{}}}],["browser",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1702,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":633,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["busqueda",{"_index":634,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["buy",{"_index":1435,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cada",{"_index":1363,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["calcquantity",{"_index":1264,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(cardlist",{"_index":1268,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcquantity(order.cardlist",{"_index":1288,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calctotal",{"_index":1208,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["calctotal(cardlist",{"_index":1218,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["calctotal(currentshoppingcart.cardlist",{"_index":1228,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["calctotal(order.cardlist",{"_index":1289,"title":{},"body":{"components/OrderListComponent.html":{}}}],["calcula",{"_index":1441,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["calcular",{"_index":1220,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["cambiar",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["campo",{"_index":1364,"title":{},"body":{"components/RegistrationFormComponent.html":{},"miscellaneous/functions.html":{}}}],["campos",{"_index":1405,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["can\\'t",{"_index":853,"title":{},"body":{"injectables/CardItemService.html":{}}}],["canactivatefn",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelado",{"_index":1651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cantidad",{"_index":593,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["capa",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["capabilities",{"_index":1720,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1408,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["card",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["card.cardname",{"_index":1111,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.condition",{"_index":1113,"title":{},"body":{"components/CardManageComponent.html":{}}}],["card.id",{"_index":1075,"title":{},"body":{"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["card.price",{"_index":1115,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.quantity",{"_index":1114,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["card.setcode",{"_index":1112,"title":{},"body":{"components/CardManageComponent.html":{}}}],["cardcopy",{"_index":1503,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cardcopy.quantity",{"_index":1504,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carddetailcomponent",{"_index":109,"title":{"components/CardDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardform",{"_index":494,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["cardid",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cardindex",{"_index":1495,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["carditem",{"_index":112,"title":{"interfaces/CardItem.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditem.cardname",{"_index":1145,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.cardname.tolowercase().includes(search.tolowercase",{"_index":1073,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.cardtype.tolowercase().includes(category.tolowercase",{"_index":1070,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.id",{"_index":1079,"title":{},"body":{"injectables/CardItemService.html":{}}}],["carditem.model",{"_index":1426,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carditem.price",{"_index":1147,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditem.setname",{"_index":1146,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["carditemlist",{"_index":612,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["carditemlistcomponent",{"_index":111,"title":{"components/CarditemListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["carditemservice",{"_index":507,"title":{"injectables/CardItemService.html":{}},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cardlist",{"_index":1088,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["cardlist.foreach(card",{"_index":1226,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["cardmanagecomponent",{"_index":31,"title":{"components/CardManageComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["cardname",{"_index":496,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["cardnumber",{"_index":500,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cards",{"_index":701,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cardshop",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["cardtext",{"_index":506,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["cardtype",{"_index":504,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["carito",{"_index":1423,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["carrito",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carritos",{"_index":1259,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["carro",{"_index":1148,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["carros",{"_index":1454,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":1431,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart'},{'name",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["cart.component.css",{"_index":1433,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.html",{"_index":1432,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts",{"_index":1429,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:24",{"_index":1442,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:28",{"_index":1445,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:32",{"_index":1436,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:48",{"_index":1440,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:65",{"_index":1438,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.model",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cart.model.ts",{"_index":1418,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["cart.service",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["cart.service.ts",{"_index":1453,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:115",{"_index":1470,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:19",{"_index":1460,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":1467,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:51",{"_index":1473,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:67",{"_index":1465,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/shopping",{"_index":1428,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["carta",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cartas",{"_index":488,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["cartitem.service",{"_index":1477,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cartstatus",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["cartstatus.abierto",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["cast",{"_index":734,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cat",{"_index":999,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catalogo",{"_index":489,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["categoria",{"_index":1133,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["category",{"_index":631,"title":{},"body":{"injectables/CardItemService.html":{}}}],["catidad",{"_index":609,"title":{},"body":{"interfaces/CardItem.html":{}}}],["catálogo",{"_index":96,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["cb1c19d777c4.jpg?1654630670",{"_index":920,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cerrado",{"_index":1194,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cerrar",{"_index":1202,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1695,"title":{},"body":{"index.html":{}}}],["chariot",{"_index":996,"title":{},"body":{"injectables/CardItemService.html":{}}}],["check",{"_index":1724,"title":{},"body":{"index.html":{}}}],["checkemail",{"_index":1547,"title":{},"body":{"injectables/UserService.html":{}}}],["checkemail(email",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["checkstock",{"_index":613,"title":{},"body":{"injectables/CardItemService.html":{}}}],["checkstock(cardid",{"_index":618,"title":{},"body":{"injectables/CardItemService.html":{}}}],["choice",{"_index":1716,"title":{},"body":{"index.html":{}}}],["choose",{"_index":927,"title":{},"body":{"injectables/CardItemService.html":{}}}],["class",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":1681,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":170,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["code",{"_index":1697,"title":{},"body":{"index.html":{}}}],["codigo",{"_index":590,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["coinciden",{"_index":1415,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["color",{"_index":778,"title":{},"body":{"injectables/CardItemService.html":{}}}],["combat",{"_index":860,"title":{},"body":{"injectables/CardItemService.html":{}}}],["command",{"_index":1717,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["commune",{"_index":150,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["companion",{"_index":1051,"title":{},"body":{"injectables/CardItemService.html":{}}}],["completo",{"_index":1136,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":103,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["componente",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"overview.html":{}}}],["compra",{"_index":1221,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprar",{"_index":1422,"title":{},"body":{"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["compras",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["comprobar",{"_index":1404,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["comuna",{"_index":155,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["con",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["condicion",{"_index":591,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["condition",{"_index":501,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["confirmacion",{"_index":1231,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["confirmar",{"_index":1241,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["confirmpassword",{"_index":1358,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["const",{"_index":301,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(authservice",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["constructor(carditemservice",{"_index":1459,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["constructor(private",{"_index":207,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["constructor(route",{"_index":1125,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["constructor(router",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["constructor(shoppingcartservice",{"_index":1266,"title":{},"body":{"components/OrderListComponent.html":{}}}],["constructor(userservice",{"_index":1359,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["contega",{"_index":1658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contener",{"_index":226,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["contenido",{"_index":1430,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["contiene",{"_index":1175,"title":{},"body":{"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["contrario",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["contrasena",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["contrasenas",{"_index":1669,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contraseña",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["contraseñas",{"_index":1414,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["control",{"_index":664,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\ncrew",{"_index":1001,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nequipped",{"_index":739,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\nwhen",{"_index":737,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{1}{w",{"_index":797,"title":{},"body":{"injectables/CardItemService.html":{}}}],["control.\\n{t",{"_index":758,"title":{},"body":{"injectables/CardItemService.html":{}}}],["controls",{"_index":666,"title":{},"body":{"injectables/CardItemService.html":{}}}],["contructor",{"_index":509,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{}}}],["copy",{"_index":947,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core",{"_index":872,"title":{},"body":{"injectables/CardItemService.html":{}}}],["core/enum/cart",{"_index":1245,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["core/models/address.model",{"_index":241,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["core/models/carditem.model",{"_index":541,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["core/models/shopping",{"_index":1223,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["core/models/user.model",{"_index":1529,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["core/services/auth.service",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["core/services/cartitem.service",{"_index":542,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["core/services/shopping",{"_index":1281,"title":{},"body":{"components/OrderListComponent.html":{}}}],["core/services/user.service",{"_index":1304,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["core/validators/validators",{"_index":206,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["correcto",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["correlativo",{"_index":263,"title":{},"body":{"injectables/AddressService.html":{},"injectables/UserService.html":{}}}],["correo",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["corresponde",{"_index":164,"title":{},"body":{"interfaces/Address.html":{}}}],["cosmic",{"_index":972,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cost.\\n{t",{"_index":1056,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coste",{"_index":607,"title":{},"body":{"interfaces/CardItem.html":{}}}],["costs",{"_index":733,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counter",{"_index":764,"title":{},"body":{"injectables/CardItemService.html":{}}}],["counters",{"_index":1016,"title":{},"body":{"injectables/CardItemService.html":{}}}],["coverage",{"_index":1606,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["creacion",{"_index":169,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["creado",{"_index":262,"title":{},"body":{"injectables/AddressService.html":{}}}],["crear",{"_index":261,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":171,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/CardItemService.html":{}}}],["create'},{'name",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["create.component",{"_index":240,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["create.component.css",{"_index":175,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.html",{"_index":174,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts",{"_index":167,"title":{},"body":{"components/AddressCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:27",{"_index":179,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:38",{"_index":182,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:58",{"_index":191,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:62",{"_index":193,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:66",{"_index":195,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:70",{"_index":197,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create.component.ts:77",{"_index":186,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["create/address",{"_index":166,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["createaddress",{"_index":255,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["createaddress(name",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaddress(userid",{"_index":258,"title":{},"body":{"injectables/AddressService.html":{}}}],["createdby",{"_index":601,"title":{},"body":{"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["createorupdatecarditem",{"_index":614,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createorupdatecarditem(card",{"_index":621,"title":{},"body":{"injectables/CardItemService.html":{}}}],["createshoppingcar",{"_index":1456,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createshoppingcar(userid",{"_index":1466,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["createuser",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(username",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["creature",{"_index":653,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\n",{"_index":988,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creature.\\nwhenever",{"_index":796,"title":{},"body":{"injectables/CardItemService.html":{}}}],["creatures",{"_index":757,"title":{},"body":{"injectables/CardItemService.html":{}}}],["credenciales",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["creo",{"_index":1425,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["criaturas",{"_index":1200,"title":{},"body":{"components/NavbarComponent.html":{}}}],["crowned",{"_index":786,"title":{},"body":{"injectables/CardItemService.html":{}}}],["crowns",{"_index":639,"title":{},"body":{"injectables/CardItemService.html":{}}}],["cuenta",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/NavbarComponent.html":{}}}],["currency",{"_index":1116,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentshoppingcart",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currentuser",{"_index":1520,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["cycle",{"_index":900,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d181de127814.jpg?1616182088",{"_index":1045,"title":{},"body":{"injectables/CardItemService.html":{}}}],["d2a0d8188d1c.jpg?1680582212",{"_index":831,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dado",{"_index":270,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{}}}],["damage",{"_index":856,"title":{},"body":{"injectables/CardItemService.html":{}}}],["datos",{"_index":1542,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["dcon",{"_index":1437,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deactivateuser",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["deal",{"_index":875,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deals",{"_index":859,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dealt",{"_index":857,"title":{},"body":{"injectables/CardItemService.html":{}}}],["death",{"_index":680,"title":{},"body":{"injectables/CardItemService.html":{}}}],["deathtouch",{"_index":851,"title":{},"body":{"injectables/CardItemService.html":{}}}],["debe",{"_index":1216,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["deck",{"_index":1053,"title":{},"body":{"injectables/CardItemService.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["define",{"_index":1419,"title":{},"body":{"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["definicion",{"_index":184,"title":{},"body":{"components/AddressCreateComponent.html":{},"miscellaneous/variables.html":{}}}],["definido",{"_index":1424,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["definiendo",{"_index":1362,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["definir",{"_index":143,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/User.html":{}}}],["del",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["dependecia",{"_index":1236,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["dependencia",{"_index":180,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["dependencias",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["dependencies",{"_index":1629,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["deshabilitar",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["desloguearse",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["detail",{"_index":490,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail'},{'name",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["detail.component",{"_index":1244,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["detail.component.css",{"_index":493,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.html",{"_index":492,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{}}}],["detail.component.ts",{"_index":487,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":520,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:109",{"_index":522,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:113",{"_index":524,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":526,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:121",{"_index":528,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:125",{"_index":530,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:129",{"_index":532,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:133",{"_index":534,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:137",{"_index":536,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":538,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:145",{"_index":540,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:152",{"_index":511,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1212,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1214,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":513,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1211,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":516,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":508,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1219,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":510,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["detail/card",{"_index":486,"title":{},"body":{"components/CardDetailComponent.html":{},"coverage.html":{}}}],["detail/order",{"_index":1205,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["detalle",{"_index":1094,"title":{},"body":{"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["dev",{"_index":1689,"title":{},"body":{"index.html":{}}}],["development",{"_index":1684,"title":{},"body":{"index.html":{}}}],["devotion",{"_index":793,"title":{},"body":{"injectables/CardItemService.html":{}}}],["direccion",{"_index":156,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["direcciones",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["dirección",{"_index":220,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["direccon",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["directive",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1701,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1706,"title":{},"body":{"index.html":{}}}],["dirreciones",{"_index":269,"title":{},"body":{"injectables/AddressService.html":{}}}],["disponibles",{"_index":1518,"title":{},"body":{"interfaces/User.html":{}}}],["dist",{"_index":1705,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["donde",{"_index":1326,"title":{},"body":{"components/PaymentComponent.html":{}}}],["double",{"_index":742,"title":{},"body":{"injectables/CardItemService.html":{}}}],["down",{"_index":1023,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dragon",{"_index":955,"title":{},"body":{"injectables/CardItemService.html":{}}}],["draw",{"_index":693,"title":{},"body":{"injectables/CardItemService.html":{}}}],["dryad",{"_index":832,"title":{},"body":{"injectables/CardItemService.html":{}}}],["durante",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynamic",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["e1be5505eb5b.jpg?1689998574",{"_index":769,"title":{},"body":{"injectables/CardItemService.html":{}}}],["e2e",{"_index":1714,"title":{},"body":{"index.html":{}}}],["each",{"_index":735,"title":{},"body":{"injectables/CardItemService.html":{}}}],["edicion",{"_index":602,"title":{},"body":{"interfaces/CardItem.html":{},"components/UserManagementComponent.html":{}}}],["editar",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{}}}],["el",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eld",{"_index":640,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elder",{"_index":683,"title":{},"body":{"injectables/CardItemService.html":{}}}],["eldraine",{"_index":642,"title":{},"body":{"injectables/CardItemService.html":{}}}],["electronico",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["element",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["elemental",{"_index":1050,"title":{},"body":{"injectables/CardItemService.html":{}}}],["elk",{"_index":658,"title":{},"body":{"injectables/CardItemService.html":{}}}],["email",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["emancipation",{"_index":870,"title":{},"body":{"injectables/CardItemService.html":{}}}],["embercleave",{"_index":726,"title":{},"body":{"injectables/CardItemService.html":{}}}],["emblem",{"_index":981,"title":{},"body":{"injectables/CardItemService.html":{}}}],["en",{"_index":296,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["encantamientos",{"_index":1199,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enchantment",{"_index":789,"title":{},"body":{"injectables/CardItemService.html":{}}}],["encontrado",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["encuentra",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["encuentre",{"_index":1515,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["end",{"_index":802,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["enters",{"_index":685,"title":{},"body":{"injectables/CardItemService.html":{}}}],["entrada",{"_index":1213,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["entre",{"_index":1407,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["entrega",{"_index":147,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{}}}],["enum/cart",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["enumerations",{"_index":1644,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1308,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["equal",{"_index":824,"title":{},"body":{"injectables/CardItemService.html":{}}}],["equipment",{"_index":729,"title":{},"body":{"injectables/CardItemService.html":{}}}],["error",{"_index":588,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["es",{"_index":221,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["escaped.\\nwhenever",{"_index":689,"title":{},"body":{"injectables/CardItemService.html":{}}}],["esika\\'s",{"_index":995,"title":{},"body":{"injectables/CardItemService.html":{}}}],["especifico",{"_index":1468,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["espera",{"_index":1329,"title":{},"body":{"components/PaymentComponent.html":{}}}],["esta",{"_index":1108,"title":{},"body":{"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["estado",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["estructura",{"_index":145,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exchange",{"_index":663,"title":{},"body":{"injectables/CardItemService.html":{}}}],["execute",{"_index":1711,"title":{},"body":{"index.html":{}}}],["exile",{"_index":699,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exiled",{"_index":980,"title":{},"body":{"injectables/CardItemService.html":{}}}],["exista",{"_index":1242,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["existentes",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["exito",{"_index":1398,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["f1a6",{"_index":949,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f1c935d0573d.jpg?1665343333",{"_index":1006,"title":{},"body":{"injectables/CardItemService.html":{}}}],["f2f835fd45f4.jpg?1594737636",{"_index":724,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fabled",{"_index":708,"title":{},"body":{"injectables/CardItemService.html":{}}}],["faerie",{"_index":1034,"title":{},"body":{"injectables/CardItemService.html":{}}}],["false",{"_index":315,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fbb4aa3b7174.jpg?1712354204",{"_index":905,"title":{},"body":{"injectables/CardItemService.html":{}}}],["fbf0",{"_index":1003,"title":{},"body":{"injectables/CardItemService.html":{}}}],["field1",{"_index":1673,"title":{},"body":{"miscellaneous/functions.html":{}}}],["field2",{"_index":1667,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fiery",{"_index":869,"title":{},"body":{"injectables/CardItemService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1696,"title":{},"body":{"index.html":{}}}],["filterform",{"_index":1178,"title":{},"body":{"components/NavbarComponent.html":{}}}],["filtro",{"_index":632,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["filtros",{"_index":635,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["finalizacion",{"_index":1336,"title":{},"body":{"components/PaymentComponent.html":{}}}],["finalizada",{"_index":1254,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finalizado",{"_index":1650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["finish",{"_index":1232,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish'},{'name",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["finish.component.css",{"_index":1234,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.html",{"_index":1233,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts",{"_index":1230,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["finish.component.ts:25",{"_index":1235,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish.component.ts:41",{"_index":1237,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["finish/order",{"_index":1229,"title":{},"body":{"components/OrderFinishComponent.html":{},"coverage.html":{}}}],["first",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["firstname",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["five",{"_index":700,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nflying\\nbrazen",{"_index":1037,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flash\\nthis",{"_index":731,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flujo",{"_index":1240,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["flying",{"_index":896,"title":{},"body":{"injectables/CardItemService.html":{}}}],["flying\\nwhen",{"_index":774,"title":{},"body":{"injectables/CardItemService.html":{}}}],["food",{"_index":649,"title":{},"body":{"injectables/CardItemService.html":{}}}],["forces",{"_index":909,"title":{},"body":{"injectables/CardItemService.html":{}}}],["form",{"_index":1354,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form'},{'name",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["form.component.css",{"_index":1356,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.html",{"_index":1355,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":1352,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1372,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:106",{"_index":1374,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:113",{"_index":1365,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:28",{"_index":1360,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:45",{"_index":1361,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:86",{"_index":1367,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:90",{"_index":1369,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:94",{"_index":1370,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form.component.ts:98",{"_index":1371,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["form/registration",{"_index":1351,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["forma",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["formato",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":198,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["formcontrol(this.currentuser.email",{"_index":1535,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.firstname",{"_index":1533,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formcontrol(this.currentuser.lastname",{"_index":1534,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["formgroup",{"_index":189,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["formulario",{"_index":168,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["four",{"_index":716,"title":{},"body":{"injectables/CardItemService.html":{}}}],["framework",{"_index":291,"title":{},"body":{"injectables/AddressService.html":{}}}],["fromulario",{"_index":514,"title":{},"body":{"components/CardDetailComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["fucion",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["funcion",{"_index":260,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["funcione",{"_index":1462,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["funciones",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1652,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1721,"title":{},"body":{"index.html":{}}}],["gain",{"_index":691,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gains",{"_index":799,"title":{},"body":{"injectables/CardItemService.html":{}}}],["game",{"_index":826,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gargaroth",{"_index":922,"title":{},"body":{"injectables/CardItemService.html":{}}}],["generate",{"_index":1699,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1679,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1060,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getaddressbyuser",{"_index":256,"title":{},"body":{"injectables/AddressService.html":{}}}],["getaddressbyuser(userid",{"_index":267,"title":{},"body":{"injectables/AddressService.html":{}}}],["getallshopppingcartsbyuser",{"_index":1457,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getallshopppingcartsbyuser(userid",{"_index":1469,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["getcard",{"_index":615,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcard(cardid",{"_index":623,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters",{"_index":616,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardlistwithfilters(category",{"_index":627,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardname",{"_index":519,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardnumber",{"_index":527,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardslist",{"_index":617,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getcardtext",{"_index":539,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcardtype",{"_index":535,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getcommune",{"_index":196,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getcondition",{"_index":529,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getconfirmpassword",{"_index":1373,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["getcurrentshoppingcart",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuseraddress",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemail",{"_index":1302,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getfirstname",{"_index":1366,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getimage",{"_index":533,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getlastname",{"_index":1368,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["getmanavalue",{"_index":537,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getname",{"_index":190,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getnumber",{"_index":192,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getpassword",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["getprice",{"_index":531,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getquantity",{"_index":521,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getregion",{"_index":194,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["getrole",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":740,"title":{},"body":{"injectables/CardItemService.html":{}}}],["getselectedcardformanage",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsetcode",{"_index":523,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getsetname",{"_index":525,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["getting",{"_index":1676,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserauth",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserauth(username",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["getusername",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["giant",{"_index":684,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gilded",{"_index":770,"title":{},"body":{"injectables/CardItemService.html":{}}}],["go",{"_index":1723,"title":{},"body":{"index.html":{}}}],["god",{"_index":790,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goldspan",{"_index":954,"title":{},"body":{"injectables/CardItemService.html":{}}}],["goose",{"_index":771,"title":{},"body":{"injectables/CardItemService.html":{}}}],["gotodetail",{"_index":1089,"title":{},"body":{"components/CardManageComponent.html":{}}}],["graveyard",{"_index":702,"title":{},"body":{"injectables/CardItemService.html":{}}}],["graveyards",{"_index":989,"title":{},"body":{"injectables/CardItemService.html":{}}}],["great",{"_index":750,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greater",{"_index":823,"title":{},"body":{"injectables/CardItemService.html":{}}}],["greatest",{"_index":756,"title":{},"body":{"injectables/CardItemService.html":{}}}],["green",{"_index":657,"title":{},"body":{"injectables/CardItemService.html":{}}}],["grove",{"_index":834,"title":{},"body":{"injectables/CardItemService.html":{}}}],["guard.guard.ts",{"_index":1616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guardar",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["g}{g",{"_index":760,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ha",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["habilidad",{"_index":603,"title":{},"body":{"interfaces/CardItem.html":{}}}],["habilitado/deshabilitado",{"_index":1516,"title":{},"body":{"interfaces/User.html":{}}}],["hacer",{"_index":1255,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["half",{"_index":1021,"title":{},"body":{"injectables/CardItemService.html":{}}}],["han",{"_index":1541,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["hand",{"_index":696,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hasitems",{"_index":1434,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["hasstock",{"_index":1493,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["haste\\nif",{"_index":1015,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nquesting",{"_index":852,"title":{},"body":{"injectables/CardItemService.html":{}}}],["haste\\nwhenever",{"_index":959,"title":{},"body":{"injectables/CardItemService.html":{}}}],["hay",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["heliod",{"_index":784,"title":{},"body":{"injectables/CardItemService.html":{}}}],["help",{"_index":1722,"title":{},"body":{"index.html":{}}}],["henge",{"_index":751,"title":{},"body":{"injectables/CardItemService.html":{}}}],["home",{"_index":1197,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["http://localhost:4200",{"_index":1691,"title":{},"body":{"index.html":{}}}],["https://cards.scryfall.io/large/front/0/b/0b12e4b7",{"_index":879,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/1/d/1d52e527",{"_index":1061,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/2/3245ff74",{"_index":804,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/4/3462a3d0",{"_index":668,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/3/7/373f199d",{"_index":948,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/3/43be1363",{"_index":842,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/4/d/4d410cf5",{"_index":901,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/5/d/5dd13a6c",{"_index":916,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/6/3/6340e0f3",{"_index":765,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/7/2/726e8b29",{"_index":827,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/8/e/8ecc97f2",{"_index":779,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/2/92613468",{"_index":1024,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/9/d/9d914868",{"_index":963,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/0/a0b6a71e",{"_index":703,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/8/a87606cc",{"_index":1002,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/a/a/aaae15dd",{"_index":745,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/c/2/c2089ec9",{"_index":1041,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/3/d313d051",{"_index":720,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/d/5/d51269cf",{"_index":932,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/4/e41cf82d",{"_index":863,"title":{},"body":{"injectables/CardItemService.html":{}}}],["https://cards.scryfall.io/large/front/e/a/ea7e4c65",{"_index":991,"title":{},"body":{"injectables/CardItemService.html":{}}}],["human",{"_index":911,"title":{},"body":{"injectables/CardItemService.html":{}}}],["id",{"_index":151,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["idenificador",{"_index":266,"title":{},"body":{"injectables/AddressService.html":{}}}],["identificador",{"_index":157,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["if(card.id",{"_index":1074,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(cardindex",{"_index":1499,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(cardlist",{"_index":1225,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["if(category",{"_index":1068,"title":{},"body":{"injectables/CardItemService.html":{}}}],["if(hasstock",{"_index":1502,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(index",{"_index":1080,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["if(result",{"_index":585,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["if(search",{"_index":1071,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["if(selectedshoppingcart.cardlist",{"_index":1496,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["if(shoppingcart.id",{"_index":1338,"title":{},"body":{"components/PaymentComponent.html":{}}}],["if(this.authservice.getuser().id",{"_index":1103,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["if(this.authservice.updatebasicinfo(this.updateform.get('firstname')?.value,this.updateform.get('lastname')?.value,this.updateform.get('email')?.value",{"_index":1540,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["if(this.checkemail(email",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.currentshoppingcart.cardlist",{"_index":1446,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["if(this.currentshoppingcart.id",{"_index":1247,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.status",{"_index":1251,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["if(this.currentshoppingcart.value.id",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.logeduser.id",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedcard.id",{"_index":544,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["if(this.userlist.find(user",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["if(this.userservie.checkemail(this.email?.value",{"_index":1309,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["iko",{"_index":887,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ikoria",{"_index":888,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ilysian",{"_index":833,"title":{},"body":{"injectables/CardItemService.html":{}}}],["image",{"_index":503,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["imagen",{"_index":594,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{}}}],["imagenes",{"_index":1217,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["implements",{"_index":1719,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["impostor",{"_index":973,"title":{},"body":{"injectables/CardItemService.html":{}}}],["inciacion",{"_index":237,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["incorretos",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["indestructible",{"_index":915,"title":{},"body":{"injectables/CardItemService.html":{}}}],["indestructible\\nas",{"_index":791,"title":{},"body":{"injectables/CardItemService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":279,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["indicador",{"_index":1513,"title":{},"body":{"interfaces/User.html":{}}}],["indicando",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["indicar",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["informacion",{"_index":146,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["ingresadas",{"_index":1670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresado",{"_index":1657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ingresar",{"_index":1107,"title":{},"body":{"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["ingreso",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["iniciacion",{"_index":183,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["iniciar",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["inicio",{"_index":1239,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["inject(authservice",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":249,"title":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":251,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1222,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inputs",{"_index":1209,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["insect",{"_index":943,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instant",{"_index":1036,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead",{"_index":878,"title":{},"body":{"injectables/CardItemService.html":{}}}],["instead.\\nif",{"_index":1020,"title":{},"body":{"injectables/CardItemService.html":{}}}],["interface",{"_index":139,"title":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":140,"title":{},"body":{"interfaces/Address.html":{},"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":1511,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isauthenticated",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["isn\\'t",{"_index":795,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ispaymentsuccess",{"_index":1322,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isselected",{"_index":1261,"title":{},"body":{"components/OrderListComponent.html":{}}}],["item",{"_index":515,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["items",{"_index":265,"title":{},"body":{"injectables/AddressService.html":{},"components/ShoppingCartComponent.html":{}}}],["jegantha",{"_index":1047,"title":{},"body":{"injectables/CardItemService.html":{}}}],["joiner",{"_index":908,"title":{},"body":{"injectables/CardItemService.html":{}}}],["juego",{"_index":604,"title":{},"body":{"interfaces/CardItem.html":{}}}],["jugar",{"_index":608,"title":{},"body":{"interfaces/CardItem.html":{}}}],["kaldheim",{"_index":957,"title":{},"body":{"injectables/CardItemService.html":{}}}],["karma",{"_index":1713,"title":{},"body":{"index.html":{}}}],["khm",{"_index":956,"title":{},"body":{"injectables/CardItemService.html":{}}}],["kinds",{"_index":1019,"title":{},"body":{"injectables/CardItemService.html":{}}}],["la",{"_index":144,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/UserService.html":{}}}],["lair",{"_index":889,"title":{},"body":{"injectables/CardItemService.html":{}}}],["land",{"_index":695,"title":{},"body":{"injectables/CardItemService.html":{}}}],["landfall",{"_index":944,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lands",{"_index":718,"title":{},"body":{"injectables/CardItemService.html":{}}}],["las",{"_index":232,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["lastname",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["leaves",{"_index":978,"title":{},"body":{"injectables/CardItemService.html":{}}}],["legend",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["legendary",{"_index":646,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less",{"_index":667,"title":{},"body":{"injectables/CardItemService.html":{}}}],["less.\\ncombat",{"_index":855,"title":{},"body":{"injectables/CardItemService.html":{}}}],["letra",{"_index":1661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["letras",{"_index":227,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["library",{"_index":712,"title":{},"body":{"injectables/CardItemService.html":{}}}],["library.\\n",{"_index":987,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lies",{"_index":970,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life",{"_index":692,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\n",{"_index":931,"title":{},"body":{"injectables/CardItemService.html":{}}}],["life.\\nwhenever",{"_index":761,"title":{},"body":{"injectables/CardItemService.html":{}}}],["lifelink",{"_index":800,"title":{},"body":{"injectables/CardItemService.html":{}}}],["list",{"_index":1121,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list'},{'name",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["list.component",{"_index":79,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["list.component.css",{"_index":1123,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.html",{"_index":1122,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{}}}],["list.component.ts",{"_index":1119,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1127,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:27",{"_index":1279,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:31",{"_index":1280,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:35",{"_index":1267,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:46",{"_index":1131,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:50",{"_index":1273,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:60",{"_index":1277,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:63",{"_index":1130,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["list.component.ts:70",{"_index":1271,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:85",{"_index":1269,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/carditem",{"_index":1118,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["list/order",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["listado",{"_index":239,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["listar",{"_index":231,"title":{},"body":{"components/AddressManagementComponent.html":{},"components/OrderListComponent.html":{}}}],["lo",{"_index":1409,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["loading",{"_index":1347,"title":{},"body":{"components/PaymentComponent.html":{}}}],["logeduser",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["login(username",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":115,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logro",{"_index":281,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["loguear",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["loguearse",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":792,"title":{},"body":{"injectables/CardItemService.html":{}}}],["look",{"_index":816,"title":{},"body":{"injectables/CardItemService.html":{}}}],["los",{"_index":148,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["loses",{"_index":654,"title":{},"body":{"injectables/CardItemService.html":{}}}],["m21",{"_index":871,"title":{},"body":{"injectables/CardItemService.html":{}}}],["mail2@mail.cl",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["mail@mail.cl",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["mana",{"_index":596,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{}}}],["manage",{"_index":1085,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage'},{'name",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["manage.component",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["manage.component.css",{"_index":1087,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.html",{"_index":1086,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts",{"_index":1084,"title":{},"body":{"components/CardManageComponent.html":{},"coverage.html":{}}}],["manage.component.ts:25",{"_index":1091,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:42",{"_index":1095,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:50",{"_index":1097,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage.component.ts:58",{"_index":1092,"title":{},"body":{"components/CardManageComponent.html":{}}}],["manage/card",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["management",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management'},{'name",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.css",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.html",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:24",{"_index":235,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:27",{"_index":1524,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:30",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":1522,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:35",{"_index":236,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["management.component.ts:43",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{}}}],["management.component.ts:65",{"_index":1525,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:69",{"_index":1526,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:73",{"_index":1527,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:77",{"_index":1528,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management.component.ts:84",{"_index":1523,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["management/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management/address",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["management/user",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["manavalue",{"_index":505,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["manejar",{"_index":254,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{}}}],["manejo",{"_index":181,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{}}}],["many",{"_index":1018,"title":{},"body":{"injectables/CardItemService.html":{}}}],["market",{"_index":1196,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.max(maxid",{"_index":304,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["mayuscula",{"_index":1662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mayúscula",{"_index":1411,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["menejar",{"_index":1476,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["menos",{"_index":1410,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["mensaje",{"_index":517,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["merfolk",{"_index":814,"title":{},"body":{"injectables/CardItemService.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["methods",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["metropolitana",{"_index":288,"title":{},"body":{"injectables/AddressService.html":{}}}],["minuscula",{"_index":1663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minúscula",{"_index":1412,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["miscellaneous",{"_index":1643,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismas",{"_index":1672,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mock",{"_index":253,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["models/address.model",{"_index":297,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["models/carditem.model",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["models/shopping",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ShoppingCartService.html":{}}}],["models/user.model",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["modificar",{"_index":274,"title":{},"body":{"injectables/AddressService.html":{}}}],["modules",{"_index":1729,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["momento",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["monstrous",{"_index":1009,"title":{},"body":{"injectables/CardItemService.html":{}}}],["more",{"_index":717,"title":{},"body":{"injectables/CardItemService.html":{},"index.html":{}}}],["mostrar",{"_index":1120,"title":{},"body":{"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["much",{"_index":861,"title":{},"body":{"injectables/CardItemService.html":{}}}],["n",{"_index":928,"title":{},"body":{"injectables/CardItemService.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nature\\'s",{"_index":675,"title":{},"body":{"injectables/CardItemService.html":{}}}],["navbar",{"_index":1174,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["navbar.component.css",{"_index":1177,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1176,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["navbarcomponent",{"_index":117,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1690,"title":{},"body":{"index.html":{}}}],["need",{"_index":1718,"title":{},"body":{"index.html":{}}}],["netrga",{"_index":294,"title":{},"body":{"injectables/AddressService.html":{}}}],["new",{"_index":209,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"index.html":{}}}],["newaddress",{"_index":300,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.commune",{"_index":312,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.id=newid",{"_index":307,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.name",{"_index":309,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.number",{"_index":310,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.region",{"_index":311,"title":{},"body":{"injectables/AddressService.html":{}}}],["newaddress.userid",{"_index":308,"title":{},"body":{"injectables/AddressService.html":{}}}],["newid",{"_index":302,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["newshoppingcart",{"_index":1478,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":1480,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.status",{"_index":1482,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.userid",{"_index":1481,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newuser",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.email",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.firstname",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.id",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.isactive",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.lastname",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.role",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["ng",{"_index":1687,"title":{},"body":{"index.html":{}}}],["ngclass",{"_index":173,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["ngoninit",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["nm",{"_index":644,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nombre",{"_index":158,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["non",{"_index":913,"title":{},"body":{"injectables/CardItemService.html":{}}}],["noncreature",{"_index":893,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nonland",{"_index":1039,"title":{},"body":{"injectables/CardItemService.html":{}}}],["nontoken",{"_index":762,"title":{},"body":{"injectables/CardItemService.html":{}}}],["normal",{"_index":1563,"title":{},"body":{"injectables/UserService.html":{}}}],["notsamepassword",{"_index":1675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nueva",{"_index":219,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":152,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{}}}],["numerico",{"_index":161,"title":{},"body":{"interfaces/Address.html":{}}}],["numero",{"_index":159,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"miscellaneous/functions.html":{}}}],["numeros",{"_index":1659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nymph",{"_index":836,"title":{},"body":{"injectables/CardItemService.html":{}}}],["número",{"_index":228,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["números",{"_index":229,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{}}}],["o",{"_index":1134,"title":{},"body":{"components/CarditemListComponent.html":{},"components/LoginComponent.html":{}}}],["obetener",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["objeto",{"_index":142,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/OrderDetailComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["obligatorio",{"_index":222,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["obteener",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtener",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{}}}],["obtiene",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["ocurrido",{"_index":1250,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{}}}],["oko",{"_index":637,"title":{},"body":{"injectables/CardItemService.html":{}}}],["one",{"_index":777,"title":{},"body":{"injectables/CardItemService.html":{}}}],["onlyletters",{"_index":1655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlylettersvalidator",{"_index":204,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onlynumbers",{"_index":1660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["onlynumbersvalidator",{"_index":205,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["onsearch",{"_index":1179,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":177,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["onto",{"_index":697,"title":{},"body":{"injectables/CardItemService.html":{}}}],["opponent",{"_index":665,"title":{},"body":{"injectables/CardItemService.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["oracle",{"_index":811,"title":{},"body":{"injectables/CardItemService.html":{}}}],["orden",{"_index":1253,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["ordenes",{"_index":1258,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["order.id",{"_index":1286,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.status",{"_index":1287,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderdetailcomponent",{"_index":119,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderfinishcomponent",{"_index":120,"title":{"components/OrderFinishComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["orderlist",{"_index":1262,"title":{},"body":{"components/OrderListComponent.html":{}}}],["orderlistcomponent",{"_index":30,"title":{"components/OrderListComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["otra",{"_index":1256,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["out",{"_index":1725,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1726,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner\\'s",{"_index":1040,"title":{},"body":{"injectables/CardItemService.html":{}}}],["package",{"_index":1628,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagado",{"_index":1649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["page",{"_index":1728,"title":{},"body":{"index.html":{}}}],["pago",{"_index":1318,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["panel",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["pantalla",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/CardManageComponent.html":{},"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["para",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parametros",{"_index":1132,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('categoria",{"_index":1138,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["params.get('search",{"_index":1139,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["pasarela",{"_index":1439,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["passage",{"_index":709,"title":{},"body":{"injectables/CardItemService.html":{}}}],["password",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["passwordfromat",{"_index":1665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordrecoverycomponent",{"_index":122,"title":{"components/PasswordRecoveryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordresetcomponent",{"_index":125,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["passwordvalidator",{"_index":1375,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pay",{"_index":1059,"title":{},"body":{"injectables/CardItemService.html":{}}}],["payment",{"_index":1319,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment'},{'name",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["payment.component.css",{"_index":1321,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.html",{"_index":1320,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":127,"title":{"components/PaymentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["pedido",{"_index":1421,"title":{},"body":{"interfaces/ShoppingCart.html":{}}}],["permanent",{"_index":876,"title":{},"body":{"injectables/CardItemService.html":{}}}],["persistente",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["petty",{"_index":1031,"title":{},"body":{"injectables/CardItemService.html":{}}}],["phyrexian",{"_index":1012,"title":{},"body":{"injectables/CardItemService.html":{}}}],["pisa",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["planeswalker",{"_index":647,"title":{},"body":{"injectables/CardItemService.html":{}}}],["planeswalkers",{"_index":1198,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platform",{"_index":1715,"title":{},"body":{"index.html":{}}}],["play",{"_index":837,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player",{"_index":862,"title":{},"body":{"injectables/CardItemService.html":{}}}],["player\\'s",{"_index":986,"title":{},"body":{"injectables/CardItemService.html":{}}}],["por",{"_index":625,"title":{},"body":{"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["portal",{"_index":1349,"title":{},"body":{"components/PaymentComponent.html":{}}}],["power",{"_index":660,"title":{},"body":{"injectables/CardItemService.html":{}}}],["praetor",{"_index":1013,"title":{},"body":{"injectables/CardItemService.html":{}}}],["precio",{"_index":592,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["prevented.\\nwhenever",{"_index":858,"title":{},"body":{"injectables/CardItemService.html":{}}}],["price",{"_index":502,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"interfaces/ShoppingCart.html":{}}}],["principal",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["procesando",{"_index":1346,"title":{},"body":{"components/PaymentComponent.html":{}}}],["proceso",{"_index":1317,"title":{},"body":{"components/PaymentComponent.html":{}}}],["project",{"_index":1678,"title":{},"body":{"index.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":298,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prueba",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["puede",{"_index":225,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{}}}],["put",{"_index":694,"title":{},"body":{"injectables/CardItemService.html":{}}}],["quantity",{"_index":497,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["que",{"_index":162,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["questing",{"_index":847,"title":{},"body":{"injectables/CardItemService.html":{}}}],["qwerty",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["raider",{"_index":1010,"title":{},"body":{"injectables/CardItemService.html":{}}}],["random",{"_index":822,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rdenes",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["reach",{"_index":924,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reactiveformsmodule",{"_index":172,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["realizada",{"_index":1345,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizadas",{"_index":1471,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["realizado",{"_index":1337,"title":{},"body":{"components/PaymentComponent.html":{}}}],["realizados",{"_index":1260,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["realizar",{"_index":282,"title":{},"body":{"injectables/AddressService.html":{},"components/NavbarComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/User.html":{}}}],["recoverpassform",{"_index":1297,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery",{"_index":1294,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery'},{'name",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["recovery.component.css",{"_index":1296,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.html",{"_index":1295,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts",{"_index":1292,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recovery.component.ts:26",{"_index":1299,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:38",{"_index":1300,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:47",{"_index":1303,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery.component.ts:54",{"_index":1301,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recovery/password",{"_index":1291,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"coverage.html":{}}}],["recuperacion",{"_index":1293,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["recuperar",{"_index":1203,"title":{},"body":{"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["redireccionar",{"_index":1093,"title":{},"body":{"components/CardManageComponent.html":{}}}],["redirecciones",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["redirect",{"_index":1323,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirige",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"components/ShoppingCartComponent.html":{}}}],["redirigiendo",{"_index":1348,"title":{},"body":{"components/PaymentComponent.html":{}}}],["redirigir",{"_index":1335,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reference",{"_index":1727,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1461,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["regex",{"_index":1656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["region",{"_index":153,"title":{},"body":{"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{}}}],["registradas",{"_index":233,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["registrado",{"_index":1397,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrarse",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["registration",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["registrationform",{"_index":1357,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["registrationformcomponent",{"_index":129,"title":{"components/RegistrationFormComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["registro",{"_index":1353,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["región",{"_index":223,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{}}}],["reload",{"_index":1694,"title":{},"body":{"index.html":{}}}],["repetida",{"_index":1674,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repita",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["representa",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["representado",{"_index":295,"title":{},"body":{"injectables/AddressService.html":{}}}],["representar",{"_index":1514,"title":{},"body":{"interfaces/User.html":{}}}],["reset",{"_index":1312,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset'},{'name",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["reset.component.css",{"_index":1314,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.html",{"_index":1313,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":1311,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset/password",{"_index":1310,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["respectivos",{"_index":1275,"title":{},"body":{"components/OrderListComponent.html":{}}}],["rest",{"_index":820,"title":{},"body":{"injectables/CardItemService.html":{}}}],["result",{"_index":583,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["result.filter(carditem",{"_index":1072,"title":{},"body":{"injectables/CardItemService.html":{}}}],["resultado",{"_index":518,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{}}}],["results",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{}}}],["return",{"_index":211,"title":{},"body":{"components/AddressCreateComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["revealed",{"_index":976,"title":{},"body":{"injectables/CardItemService.html":{}}}],["reveals",{"_index":975,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rising",{"_index":941,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rogue",{"_index":1035,"title":{},"body":{"injectables/CardItemService.html":{}}}],["rol",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["role",{"_index":1512,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["root",{"_index":299,"title":{},"body":{"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["rounded",{"_index":1022,"title":{},"body":{"injectables/CardItemService.html":{}}}],["route",{"_index":1128,"title":{},"body":{"components/CarditemListComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":491,"title":{},"body":{"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["routeroutlet",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1686,"title":{},"body":{"index.html":{}}}],["running",{"_index":1707,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["r}{r}{r",{"_index":990,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sacrifice",{"_index":687,"title":{},"body":{"injectables/CardItemService.html":{}}}],["salga",{"_index":1183,"title":{},"body":{"components/NavbarComponent.html":{}}}],["same",{"_index":1054,"title":{},"body":{"injectables/CardItemService.html":{}}}],["samepasswordvalidator",{"_index":1376,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["samepasswordvalidator('password','confirmpassword",{"_index":1383,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["samepasswordvalidator(field1",{"_index":1666,"title":{},"body":{"miscellaneous/functions.html":{}}}],["santiago",{"_index":289,"title":{},"body":{"injectables/AddressService.html":{}}}],["scaffolding",{"_index":1698,"title":{},"body":{"index.html":{}}}],["scute",{"_index":937,"title":{},"body":{"injectables/CardItemService.html":{}}}],["se",{"_index":163,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sean",{"_index":1671,"title":{},"body":{"miscellaneous/functions.html":{}}}],["search",{"_index":628,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{}}}],["second",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["segun",{"_index":264,"title":{},"body":{"injectables/AddressService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["segundos",{"_index":1330,"title":{},"body":{"components/PaymentComponent.html":{}}}],["seleccionada",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{}}}],["seleccionado",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["seleccionar",{"_index":1098,"title":{},"body":{"components/CardManageComponent.html":{}}}],["selecionada",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selecionado",{"_index":1206,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["selected",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{}}}],["selectedcard",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["selectedcarditem",{"_index":1491,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedcarditem.quantity",{"_index":1500,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedorder",{"_index":1263,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectedshoppingcart",{"_index":1490,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart,hasstock",{"_index":1506,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist",{"_index":1498,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.findindex(card",{"_index":1497,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist.push(cardcopy",{"_index":1505,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectedshoppingcart.cardlist[cardindex].quantity",{"_index":1501,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["selectfordetail",{"_index":1265,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selectfordetail(selected",{"_index":1276,"title":{},"body":{"components/OrderListComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["serve",{"_index":1688,"title":{},"body":{"index.html":{}}}],["server",{"_index":1685,"title":{},"body":{"index.html":{}}}],["service",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["sesion",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["sesión",{"_index":1195,"title":{},"body":{"components/NavbarComponent.html":{}}}],["session",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":589,"title":{},"body":{"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{}}}],["setcode",{"_index":498,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setea",{"_index":1278,"title":{},"body":{"components/OrderListComponent.html":{}}}],["setear",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["setname",{"_index":499,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{}}}],["setselecetedcard",{"_index":1090,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselecetedcard(card",{"_index":1096,"title":{},"body":{"components/CardManageComponent.html":{}}}],["setselectedcardformanage",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["setselectedcardformanage(selected",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":1340,"title":{},"body":{"components/PaymentComponent.html":{}}}],["setuseridtoshoppingcart",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["shark",{"_index":885,"title":{},"body":{"injectables/CardItemService.html":{}}}],["shoppincart.userid",{"_index":1508,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shopping",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["shoppingcart",{"_index":433,"title":{"interfaces/ShoppingCart.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcart,boolean",{"_index":1488,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.id",{"_index":1339,"title":{},"body":{"components/PaymentComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcart.status",{"_index":1489,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcomponent",{"_index":132,"title":{"components/ShoppingCartComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":1464,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartlist",{"_index":1455,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartservice",{"_index":355,"title":{"injectables/ShoppingCartService.html":{}},"body":{"injectables/AuthService.html":{},"components/OrderListComponent.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["showimage",{"_index":1210,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["shuffle",{"_index":715,"title":{},"body":{"injectables/CardItemService.html":{}}}],["si",{"_index":280,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sigla",{"_index":610,"title":{},"body":{"interfaces/CardItem.html":{}}}],["simbolo",{"_index":1664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["simulacion",{"_index":1333,"title":{},"body":{"components/PaymentComponent.html":{}}}],["simular",{"_index":1331,"title":{},"body":{"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["sistema",{"_index":1510,"title":{},"body":{"interfaces/User.html":{}}}],["sitio",{"_index":600,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/variables.html":{}}}],["six",{"_index":914,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sleccionada",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":224,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spell",{"_index":732,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spell\\'s",{"_index":897,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spells.\\'\\n+2",{"_index":985,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spend",{"_index":982,"title":{},"body":{"injectables/CardItemService.html":{}}}],["spent",{"_index":1058,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/.../app.config.ts",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cart",{"_index":1645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":1653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/account",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/address",{"_index":165,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth",{"_index":1615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/card",{"_index":485,"title":{},"body":{"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"coverage.html":{}}}],["src/app/carditem",{"_index":1117,"title":{},"body":{"components/CarditemListComponent.html":{},"coverage.html":{}}}],["src/app/core/enum/cart",{"_index":1647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/address.model.ts",{"_index":141,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/app/core/models/carditem.model.ts",{"_index":599,"title":{},"body":{"interfaces/CardItem.html":{},"coverage.html":{}}}],["src/app/core/models/shopping",{"_index":1417,"title":{},"body":{"interfaces/ShoppingCart.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1509,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts",{"_index":252,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/app/core/services/address.service.ts:17",{"_index":293,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:45",{"_index":259,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:66",{"_index":273,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/address.service.ts:75",{"_index":268,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:107",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:116",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:124",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:134",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:143",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:156",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:167",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:178",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:186",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:194",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:202",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:210",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:33",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:41",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:63",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:82",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:93",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/cartitem.service.ts",{"_index":611,"title":{},"body":{"injectables/CardItemService.html":{},"coverage.html":{}}}],["src/app/core/services/cartitem.service.ts:18",{"_index":1066,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:340",{"_index":636,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:350",{"_index":629,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:375",{"_index":622,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:398",{"_index":624,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/cartitem.service.ts:407",{"_index":619,"title":{},"body":{"injectables/CardItemService.html":{}}}],["src/app/core/services/shopping",{"_index":1452,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1544,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:111",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:118",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:54",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:88",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:99",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/validators/validators.ts",{"_index":1623,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/login/login.component.ts",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1173,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1187,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1180,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:45",{"_index":1184,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:57",{"_index":1186,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:67",{"_index":1181,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/order",{"_index":1204,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["src/app/password",{"_index":1290,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts",{"_index":1316,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["src/app/payment/payment.component.ts:24",{"_index":1324,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:40",{"_index":1325,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/payment/payment.component.ts:59",{"_index":1332,"title":{},"body":{"components/PaymentComponent.html":{}}}],["src/app/registration",{"_index":1350,"title":{},"body":{"components/RegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/shopping",{"_index":1427,"title":{},"body":{"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":1519,"title":{},"body":{"components/UserManagementComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["started",{"_index":1677,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1052,"title":{},"body":{"injectables/CardItemService.html":{}}}],["state",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/ShoppingCart.html":{}}}],["status.enum",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"components/OrderFinishComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["status.enum.ts",{"_index":1646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stock",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":1704,"title":{},"body":{"index.html":{}}}],["strike",{"_index":743,"title":{},"body":{"injectables/CardItemService.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["su",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["submit",{"_index":188,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["submittext",{"_index":495,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["subtotal",{"_index":1227,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["suficiente",{"_index":1144,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["sumar",{"_index":1270,"title":{},"body":{"components/OrderListComponent.html":{}}}],["sun",{"_index":785,"title":{},"body":{"injectables/CardItemService.html":{}}}],["sus",{"_index":1274,"title":{},"body":{"components/OrderListComponent.html":{}}}],["suscribible",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["suscripcion",{"_index":1185,"title":{},"body":{"components/NavbarComponent.html":{}}}],["swarm",{"_index":938,"title":{},"body":{"injectables/CardItemService.html":{}}}],["symbol",{"_index":1055,"title":{},"body":{"injectables/CardItemService.html":{}}}],["símbolo",{"_index":1413,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["t",{"_index":711,"title":{},"body":{"injectables/CardItemService.html":{}}}],["table",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["tapped",{"_index":714,"title":{},"body":{"injectables/CardItemService.html":{}}}],["target",{"_index":651,"title":{},"body":{"injectables/CardItemService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["tempo",{"_index":1328,"title":{},"body":{"components/PaymentComponent.html":{}}}],["tener",{"_index":1406,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["tenga",{"_index":1654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":1710,"title":{},"body":{"index.html":{}}}],["testing",{"_index":286,"title":{},"body":{"injectables/AddressService.html":{},"index.html":{}}}],["tests",{"_index":1709,"title":{},"body":{"index.html":{}}}],["texto",{"_index":597,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["thassa\\'s",{"_index":810,"title":{},"body":{"injectables/CardItemService.html":{}}}],["that\\'s",{"_index":946,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thb",{"_index":677,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theft",{"_index":1032,"title":{},"body":{"injectables/CardItemService.html":{}}}],["theros",{"_index":678,"title":{},"body":{"injectables/CardItemService.html":{}}}],["thief",{"_index":638,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.addressform",{"_index":208,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('commune",{"_index":215,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('name",{"_index":212,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('number",{"_index":213,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addressform.get('region",{"_index":214,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.addresslist.filter(address",{"_index":316,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.push(newaddress",{"_index":313,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addresslist.reduce((maxid",{"_index":303,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.createaddress(this.logeduser.id,name,number,region,commune",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.additemtoshoppingcart(cardid",{"_index":1141,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.authservice.createaddress(this.addressform.get('name')?.value,this.addressform.get('number')?.value,this.addressform.get('region')?.value,this.addressform.get('commune')?.value",{"_index":216,"title":{},"body":{"components/AddressCreateComponent.html":{}}}],["this.authservice.getcurrentshoppingcart().subscribe(shoppingcart",{"_index":1246,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.authservice.getcurrentuseraddress().subscribe(addresslist",{"_index":242,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.authservice.getrole",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.authservice.getselectedcardformanage",{"_index":543,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.authservice.getuser",{"_index":1531,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.authservice.getuser().id",{"_index":571,"title":{},"body":{"components/CardDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["this.authservice.getuser().role",{"_index":1104,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.isauthenticated().subscribe(status",{"_index":1188,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(this.loginform.get('username')?.value,this.loginform.get('password')?.value",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.registrationform.get('username')?.value,this.registrationform.get('password')?.value",{"_index":1399,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.authservice.logout",{"_index":1193,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setselectedcardformanage(card",{"_index":1101,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.authservice.updateshoppingcartstatus(cartstatus.pagado",{"_index":1252,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.cardform",{"_index":547,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname",{"_index":559,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardname')?.value",{"_index":572,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber",{"_index":563,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardnumber')?.value",{"_index":576,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext",{"_index":569,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtext')?.value",{"_index":582,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype",{"_index":567,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('cardtype')?.value",{"_index":580,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition",{"_index":564,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('condition')?.value",{"_index":577,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image",{"_index":566,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('image')?.value",{"_index":579,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue",{"_index":568,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('manavalue')?.value",{"_index":581,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price",{"_index":565,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('price')?.value",{"_index":578,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity",{"_index":560,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('quantity')?.value",{"_index":573,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode",{"_index":561,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setcode')?.value",{"_index":574,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname",{"_index":562,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.cardform.get('setname')?.value",{"_index":575,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemlist",{"_index":1067,"title":{},"body":{"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["this.carditemlist.filter(carditem",{"_index":1069,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.find(card",{"_index":1082,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.findindex(carditem",{"_index":1078,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.push(card",{"_index":1077,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist.reduce((maxid",{"_index":1076,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemlist[index",{"_index":1081,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.carditemservice.createorupdatecarditem(this.selectedcard",{"_index":584,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.carditemservice.getcard(cardid",{"_index":1492,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carditemservice.getcardlistwithfilters(categoria,search",{"_index":1140,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.carditemservice.getcardslist",{"_index":1100,"title":{},"body":{"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{}}}],["this.cardlist",{"_index":1099,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.createshoppingcar(userid",{"_index":1494,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currentshoppingcart",{"_index":1224,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.asobservable",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.cardlist.foreach(card",{"_index":1447,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.currentshoppingcart.id",{"_index":1248,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["this.currentshoppingcart.next(additemresult[0",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.next(this.shoppingcartservice.createshoppingcar(this.logeduser.id",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.status",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentshoppingcart.value.userid",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser",{"_index":1530,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.currentuser.username",{"_index":1536,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.filterform",{"_index":1190,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.filterform.get('search')?.value.tolowercase",{"_index":1191,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.getcard(cardid).quantity",{"_index":1083,"title":{},"body":{"injectables/CardItemService.html":{}}}],["this.gotodetail",{"_index":1102,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.hasitems",{"_index":1448,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.isloggedin",{"_index":1189,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ispaymentsuccess",{"_index":1341,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isselected",{"_index":1282,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.logeduser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.email",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.firstname",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.id",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.lastname",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.role",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logeduser.username",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.asobservable",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(false",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin.next(true",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.orderlist",{"_index":1283,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.recoverpassform",{"_index":1305,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.recoverpassform.get('email",{"_index":1307,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["this.redirect",{"_index":1342,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.registrationform",{"_index":1377,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('confirmpassword",{"_index":1389,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email",{"_index":1387,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('email')?.value",{"_index":1396,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname",{"_index":1384,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('firstname')?.value",{"_index":1393,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname",{"_index":1385,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('lastname')?.value",{"_index":1394,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password",{"_index":1388,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('password')?.value",{"_index":1395,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username",{"_index":1386,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.get('username')?.value",{"_index":1392,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.registrationform.valid",{"_index":1390,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1137,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["this.router.navigate",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/OrderFinishComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["this.router.navigate(['/buscar/'+search",{"_index":1192,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/card",{"_index":1110,"title":{},"body":{"components/CardManageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1109,"title":{},"body":{"components/CardManageComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["this.router.navigate(['/orden",{"_index":1344,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.router.navigate(['/pago",{"_index":1451,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.selectedcard",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardname",{"_index":548,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardnumber",{"_index":552,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtext",{"_index":558,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.cardtype",{"_index":556,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.condition",{"_index":553,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.createdby",{"_index":570,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.image",{"_index":555,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.manavalue",{"_index":557,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.price",{"_index":554,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.quantity",{"_index":549,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setcode",{"_index":550,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedcard.setname",{"_index":551,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.selectedorder",{"_index":1285,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.setuseridtoshoppingcart",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartlist.filter(shoppincart",{"_index":1507,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.findindex(shoppingcart",{"_index":1484,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.push(newshoppingcart",{"_index":1483,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist.reduce((maxid",{"_index":1479,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartlist[index",{"_index":1486,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.additemtoshoppingcart(this.logeduser.id,cardid,this.currentshoppingcart.value.id",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shoppingcartservice.getallshopppingcartsbyuser(userid",{"_index":1284,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.shoppingcartservice.updateshoppingcart(this.currentshoppingcart.value",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.submittext",{"_index":545,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["this.total",{"_index":1449,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["this.updateform",{"_index":1532,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('email",{"_index":1539,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('firstname",{"_index":1537,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.updateform.get('lastname",{"_index":1538,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["this.useraddress.asobservable",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddress.next(this.addressservice.getaddressbyuser(this.logeduser.id",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useraddresslist",{"_index":243,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["this.userlist.find(user",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.findindex(user",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.push(newuser",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist.reduce((maxid",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userlist[index",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrole",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.userservice.createuser",{"_index":1391,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["this.userservice.getuserauth(username,password",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser(this.logeduser",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":984,"title":{},"body":{"injectables/CardItemService.html":{}}}],["though",{"_index":983,"title":{},"body":{"injectables/CardItemService.html":{}}}],["throne",{"_index":641,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tibalt",{"_index":971,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tiene",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{}}}],["tine",{"_index":1444,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["tipo",{"_index":595,"title":{},"body":{"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CarditemListComponent.html":{}}}],["titan",{"_index":674,"title":{},"body":{"injectables/CardItemService.html":{}}}],["title",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":895,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n",{"_index":930,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n+1",{"_index":650,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\ntreasures",{"_index":961,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{1}{g",{"_index":775,"title":{},"body":{"injectables/CardItemService.html":{}}}],["token.\\n{t",{"_index":776,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tokens.\\nwhenever",{"_index":1000,"title":{},"body":{"injectables/CardItemService.html":{}}}],["top",{"_index":817,"title":{},"body":{"injectables/CardItemService.html":{}}}],["total",{"_index":1207,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["toughness",{"_index":661,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trae",{"_index":1135,"title":{},"body":{"components/CarditemListComponent.html":{}}}],["trample",{"_index":1014,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample.\\nequip",{"_index":744,"title":{},"body":{"injectables/CardItemService.html":{}}}],["trample\\nwhenever",{"_index":925,"title":{},"body":{"injectables/CardItemService.html":{}}}],["treasure",{"_index":960,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["triple",{"_index":877,"title":{},"body":{"injectables/CardItemService.html":{}}}],["true",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["tupla",{"_index":1487,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["turn",{"_index":803,"title":{},"body":{"injectables/CardItemService.html":{}}}],["turns.\\nlands",{"_index":839,"title":{},"body":{"injectables/CardItemService.html":{}}}],["tus",{"_index":92,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/OrderFinishComponent.html":{}}}],["twice",{"_index":1017,"title":{},"body":{"injectables/CardItemService.html":{}}}],["two",{"_index":962,"title":{},"body":{"injectables/CardItemService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"interfaces/CardItem.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":841,"title":{},"body":{"injectables/CardItemService.html":{}}}],["typhoon",{"_index":886,"title":{},"body":{"injectables/CardItemService.html":{}}}],["un",{"_index":271,"title":{},"body":{"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"components/CarditemListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["under",{"_index":763,"title":{},"body":{"injectables/CardItemService.html":{}}}],["unit",{"_index":1708,"title":{},"body":{"index.html":{}}}],["unless",{"_index":688,"title":{},"body":{"injectables/CardItemService.html":{}}}],["uno",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["untap",{"_index":719,"title":{},"body":{"injectables/CardItemService.html":{}}}],["until",{"_index":801,"title":{},"body":{"injectables/CardItemService.html":{}}}],["up",{"_index":819,"title":{},"body":{"injectables/CardItemService.html":{}}}],["updateaddress",{"_index":257,"title":{},"body":{"injectables/AddressService.html":{}}}],["updateaddress(updateaddress",{"_index":272,"title":{},"body":{"injectables/AddressService.html":{}}}],["updatebasicinfo",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatebasicinfo(firstname",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedshoppingcart",{"_index":1474,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedshoppingcart.id",{"_index":1485,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateduser",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.username",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["updateform",{"_index":1521,"title":{},"body":{"components/UserManagementComponent.html":{}}}],["updateshoppingcart",{"_index":1458,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcart(updatedshoppingcart",{"_index":1472,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updateshoppingcartstatus",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateshoppingcartstatus(status",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(updateduser",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":606,"title":{},"body":{"interfaces/CardItem.html":{},"components/CarditemListComponent.html":{}}}],["uro",{"_index":673,"title":{},"body":{"injectables/CardItemService.html":{}}}],["usario",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usarlist",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":1700,"title":{},"body":{"index.html":{}}}],["user",{"_index":72,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"interfaces/Address.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.email",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":305,"title":{},"body":{"injectables/AddressService.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["user1",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["useraddress",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["useraddresslist",{"_index":234,"title":{},"body":{"components/AddressManagementComponent.html":{}}}],["userid",{"_index":154,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{}}}],["userlist",{"_index":1546,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagementcomponent",{"_index":28,"title":{"components/UserManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["username",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["userrole",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userservice",{"_index":354,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservie",{"_index":1298,"title":{},"body":{"components/PasswordRecoveryComponent.html":{}}}],["uso",{"_index":1402,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"interfaces/ShoppingCart.html":{},"injectables/ShoppingCartService.html":{},"interfaces/User.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":149,"title":{},"body":{"interfaces/Address.html":{},"injectables/AddressService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ususario",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/PasswordRecoveryComponent.html":{}}}],["vacio",{"_index":626,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["validacion",{"_index":1238,"title":{},"body":{"components/OrderFinishComponent.html":{}}}],["validaciones",{"_index":185,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{}}}],["validar",{"_index":620,"title":{},"body":{"injectables/CardItemService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":201,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validatorfn",{"_index":202,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":199,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.email",{"_index":1306,"title":{},"body":{"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.maxlength(16",{"_index":1382,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(20",{"_index":1380,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.maxlength(50",{"_index":1379,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(5",{"_index":1378,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["validators.minlength(8",{"_index":1381,"title":{},"body":{"components/RegistrationFormComponent.html":{}}}],["validators.required",{"_index":210,"title":{},"body":{"components/AddressCreateComponent.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["valki",{"_index":969,"title":{},"body":{"injectables/CardItemService.html":{}}}],["valor",{"_index":160,"title":{},"body":{"interfaces/Address.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"interfaces/ShoppingCart.html":{},"components/ShoppingCartComponent.html":{}}}],["valores",{"_index":275,"title":{},"body":{"injectables/AddressService.html":{},"components/CardDetailComponent.html":{},"injectables/ShoppingCartService.html":{},"injectables/UserService.html":{}}}],["valparaiso",{"_index":292,"title":{},"body":{"injectables/AddressService.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PaymentComponent.html":{},"components/ShoppingCartComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.\\ncycling",{"_index":898,"title":{},"body":{"injectables/CardItemService.html":{}}}],["var",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"components/AppComponent.html":{},"components/CardDetailComponent.html":{},"injectables/CardItemService.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PasswordResetComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{}}}],["variable",{"_index":238,"title":{},"body":{"components/AddressManagementComponent.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1157,"title":{"miscellaneous/variables.html":{}},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["varieble",{"_index":1443,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["vehicle",{"_index":997,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ver",{"_index":1257,"title":{},"body":{"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{}}}],["verifica",{"_index":1327,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":1682,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1712,"title":{},"body":{"index.html":{}}}],["vigilance",{"_index":850,"title":{},"body":{"injectables/CardItemService.html":{}}}],["void",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AddressCreateComponent.html":{},"components/AddressManagementComponent.html":{},"injectables/AddressService.html":{},"injectables/AuthService.html":{},"components/CardDetailComponent.html":{},"components/CardManageComponent.html":{},"components/CarditemListComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderFinishComponent.html":{},"components/OrderListComponent.html":{},"components/PasswordRecoveryComponent.html":{},"components/PaymentComponent.html":{},"components/RegistrationFormComponent.html":{},"components/ShoppingCartComponent.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{}}}],["volver",{"_index":598,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["vorinclex",{"_index":1008,"title":{},"body":{"injectables/CardItemService.html":{}}}],["válido",{"_index":1416,"title":{},"body":{"components/RegistrationFormComponent.html":{},"components/UserManagementComponent.html":{}}}],["warrior",{"_index":912,"title":{},"body":{"injectables/CardItemService.html":{}}}],["way",{"_index":977,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wellspring",{"_index":1048,"title":{},"body":{"injectables/CardItemService.html":{}}}],["whenever",{"_index":892,"title":{},"body":{"injectables/CardItemService.html":{}}}],["white",{"_index":794,"title":{},"body":{"injectables/CardItemService.html":{}}}],["win",{"_index":825,"title":{},"body":{"injectables/CardItemService.html":{}}}],["winota",{"_index":907,"title":{},"body":{"injectables/CardItemService.html":{}}}],["wizard",{"_index":815,"title":{},"body":{"injectables/CardItemService.html":{}}}],["works",{"_index":1315,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["wrath",{"_index":676,"title":{},"body":{"injectables/CardItemService.html":{}}}],["w}{u}{b}{r}{g",{"_index":1057,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x",{"_index":755,"title":{},"body":{"injectables/CardItemService.html":{}}}],["x/x",{"_index":894,"title":{},"body":{"injectables/CardItemService.html":{}}}],["xito",{"_index":587,"title":{},"body":{"components/CardDetailComponent.html":{}}}],["x}{1}{u}\\nwhen",{"_index":899,"title":{},"body":{"injectables/CardItemService.html":{}}}],["y",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CardItem.html":{},"components/OrderListComponent.html":{},"components/RegistrationFormComponent.html":{},"injectables/ShoppingCartService.html":{},"components/UserManagementComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["y/o",{"_index":630,"title":{},"body":{"injectables/CardItemService.html":{}}}],["ya",{"_index":1401,"title":{},"body":{"components/RegistrationFormComponent.html":{},"injectables/UserService.html":{}}}],["zendikar",{"_index":940,"title":{},"body":{"injectables/CardItemService.html":{}}}],["znr",{"_index":939,"title":{},"body":{"injectables/CardItemService.html":{}}}],["zone.js",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal para panel de administracion de aplicacion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserManagementComponent\n                                AddressManagementComponent\n                                OrderListComponent\n                                CardManageComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./account-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/account-management/account-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        al iniciar el componente obtiene el rol del usuario actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/account-management/account-management.component.ts:30\n                        \n                    \n\n            \n                \n                    Rol de usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { UserManagementComponent } from '../user-management/user-management.component';\nimport { AddressManagementComponent } from '../address-management/address-management.component';\nimport { OrderListComponent } from '../order-list/order-list.component';\nimport { CardManageComponent } from '../card-manage/card-manage.component';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente principal para panel de administracion de aplicacion.\n */\n@Component({\n  selector: 'app-account-management',\n  standalone: true,\n  imports: [\n    UserManagementComponent,\n    AddressManagementComponent,\n    OrderListComponent,\n    CardManageComponent,\n    CommonModule\n  ],\n  templateUrl: './account-management.component.html',\n  styleUrl: './account-management.component.css'\n})\nexport class AccountManagementComponent {\n  /**\n   * Rol de usuario\n   */\n  userRole: string = '';\n\n  /**\n   * constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   */\n  constructor(\n    private authService : AuthService\n  ){}\n\n  /**\n   * al iniciar el componente obtiene el rol del usuario actual\n   */\n  ngOnInit(): void {\n    this.userRole = this.authService.getRole();\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Cuenta\n        \n        \n        Tus órdenes\n        \n        \n        Tus direcciones\n        \n        \n        Administrar catálogo\n        \n        \n            Administrar órdenes\n        \n    \n    \n          \n        \n          \n        \n        5\n    \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Cuenta                        Tus órdenes                        Tus direcciones                        Administrar catálogo                            Administrar órdenes                                                            5     '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/address.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura para la informacion de entrega de los usuarios.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Commune\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Number\n                                        \n                                \n                                \n                                        \n                                            Region\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Commune\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Commune:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comuna de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region de direccion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor numerico que se corresponde al id del Objeto User.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Address{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Valor numerico que se corresponde al id del Objeto User.\n     */\n    UserId: number;\n    /**\n     * Nombre de direccion.\n     */\n    Name: string;\n    /**\n     * Numero de direccion.\n     */\n    Number: number;\n    /**\n     * Region de direccion.\n     */\n    Region: string;\n    /**\n     * Comuna de direccion.\n     */\n    Commune: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressCreateComponent.html":{"url":"components/AddressCreateComponent.html","title":"component - AddressCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-create/address-create.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de creacion de direccion de entrega del cliente\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-create\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-create.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-create.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    number\n                                \n                                \n                                    region\n                                \n                                \n                                    commune\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-create/address-create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-create/address-create.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Acion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/address-create/address-create.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de direccion\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        number\n                    \n                \n\n                \n                    \n                        getnumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        region\n                    \n                \n\n                \n                    \n                        getregion()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        commune\n                    \n                \n\n                \n                    \n                        getcommune()\n                    \n                \n                            \n                                \n                                    Defined in src/app/address-create/address-create.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator, onlyNumbersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente de formulario de creacion de direccion de entrega del cliente\n */\n@Component({\n  selector: 'app-address-create',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './address-create.component.html',\n  styleUrl: './address-create.component.css'\n})\nexport class AddressCreateComponent {\n\n  /**\n   * Formulario de direccion\n   */\n  addressForm!: FormGroup;\n\n  /**\n   * Constructor con dependencia a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de formulario de creacion de direccion con definicion de validaciones.\n   */\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('', [\n        Validators.required,\n      ]),\n      number: new FormControl('', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      region: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ]),\n      commune: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator()\n      ])\n    });\n  }\n\n  get name(){\n    return this.addressForm.get('name');\n  }\n\n  get number(){\n    return this.addressForm.get('number');\n  }\n\n  get region(){\n    return this.addressForm.get('region');\n  }\n\n  get commune(){\n    return this.addressForm.get('commune');\n  }\n\n  /**\n   * Acion submit de formulario\n   */\n  onSubmit(){\n    this.authService.createAddress(this.addressForm.get('name')?.value,this.addressForm.get('number')?.value,this.addressForm.get('region')?.value,this.addressForm.get('commune')?.value);\n    alert('Dirección agregada');\n  }\n\n}\n\n    \n\n    \n        Nueva Dirección\n\n    \n\n      \n        Dirección\n        \n        \n            Dirección es obligatorio.\n        \n      \n\n      \n        Región\n        \n        \n            Región es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Comuna\n        \n        \n            Comuna es obligatorio.\n            Solo puede contener letras.\n        \n      \n\n      \n        Número\n        \n        \n            Número es obligatorio.\n            Solo puede contener números.\n        \n      \n    \n\n    Agregar dirección\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Nueva Dirección                  Dirección                            Dirección es obligatorio.                            Región                            Región es obligatorio.            Solo puede contener letras.                            Comuna                            Comuna es obligatorio.            Solo puede contener letras.                            Número                            Número es obligatorio.            Solo puede contener números.                      Agregar dirección'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddressManagementComponent.html":{"url":"components/AddressManagementComponent.html","title":"component - AddressManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddressManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/address-management/address-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar las direcciones registradas del usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-address-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AddressCreateComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./address-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./address-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userAddressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/address-management/address-management.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor con dependencia a manejo de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/address-management/address-management.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Inciacion de variable del listado de direcciones.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userAddressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [] as Address[]\n                    \n                \n                    \n                        \n                                Defined in src/app/address-management/address-management.component.ts:24\n                        \n                    \n\n            \n                \n                    Listado de direcciones del usuario\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AddressCreateComponent } from '../address-create/address-create.component';\nimport { CommonModule } from '@angular/common';\nimport { Address } from '../core/models/address.model';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * Componente para listar las direcciones registradas del usuario\n */\n@Component({\n  selector: 'app-address-management',\n  standalone: true,\n  imports: [\n    AddressCreateComponent,\n    CommonModule\n  ],\n  templateUrl: './address-management.component.html',\n  styleUrl: './address-management.component.css'\n})\nexport class AddressManagementComponent {\n  /**\n   * Listado de direcciones del usuario\n   */\n  userAddressList: Address[] = [] as Address[];\n\n  /**\n   * Constructor con dependencia a manejo de sesion\n   * @param authService Funciones de manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Inciacion de variable del listado de direcciones.\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentUserAddress().subscribe(addressList => {\n      this.userAddressList = addressList;\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                Dirección\n                Número\n                Región\n                Comuna\n            \n        \n        \n            \n                {{address.Name}}\n                {{address.Number}}\n                {{address.Region}}\n                {{address.Commune}}\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Dirección                Número                Región                Comuna                                                        {{address.Name}}                {{address.Number}}                {{address.Region}}                {{address.Commune}}                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddressManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/address.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAddress\n                            \n                            \n                                getAddressByUser\n                            \n                            \n                                updateAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(userId: number, name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear Direcciones de entrega.\nEl id creado es el correlativo segun el los items del listado addressList.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Idenificador de Usuario\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccion\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressByUser\n                        \n                    \n                \n            \n            \n                \ngetAddressByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Funcion que obtiene las dirreciones dado un id de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Address[]\n\n                        \n                            \n                                Listado de direcciones de usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(updateAddress: Address)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/address.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Funcion para modificar direcciones\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateAddress\n                                            \n                                                            Address\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto de direccion con valores actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se logro realizar la actualizacion.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/address.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Address } from '../models/address.model';\n\n/**\n * @description\n * Funciones Mock para manejar la informacion de direccion de entrega de los usuarios.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService{\n\n    /**\n     * Mock de Direcciones de netrga de los usuario representado en un listado del Objeto Address.\n     */\n    addressList: Address[] = [\n        {\n            id: 1,\n            UserId: 1,\n            Name: 'Av Testing',\n            Number: 123,\n            Region: 'Metropolitana',\n            Commune: 'Santiago',\n        },\n        {\n            id: 2,\n            UserId: 2,\n            Name: 'Av Framework',\n            Number: 123,\n            Region: 'Valparaiso',\n            Commune: 'Valparaiso'\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear Direcciones de entrega.\n     * El id creado es el correlativo segun el los items del listado addressList.\n     * @param userId Idenificador de Usuario\n     * @param name Nombre de direccion\n     * @param number Numero de direccion\n     * @param region Region de direccion\n     * @param Commune Comuna de direccion\n     */\n    createAddress(userId: number, name: string, number: number, region: string, Commune: string){\n        let newAddress = {} as Address;\n        const newId = this.addressList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newAddress.id=newId;\n        newAddress.UserId = userId;\n        newAddress.Name = name;\n        newAddress.Number = number;\n        newAddress.Region = region;\n        newAddress.Commune = Commune;\n\n        this.addressList.push(newAddress);\n    }\n\n    /**\n     * Funcion para modificar direcciones\n     * @param updateAddress Objeto de direccion con valores actualizado.\n     * @returns booleano que indica si se logro realizar la actualizacion.\n     */\n    updateAddress(updateAddress: Address):boolean{\n        return false;\n    }\n\n    /**\n     * Funcion que obtiene las dirreciones dado un id de usuario.\n     * @param userId identificador de usuario\n     * @returns Listado de direcciones de usuario.\n     */\n    getAddressByUser(userId: number): Address[]{\n        return this.addressList.filter(address => address.UserId === userId) || [] as Address[];\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'cardshop'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Titulo de aplicacion\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n/**\n * @description\n * Componente principal de la aplicacion\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    NavbarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /**\n   * Titulo de aplicacion\n   */\n  title = 'cardshop';\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones para manejo de informacion persistente del usuario durante su session\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentShoppingCart\n                            \n                            \n                                    Private\n                                logedUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                selectedCard\n                            \n                            \n                                    Private\n                                userAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createAddress\n                            \n                            \n                                getCurrentShoppingCart\n                            \n                            \n                                getCurrentUserAddress\n                            \n                            \n                                getRole\n                            \n                            \n                                getSelectedCardForManage\n                            \n                            \n                                getUser\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSelectedCardForManage\n                            \n                            \n                                setUserIdToShoppingCart\n                            \n                            \n                                updateBasicInfo\n                            \n                            \n                                updateShoppingCartStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, addressService: AddressService, shoppingCartService: ShoppingCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de usuario\n\n                                                        \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de direcciones\n\n                                                        \n                                                \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de carrito\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si la carta tiene stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAddress\n                        \n                    \n                \n            \n            \n                \ncreateAddress(name: string, number: number, region: string, Commune: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Funcion para crear una direccion de entrega para el usario logueado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de direccon\n\n                                            \n                                        \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Numero de direccion\n\n                                            \n                                        \n                                        \n                                                region\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Region de direccion\n\n                                            \n                                        \n                                        \n                                                Commune\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Comuna de direccion\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentShoppingCart\n                        \n                    \n                \n            \n            \n                \ngetCurrentShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:178\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener al carrito de compras de la sesion actual\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener las direcciones del usuario actual de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Listado de direcciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Obtiene el rol del usuario logueado\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Rol de usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \ngetSelectedCardForManage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:210\n                        \n                    \n\n\n            \n                \n                        Fucion para obteener carta selecionada\n\n\n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Carta seleccionada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Funcion para obetener objeto User\n\n\n                        \n                            Returns :         User\n\n                        \n                            \n                                Usuario Actual\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:194\n                        \n                    \n\n\n            \n                \n                        Funcion que retorna booleano si hay un usuario de la sesion\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:134\n                        \n                    \n\n\n            \n                \n                        Funcion para indicar si se ha logueado un usuario\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si se ha logueado un usario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Funcion para loguear usuario en la aplicacion\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro loguear\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Funcion para desloguearse de la aplicacion.\nSe redirige a la pantalla principal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedCardForManage\n                        \n                    \n                \n            \n            \n                \nsetSelectedCardForManage(selected: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Funcion para setear la carta selecionada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carta sleccionada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserIdToShoppingCart\n                        \n                    \n                \n            \n            \n                \nsetUserIdToShoppingCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar id de usuario a un carrito.\nSe puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBasicInfo\n                        \n                    \n                \n            \n            \n                \nupdateBasicInfo(firstName: string, lastName: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Ususario actualizado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCartStatus\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCartStatus(status: CartStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:156\n                        \n                    \n\n\n            \n                \n                        Funcion para cambiar el estado al carrito de compras de la sesion actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            CartStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor de estado del Carrito\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({} as ShoppingCart)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n            \n                \n                    Variable suscribible para guardar el carrito de compras\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:25\n                        \n                    \n\n            \n                \n                    Variable para manejo de informacion de ususario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:29\n                        \n                    \n\n            \n                \n                    Variable suscribible booleana para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:41\n                        \n                    \n\n            \n                \n                    variable para guardar la carta seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as Address[])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:33\n                        \n                    \n\n            \n                \n                    Variable suscribible para almacenar las direcciones del ususario logueado\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\nimport { User } from '../models/user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Address } from '../models/address.model';\nimport { AddressService } from './address.service';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Funciones para manejo de informacion persistente del usuario durante su session\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  /**\n   * Variable para manejo de informacion de ususario\n   */\n  private logedUser: User = {} as User;\n  /**\n   * Variable suscribible booleana para indicar si el usuario se encuentra logueado\n   */\n  private loggedIn = new BehaviorSubject(false);\n  /**\n   * Variable suscribible para almacenar las direcciones del ususario logueado\n   */\n  private userAddress = new BehaviorSubject([] as Address[]);\n  /**\n   * Variable suscribible para guardar el carrito de compras\n   */\n  private currentShoppingCart = new BehaviorSubject({} as ShoppingCart);\n  /**\n   * variable para guardar la carta seleccionada\n   */\n  private selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param userService Funciones de manejo de usuario\n   * @param addressService Funciones de manejo de direcciones\n   * @param shoppingCartService Funciones de manejo de carrito\n   */\n  constructor(\n    private router: Router, \n    private userService: UserService,\n    private addressService: AddressService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  /**\n   * Funcion para loguear usuario en la aplicacion\n   * @param userName Nombre de usuario\n   * @param password contrasena de usuario\n   * @returns booleano indicando si se logro loguear\n   */\n  login(userName: string, password: string): boolean {\n\n    this.logedUser = this.userService.getUserAuth(userName,password);\n\n    if(this.logedUser.id === undefined || this.logedUser.id === 0 || this.logedUser.UserName === '' ){\n        this.loggedIn.next(false);\n        return false;\n    }\n\n    this.setUserIdToShoppingCart();\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n    this.loggedIn.next(true);\n    return true;\n  }\n\n  /**\n   * Funcion para obetener objeto User\n   * @returns Usuario Actual\n   */\n  getUser(){\n    return this.logedUser;\n  }\n\n  /**\n   * Funcion para editar Nombre, Apellido y correo electronico del usuario logueado\n   * @param firstName Nombre\n   * @param lastName Apellido\n   * @param email Correo electronico\n   * @returns Ususario actualizado\n   */\n  updateBasicInfo(firstName: string, lastName: string, email: string): boolean {\n    this.logedUser.FirstName = firstName;\n    this.logedUser.LastName = lastName;\n    this.logedUser.Email = email;\n    return this.userService.updateUser(this.logedUser);\n  }\n\n  /**\n   * Funcion para crear una direccion de entrega para el usario logueado.\n   * @param name Nombre de direccon\n   * @param number Numero de direccion\n   * @param region Region de direccion\n   * @param Commune Comuna de direccion\n   */\n  createAddress(name: string, number: number, region: string, Commune: string){\n    this.addressService.createAddress(this.logedUser.id,name,number,region,Commune);\n    this.userAddress.next(this.addressService.getAddressByUser(this.logedUser.id));\n  }\n\n  /**\n   * Obtiene el rol del usuario logueado\n   * @returns Rol de usuario\n   */\n  getRole(): string {\n    return this.logedUser.Role;\n  }\n\n  /**\n   * Funcion para desloguearse de la aplicacion.\n   * Se redirige a la pantalla principal.\n   */\n  logout() {\n    this.logedUser = {} as User;\n    this.loggedIn.next(false);\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Funcion para indicar si se ha logueado un usuario\n   * @returns booleano que indica si se ha logueado un usario\n   */\n  isLoggedIn(){\n    return this.logedUser.id !== 0 && this.logedUser.UserName !== '' && this.logedUser.id !== undefined && this.logedUser.UserName !== undefined;\n  }\n\n  /**\n   * Funcion para agregar una carta al carrito de compras, si no hay carrito de compras en la sesion actual crea uno.\n   * @param cardId Identificador de carta seleccionado\n   * @returns booleano que indica si la carta tiene stock\n   */\n  addItemToShoppingCart(cardId: number): boolean{\n    if(this.currentShoppingCart.value.id === undefined || this.currentShoppingCart.value.Status != CartStatus.Abierto){\n      this.currentShoppingCart.next(this.shoppingCartService.createShoppingcar(this.logedUser.id));\n    }\n    const addItemResult = this.shoppingCartService.addItemToShoppingCart(this.logedUser.id,cardId,this.currentShoppingCart.value.id);\n    this.currentShoppingCart.next(addItemResult[0]);\n    return addItemResult[1];\n  }\n\n  /**\n   * Funcion para cambiar el estado al carrito de compras de la sesion actual\n   * @param status Valor de estado del Carrito\n   */\n  updateShoppingCartStatus(status: CartStatus){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.Status = status;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para agregar id de usuario a un carrito.\n   * Se puede crear un carrito de forma anonima al momento de loguearse se asigna el id de usuario al carrito.\n   */\n  setUserIdToShoppingCart(){\n    if(this.currentShoppingCart.value.id !== undefined){\n      this.currentShoppingCart.value.UserId = this.logedUser.id;\n      this.shoppingCartService.updateShoppingCart(this.currentShoppingCart.value);\n    }\n  }\n\n  /**\n   * Funcion para obtener al carrito de compras de la sesion actual\n   * @returns \n   */\n  getCurrentShoppingCart(){\n    return this.currentShoppingCart.asObservable();\n  }\n\n  /**\n   * Funcion para obtener las direcciones del usuario actual de la sesion\n   * @returns Listado de direcciones\n   */\n  getCurrentUserAddress(){\n    return this.userAddress.asObservable();\n  }\n\n  /**\n   * Funcion que retorna booleano si hay un usuario de la sesion\n   * @returns \n   */\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n\n  /**\n   * Funcion para setear la carta selecionada\n   * @param selected Carta sleccionada\n   */\n  setSelectedCardForManage(selected: CardItem){\n    this.selectedCard = selected;\n  }\n\n  /**\n   * Fucion para obteener carta selecionada\n   * @returns Carta seleccionada\n   */\n  getSelectedCardForManage(): CardItem{\n    return this.selectedCard;\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailComponent.html":{"url":"components/CardDetailComponent.html","title":"component - CardDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-detail/card-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para formulario para editar cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardForm\n                            \n                            \n                                selectedCard\n                            \n                            \n                                submitText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CardName\n                                \n                                \n                                    Quantity\n                                \n                                \n                                    SetCode\n                                \n                                \n                                    SetName\n                                \n                                \n                                    CardNumber\n                                \n                                \n                                    Condition\n                                \n                                \n                                    Price\n                                \n                                \n                                    Image\n                                \n                                \n                                    CardType\n                                \n                                \n                                    ManaValue\n                                \n                                \n                                    CardText\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                            \n                        \n\n                \n                    \n                            Contructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de cartas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Iniciacion de Formulario de editar cartas\nIniciacion de valores de carta selecionada\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-detail/card-detail.component.ts:152\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario para editar cartas\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:29\n                        \n                    \n\n            \n                \n                    Fromulario para editar carta del catalogo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem\n\n                    \n                \n                \n                    \n                        Default value : {} as CardItem\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:37\n                        \n                    \n\n            \n                \n                    Variable para item de carta selecionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/card-detail/card-detail.component.ts:33\n                        \n                    \n\n            \n                \n                    Variable para mensaje de resultado de submit\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CardName\n                    \n                \n\n                \n                    \n                        getCardName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:105\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Quantity\n                    \n                \n\n                \n                    \n                        getQuantity()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:109\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetCode\n                    \n                \n\n                \n                    \n                        getSetCode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:113\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SetName\n                    \n                \n\n                \n                    \n                        getSetName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:117\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardNumber\n                    \n                \n\n                \n                    \n                        getCardNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Condition\n                    \n                \n\n                \n                    \n                        getCondition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:125\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Price\n                    \n                \n\n                \n                    \n                        getPrice()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Image\n                    \n                \n\n                \n                    \n                        getImage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardType\n                    \n                \n\n                \n                    \n                        getCardType()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:137\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ManaValue\n                    \n                \n\n                \n                    \n                        getManaValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:141\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        CardText\n                    \n                \n\n                \n                    \n                        getCardText()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card-detail/card-detail.component.ts:145\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { CardItem } from '../core/models/carditem.model';\nimport { onlyNumbersValidator } from '../core/validators/validators';\nimport { CardItemService } from '../core/services/cartitem.service';\n\n/**\n * @description\n * Componente para formulario para editar cartas del catalogo\n */\n@Component({\n  selector: 'app-card-detail',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './card-detail.component.html',\n  styleUrl: './card-detail.component.css'\n})\nexport class CardDetailComponent {\n  /**\n   * Fromulario para editar carta del catalogo\n   */\n  cardForm!: FormGroup;\n  /**\n   * Variable para mensaje de resultado de submit\n   */\n  submitText: string = '';\n  /**\n   * Variable para item de carta selecionada\n   */\n  selectedCard: CardItem = {} as CardItem;\n\n  /**\n   * Contructor con dependencias a la capa service\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de manejo de cartas\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService,\n  ){}\n\n  /**\n   * Iniciacion de Formulario de editar cartas\n   * Iniciacion de valores de carta selecionada\n   */\n  ngOnInit(): void {\n\n    this.selectedCard = this.authService.getSelectedCardForManage();\n\n    if(this.selectedCard.Id === undefined){\n      this.submitText = 'Agregar Carta';\n    }else{\n      this.submitText = 'Actualizar Carta';\n    }\n\n    this.cardForm = new FormGroup({\n      CardName: new FormControl( this.selectedCard.CardName || '', [\n        Validators.required\n      ]),\n      Quantity: new FormControl( this.selectedCard.Quantity || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      SetCode: new FormControl( this.selectedCard.SetCode || '', [\n        Validators.required\n      ]),\n      SetName: new FormControl( this.selectedCard.SetName || '', [\n        Validators.required\n      ]),\n      CardNumber: new FormControl( this.selectedCard.CardNumber || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Condition: new FormControl( this.selectedCard.Condition || '', [\n        Validators.required\n      ]),\n      Price: new FormControl( this.selectedCard.Price || '', [\n        Validators.required,\n        onlyNumbersValidator()\n      ]),\n      Image: new FormControl( this.selectedCard.Image || '', [\n        Validators.required\n      ]),\n      CardType: new FormControl( this.selectedCard.CardType || '', [\n        Validators.required\n      ]),\n      ManaValue: new FormControl( this.selectedCard.ManaValue || '', [\n        Validators.required\n      ]),\n      CardText: new FormControl( this.selectedCard.CardText || '', [\n        Validators.required\n      ]),\n    });\n  }\n\n  get CardName (){\n    return this.cardForm.get('CardName')\n  }\n\n  get Quantity (){\n    return this.cardForm.get('Quantity')\n  }\n\n  get SetCode (){\n    return this.cardForm.get('SetCode')\n  }\n\n  get SetName (){\n    return this.cardForm.get('SetName')\n  }\n\n  get CardNumber (){\n    return this.cardForm.get('CardNumber')\n  }\n\n  get Condition (){\n    return this.cardForm.get('Condition')\n  }\n\n  get Price (){\n    return this.cardForm.get('Price')\n  }\n\n  get Image (){\n    return this.cardForm.get('Image')\n  }\n\n  get CardType (){\n    return this.cardForm.get('CardType')\n  }\n\n  get ManaValue (){\n    return this.cardForm.get('ManaValue')\n  }\n  \n  get CardText (){\n    return this.cardForm.get('CardText')\n  }\n\n  /**\n   * Accion de submit de formulario para editar cartas\n   */\n  onSubmit(): void {\n    this.selectedCard.CreatedBy = \n      this.selectedCard.CreatedBy ? this.selectedCard.CreatedBy : this.authService.getUser().id;\n    this.selectedCard.CardName = this.cardForm.get('CardName')?.value;\n    this.selectedCard.Quantity = this.cardForm.get('Quantity')?.value;\n    this.selectedCard.SetCode = this.cardForm.get('SetCode')?.value;\n    this.selectedCard.SetName = this.cardForm.get('SetName')?.value;\n    this.selectedCard.CardNumber = this.cardForm.get('CardNumber')?.value;\n    this.selectedCard.Condition = this.cardForm.get('Condition')?.value;\n    this.selectedCard.Price = this.cardForm.get('Price')?.value;\n    this.selectedCard.Image = this.cardForm.get('Image')?.value;\n    this.selectedCard.CardType = this.cardForm.get('CardType')?.value;\n    this.selectedCard.ManaValue = this.cardForm.get('ManaValue')?.value;\n    this.selectedCard.CardText = this.cardForm.get('CardText')?.value;\n\n    const result = this.cardItemService.createOrUpdateCardItem(this.selectedCard);\n    if(result){\n      alert(this.submitText + ' con éxito');\n    }else{\n      alert(this.submitText + ' con error');\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n\n          \n    \n          \n            Nombre de carta\n            \n              \n            \n                Nombre de carta es obligatorio.\n              \n            \n          \n\n          \n            Nombre de set\n            \n              \n            \n                Nombre de set es obligatorio.\n              \n            \n          \n\n          \n            Codigo de set\n            \n              \n            \n                Codigo de set es obligatorio.\n              \n            \n          \n\n          \n            Número de carta\n            \n              \n            \n                Número de carta es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Condicion de carta\n            \n              \n            \n                Condicion de carta es obligatorio.\n              \n            \n          \n\n          \n            Precio\n            \n              \n            \n                Precio es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n            Cantidad\n            \n              \n            \n                Cantidad es obligatorio.\n                Solo puede contener números.\n              \n            \n          \n\n          \n\n          \n            Imagen\n            \n              \n            \n                Imagen es obligatorio.\n              \n            \n          \n\n          \n            Tipo de carta\n            \n              \n            \n                Tipo de carta es obligatorio.\n              \n            \n          \n\n          \n            Valor de Mana\n            \n              \n            \n                Valor de Mana es obligatorio.\n              \n            \n          \n\n          \n            Texto de carta\n            \n              \n            \n                Texto de carta es obligatorio.\n              \n            \n          \n\n          \n\n          \n            Volver\n            {{submitText}}\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Nombre de carta                                                      Nombre de carta es obligatorio.                                                          Nombre de set                                                      Nombre de set es obligatorio.                                                          Codigo de set                                                      Codigo de set es obligatorio.                                                          Número de carta                                                      Número de carta es obligatorio.                Solo puede contener números.                                                                    Condicion de carta                                                      Condicion de carta es obligatorio.                                                          Precio                                                      Precio es obligatorio.                Solo puede contener números.                                                          Cantidad                                                      Cantidad es obligatorio.                Solo puede contener números.                                                                    Imagen                                                      Imagen es obligatorio.                                                          Tipo de carta                                                      Tipo de carta es obligatorio.                                                          Valor de Mana                                                      Valor de Mana es obligatorio.                                                          Texto de carta                                                      Texto de carta es obligatorio.                                                                    Volver            {{submitText}}                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/carditem.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir la estructura de Cartas del catalogo y el sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CardName\n                                        \n                                \n                                \n                                        \n                                            CardNumber\n                                        \n                                \n                                \n                                        \n                                            CardText\n                                        \n                                \n                                \n                                        \n                                            CardType\n                                        \n                                \n                                \n                                        \n                                            Condition\n                                        \n                                \n                                \n                                        \n                                            CreatedBy\n                                        \n                                \n                                \n                                        \n                                            Id\n                                        \n                                \n                                \n                                        \n                                            Image\n                                        \n                                \n                                \n                                        \n                                            ManaValue\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Quantity\n                                        \n                                \n                                \n                                        \n                                            SetCode\n                                        \n                                \n                                \n                                        \n                                            SetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CardName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Numero de edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Habilidad de juego de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    tipo de carta de juego.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Condition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id de Ususario que agrego la carta al catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url de la imagen de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ManaValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ManaValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coste para jugar la carta\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Precio de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Catidad de la carta en catalogo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sigla de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de la edicion de la carta.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem{\n    /**\n     * Identificador de objeto.\n     */\n    Id: number;\n    /**\n     * Nombre de carta.\n     */\n    CardName: string;\n    /**\n     * Id de Ususario que agrego la carta al catalogo.\n     */\n    CreatedBy: number;\n    /**\n     * Catidad de la carta en catalogo.\n     */\n    Quantity: number;\n    /**\n     * Sigla de la edicion de la carta.\n     */\n    SetCode: string;\n    /**\n     * Nombre de la edicion de la carta.\n     */\n    SetName: string;\n    /**\n     * Numero de edicion de la carta.\n     */\n    CardNumber: number;\n    /**\n     * Estado de la carta.\n     */\n    Condition: string;\n    /**\n     * Precio de la carta.\n     */\n    Price: number;\n    /**\n     * Url de la imagen de la carta.\n     */\n    Image: string;\n    /**\n     * tipo de carta de juego.\n     */\n    CardType: string;\n    /**\n     * Coste para jugar la carta\n     */\n    ManaValue: string;\n    /**\n     * Habilidad de juego de la carta.\n     */\n    CardText: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardItemService.html":{"url":"injectables/CardItemService.html","title":"injectable - CardItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CardItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cartitem.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para catalogo de cartas.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cardItemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStock\n                            \n                            \n                                createOrUpdateCardItem\n                            \n                            \n                                getCard\n                            \n                            \n                                getCardListWithFilters\n                            \n                            \n                                getCardsList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStock\n                        \n                    \n                \n            \n            \n                \ncheckStock(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:407\n                        \n                    \n\n\n            \n                \n                        Funcion para validar stock de carta del catalogo.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano que indica si hay stock\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrUpdateCardItem\n                        \n                    \n                \n            \n            \n                \ncreateOrUpdateCardItem(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:375\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar cartas al catalogo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCard\n                        \n                    \n                \n            \n            \n                \ngetCard(cardId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:398\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener carta por Id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem\n\n                        \n                            \n                                Objeto de carta, si no se encuentra el objeto se retorna vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardListWithFilters\n                        \n                    \n                \n            \n            \n                \ngetCardListWithFilters(category: string, search: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:350\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por de tipo de carta\n\n                                            \n                                        \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtro para buscar por nombre de carta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de cartas resultado de busqueda por filtros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCardsList\n                        \n                    \n                \n            \n            \n                \ngetCardsList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cartitem.service.ts:340\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener catalogo de cartas.\n\n\n                        \n                            Returns :         CardItem[]\n\n                        \n                            \n                                Listado de catalogo de cartas\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cardItemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cartitem.service.ts:18\n                        \n                    \n\n            \n                \n                    Mock de cartas de catalogo.\nListado de Cartas de Objeto CardItem.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CardItem } from '../models/carditem.model';\n\n/**\n * @description\n * Mock de funciones para catalogo de cartas.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CardItemService {\n\n    /**\n     * Mock de cartas de catalogo.\n     * Listado de Cartas de Objeto CardItem.\n     */\n    private cardItemList: CardItem[] = [\n        {\n            Id: 1,\n            CardName: 'Oko, Thief of Crowns',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 197,\n            Condition: 'NM',\n            Price: 30,\n            CardType: 'Legendary Planeswalker — Oko',\n            ManaValue: '3',\n            CardText: '+2: Create a Food token.\\n+1: Target artifact or creature loses all abilities and becomes a green Elk creature with base power and toughness 3/3.\\n-5: Exchange control of target artifact or creature you control and target creature an opponent controls with power 3 or less.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/4/3462a3d0-5552-49fa-9eb7-100960c55891.jpg?1650599698',\n            Quantity: 5\n        },\n        {\n            Id: 2,\n            CardName: 'Uro, Titan of Nature\\'s Wrath',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 229,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Elder Giant',\n            ManaValue: '3',\n            CardText: 'When Uro enters the battlefield, sacrifice it unless it escaped.\\nWhenever Uro enters the battlefield or attacks, you gain 3 life and draw a card, then you may put a land card from your hand onto the battlefield.\\nEscape—{G}{G}{U}{U}, Exile five other cards from your graveyard.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/0/a0b6a71e-56cb-4d25-8f2b-7a4f1b60900d.jpg?1650599829',\n            Quantity: 5\n        },\n        {\n            Id: 3,\n            CardName: 'Fabled Passage',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 244,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Land',\n            ManaValue: '0',\n            CardText: '{T}, Sacrifice Fabled Passage: Search your library for a basic land card, put it onto the battlefield tapped, then shuffle your library. If you control four or more lands, untap that land.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/3/d313d051-7295-4884-8cbf-f2f835fd45f4.jpg?1594737636',\n            Quantity: 5\n        },\n        {\n            Id: 4,\n            CardName: 'Embercleave',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 120,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Artifact — Equipment',\n            ManaValue: '6',\n            CardText: 'Flash\\nThis spell costs {1} less to cast for each attacking creature you control.\\nWhen Embercleave enters the battlefield, attach it to target creature you control.\\nEquipped creature gets +1/+1 and has double strike and trample.\\nEquip {3}',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/a/aaae15dd-11b6-4421-99e9-365c7fe4a5d6.jpg?1572490333',\n            Quantity: 5\n        },\n        {\n            Id: 5,\n            CardName: 'The Great Henge',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 161,\n            Condition: 'NM',\n            Price: 50,\n            CardType: 'Legendary Artifact',\n            ManaValue: '9',\n            CardText: 'This spell costs {X} less to cast, where X is the greatest power among creatures you control.\\n{T}: Add {G}{G}. You gain 2 life.\\nWhenever a nontoken creature enters the battlefield under your control, put a +1/+1 counter on it and draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/6/3/6340e0f3-7f9c-4d71-8daf-e1be5505eb5b.jpg?1689998574',\n            Quantity: 5\n        },\n        {\n            Id: 6,\n            CardName: 'Gilded Goose',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 160,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Creature — Bird',\n            ManaValue: '1',\n            CardText: 'Flying\\nWhen Gilded Goose enters the battlefield, create a Food token.\\n{1}{G}, {T}: Create a Food token.\\n{T}, Sacrifice a Food: Add one mana of any color.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/8/e/8ecc97f2-0d24-4ea7-b10e-26b61357711d.jpg?1682209507',\n            Quantity: 5\n        },\n        {\n            Id: 7,\n            CardName: 'Heliod, Sun-Crowned',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 18,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Enchantment Creature — God',\n            ManaValue: '3',\n            CardText: 'Indestructible\\nAs long as your devotion to white is less than five, Heliod isn\\'t a creature.\\nWhenever you gain life, put a +1/+1 counter on target creature or enchantment you control.\\n{1}{W}: Another target creature gains lifelink until end of turn.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/2/3245ff74-1f9c-4518-a23f-1579f338f232.jpg?1689995727',\n            Quantity: 5\n        },\n        {\n            Id: 8,\n            CardName: 'Thassa\\'s Oracle',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 73,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Merfolk Wizard',\n            ManaValue: '2',\n            CardText: 'When Thassa\\'s Oracle enters the battlefield, look at the top X cards of your library, where X is your devotion to blue. Put up to one of them on top of your library and the rest on the bottom of your library in a random order. If X is greater than or equal to the number of cards in your library, you win the game.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/7/2/726e8b29-13e9-4138-b6a9-d2a0d8188d1c.jpg?1680582212',\n            Quantity: 5\n        },\n        {\n            Id: 9,\n            CardName: 'Dryad of the Ilysian Grove',\n            SetCode: 'THB',\n            SetName: 'Theros Beyond Death',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 8,\n            CardType: 'Creature — Nymph Dryad',\n            ManaValue: '3',\n            CardText: 'You may play an additional land on each of your turns.\\nLands you control are every basic land type in addition to their other types.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/3/43be1363-7e73-4862-b45f-07f490ab46be.jpg?1690004795',\n            Quantity: 5\n        },\n        {\n            Id: 10,\n            CardName: 'Questing Beast',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 171,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Legendary Creature — Beast',\n            ManaValue: '4',\n            CardText: 'Vigilance, deathtouch, haste\\nQuesting Beast can\\'t be blocked by creatures with power 2 or less.\\nCombat damage that would be dealt by creatures you control can\\'t be prevented.\\nWhenever Questing Beast deals combat damage to an opponent, it deals that much damage to target planeswalker that player controls.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/4/e41cf82d-3213-47ce-a015-6e51a8b07e4f.jpg?1572490640',\n            Quantity: 5\n        },\n        {\n            Id: 11,\n            CardName: 'Fiery Emancipation',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 143,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'If a source you control would deal damage to a permanent or player, it deals triple that damage to that permanent or player instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/0/b/0b12e4b7-2c45-4795-94d3-901f89b8f290.jpg?1594736606',\n            Quantity: 5\n        },\n        {\n            Id: 12,\n            CardName: 'Shark Typhoon',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 67,\n            Condition: 'NM',\n            Price: 10,\n            CardType: 'Enchantment',\n            ManaValue: '6',\n            CardText: 'Whenever you cast a noncreature spell, create an X/X blue Shark creature token with flying, where X is that spell\\'s mana value.\\nCycling {X}{1}{U}\\nWhen you cycle Shark Typhoon, create an X/X blue Shark creature token with flying.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/4/d/4d410cf5-a70e-4680-a68f-fbb4aa3b7174.jpg?1712354204',\n            Quantity: 5\n        },\n        {\n            Id: 13,\n            CardName: 'Winota, Joiner of Forces',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 216,\n            Condition: 'NM',\n            Price: 7,\n            CardType: 'Legendary Creature — Human Warrior',\n            ManaValue: '4',\n            CardText: 'Whenever a non-Human creature you control attacks, look at the top six cards of your library. You may put a Human creature card from among them onto the battlefield tapped and attacking. It gains indestructible until end of turn. Put the rest on the bottom of your library in a random order.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/5/d/5dd13a6c-23d3-44ce-a628-cb1c19d777c4.jpg?1654630670',\n            Quantity: 5\n        },\n        {\n            Id: 14,\n            CardName: 'Elder Gargaroth',\n            SetCode: 'M21',\n            SetName: 'Core Set 2021',\n            CardNumber: 179,\n            Condition: 'NM',\n            Price: 5,\n            CardType: 'Creature — Beast',\n            ManaValue: '5',\n            CardText: 'Vigilance, reach, trample\\nWhenever Elder Gargaroth attacks or blocks, choose one —\\n• Create a 3/3 green Beast creature token.\\n• You gain 3 life.\\n• Draw a card.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/d/5/d51269cf-a333-4a64-94cd-245798d840d2.jpg?1594736944',\n            Quantity: 5\n        },\n        {\n            Id: 15,\n            CardName: 'Scute Swarm',\n            SetCode: 'ZNR',\n            SetName: 'Zendikar Rising',\n            CardNumber: 203,\n            Condition: 'NM',\n            Price: 2,\n            CardType: 'Creature — Insect',\n            ManaValue: '3',\n            CardText: 'Landfall — Whenever a land enters the battlefield under your control, create a 1/1 green Insect creature token. If you control six or more lands, create a token that\\'s a copy of Scute Swarm instead.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/3/7/373f199d-f1a6-4a3d-ac83-28741131f313.jpg?1712354624',\n            Quantity: 5\n        },\n        {\n            Id: 16,\n            CardName: 'Goldspan Dragon',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 139,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Creature — Dragon',\n            ManaValue: '5',\n            CardText: 'Flying, haste\\nWhenever Goldspan Dragon attacks or becomes the target of a spell, create a Treasure token.\\nTreasures you control have \\'{T}, Sacrifice this artifact: Add two mana of any one color.\\'',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/d/9d914868-9000-4df2-a818-0ef8a7f636ae.jpg?1665343456',\n            Quantity: 5\n        },\n        {\n            Id: 17,\n            CardName: 'Valki, God of Lies // Tibalt, Cosmic Impostor',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 114,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Legendary Creature — God // Legendary Planeswalker — Tibalt',\n            ManaValue: '2 // 7',\n            CardText: 'When Valki enters the battlefield, each opponent reveals their hand. For each opponent, exile a creature card they revealed this way until Valki leaves the battlefield.\\n{X}: Choose a creature card exiled with Valki with mana value X. Valki becomes a copy of that card. // As Tibalt enters the battlefield, you get an emblem with \\'You may play cards exiled with Tibalt, Cosmic Impostor, and you may spend mana as though it were mana of any color to cast those spells.\\'\\n+2: Exile the top card of each player\\'s library.\\n-3: Exile target artifact or creature.\\n-8: Exile all cards from all graveyards. Add {R}{R}{R}.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/e/a/ea7e4c65-b4c4-4795-9475-3cba71c50ea5.jpg?1709218862',\n            Quantity: 5\n        },\n        {\n            Id: 18,\n            CardName: 'Esika\\'s Chariot',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 169,\n            Condition: 'NM',\n            Price: 4,\n            CardType: 'Legendary Artifact — Vehicle',\n            ManaValue: '4',\n            CardText: 'When Esika\\'s Chariot enters the battlefield, create two 2/2 green Cat creature tokens.\\nWhenever Esika\\'s Chariot attacks, create a token that\\'s a copy of target token you control.\\nCrew 4',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/a/8/a87606cc-fbf0-4e2c-9798-f1c935d0573d.jpg?1665343333',\n            Quantity: 5\n        },\n        {\n            Id: 19,\n            CardName: 'Vorinclex, Monstrous Raider',\n            SetCode: 'KHM',\n            SetName: 'Kaldheim',\n            CardNumber: 199,\n            Condition: 'NM',\n            Price: 20,\n            CardType: 'Legendary Creature — Phyrexian Praetor',\n            ManaValue: '6',\n            CardText: 'Trample, haste\\nIf you would put one or more counters on a permanent or player, put twice that many of each of those kinds of counters on that permanent or player instead.\\nIf an opponent would put one or more counters on a permanent or player, they put half that many of each of those kinds of counters on that permanent or player instead, rounded down.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/9/2/92613468-205e-488b-930d-11908477e9f8.jpg?1631051073',\n            Quantity: 5\n        },\n        {\n            Id: 20,\n            CardName: 'Brazen Borrower // Petty Theft',\n            SetCode: 'ELD',\n            SetName: 'Throne of Eldraine',\n            CardNumber: 39,\n            Condition: 'NM',\n            Price: 15,\n            CardType: 'Creature — Faerie Rogue // Instant',\n            ManaValue: '3',\n            CardText: 'Flash\\nFlying\\nBrazen Borrower can block only creatures with flying. // Return target nonland permanent an opponent controls to its owner\\'s hand.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/c/2/c2089ec9-0665-448f-bfe9-d181de127814.jpg?1616182088',\n            Quantity: 5\n        },\n        {\n            Id: 21,\n            CardName: 'Jegantha, the Wellspring',\n            SetCode: 'IKO',\n            SetName: 'Ikoria: Lair of Behemoths',\n            CardNumber: 222,\n            Condition: 'NM',\n            Price: 3,\n            CardType: 'Legendary Creature — Elemental Elk',\n            ManaValue: '5',\n            CardText: 'Companion — No card in your starting deck has more than one of the same mana symbol in its mana cost.\\n{T}: Add {W}{U}{B}{R}{G}. This mana can\\'t be spent to pay generic mana costs.',\n            CreatedBy: 0,\n            Image: 'https://cards.scryfall.io/large/front/1/d/1d52e527-3835-4350-8c01-0f2d5d623b9c.jpg?1676913289',\n            Quantity: 5\n        }\n    ]\n\n    /**\n     * Funcion para obtener catalogo de cartas.\n     * @returns Listado de catalogo de cartas\n     */\n    getCardsList(): CardItem[]{\n        return this.cardItemList;\n    }\n\n    /**\n     * Funcion para obtener listado de cartas del catalogo segun nombre de carta y/o tipo de carta.\n     * @param category Filtro para buscar por de tipo de carta\n     * @param search Filtro para buscar por nombre de carta.\n     * @returns Listado de cartas resultado de busqueda por filtros.\n     */\n    getCardListWithFilters(category: string, search: string): CardItem[]{\n        var result: CardItem[] = [];\n        \n        if(category !== ''){\n            result = this.cardItemList.filter(cardItem =>\n                cardItem.CardType.toLowerCase().includes(category.toLowerCase())\n            );\n        }\n        \n        if(category === '' && search !== ''){\n            result = this.cardItemList;\n        }\n        \n        if(search !== ''){\n            result = result.filter(cardItem =>\n                cardItem.CardName.toLowerCase().includes(search.toLowerCase())\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Funcion para agregar cartas al catalogo\n     */\n    createOrUpdateCardItem(card: CardItem): boolean{\n        if(card.Id === undefined || card.Id === 0){\n            const newId = this.cardItemList.reduce((maxId, card) => {\n                return Math.max(maxId, card.Id);\n            }, 0) + 1;\n            card.Id = newId;\n            this.cardItemList.push(card);\n            return true;\n        }else{\n            const index = this.cardItemList.findIndex(cardItem => cardItem.Id === card.Id);\n            if(index !== -1){\n                this.cardItemList[index] = card;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para obtener carta por Id.\n     * @param cardId Identificador de carta\n     * @returns Objeto de carta, si no se encuentra el objeto se retorna vacio.\n     */\n    getCard(cardId: number): CardItem{\n        return this.cardItemList.find(card => card.Id === cardId ) || {} as CardItem;\n    }\n\n    /**\n     * Funcion para validar stock de carta del catalogo.\n     * @param cardId Identificador de carta\n     * @returns booleano que indica si hay stock\n     */\n    checkStock(cardId: number): boolean{\n        return this.getCard(cardId).Quantity > 0;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardManageComponent.html":{"url":"components/CardManageComponent.html","title":"component - CardManageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardManageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card-manage/card-manage.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de administracion de cartas del catalogo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-manage\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card-manage.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card-manage.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelecetedCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Funcion para redireccionar a pantalla de detalle de carta\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Iniciacion de listado de cartas del catalogo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelecetedCard\n                        \n                    \n                \n            \n            \n                \nsetSelecetedCard(card: CardItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/card-manage/card-manage.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Accion para seleccionar carta en la pantalla\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                card\n                                            \n                                                            CardItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cardList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/card-manage/card-manage.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas del catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../core/services/auth.service';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente de pantalla de administracion de cartas del catalogo\n */\n@Component({\n  selector: 'app-card-manage',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './card-manage.component.html',\n  styleUrl: './card-manage.component.css'\n})\nexport class CardManageComponent {\n  /**\n   * Listado de cartas del catalogo\n   */\n  cardList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a la capa service\n   * @param authService \n   * @param router Manejo de redirecciones\n   * @param cardItemService Funciones de cartas del catalogo\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private cardItemService: CardItemService\n  ){}\n\n  /**\n   * Iniciacion de listado de cartas del catalogo\n   */\n  ngOnInit(): void {\n    this.cardList = this.cardItemService.getCardsList();\n  }\n\n  /**\n   * Accion para seleccionar carta en la pantalla\n   * @param card \n   */\n  setSelecetedCard(card: CardItem){\n    this.authService.setSelectedCardForManage(card);\n    this.goToDetail();\n  }\n\n  /**\n   * Funcion para redireccionar a pantalla de detalle de carta\n   */\n  goToDetail(){\n    if(this.authService.getUser().id === undefined || \n      this.authService.getUser().Role != 'admin'){\n      alert('No puede ingresar a esta funcion');\n      this.router.navigate(['/login']);\n    }else{\n      this.router.navigate(['/card-detail']);\n    }\n  }\n  \n}\n\n    \n\n    \n        \n    Listado de cartas\n    Agregar carta\n    \n    \n        \n            \n                \n                    Id\n                    Nombre\n                    Codigo de Set\n                    Condicion\n                    Cantidad\n                    Precio\n                    \n                \n            \n            \n                \n                    {{card.Id}}\n                    {{card.CardName}}\n                    {{card.SetCode}}\n                    {{card.Condition}}\n                    {{card.Quantity}}\n                    {{card.Price| currency}}\n                    Editar\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listado de cartas    Agregar carta                                                                Id                    Nombre                    Codigo de Set                    Condicion                    Cantidad                    Precio                                                                                                {{card.Id}}                    {{card.CardName}}                    {{card.SetCode}}                    {{card.Condition}}                    {{card.Quantity}}                    {{card.Price| currency}}                    Editar                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardManageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarditemListComponent.html":{"url":"components/CarditemListComponent.html","title":"component - CarditemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarditemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/carditem-list/carditem-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar catalogo de cartas.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carditem-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./carditem-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./carditem-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carditemList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, cardItemService: CardItemService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de catalogo de cartas\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(cardId: number, cardName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Accion para agregar una carta seleccionada a al carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta\n\n                                            \n                                        \n                                        \n                                                cardName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de carta\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/carditem-list/carditem-list.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSe obtiene parametros de url:\n -categoria = tipo de carta\n -search = nombre de carta\nSe obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carditemList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carditem-list/carditem-list.component.ts:25\n                        \n                    \n\n            \n                \n                    Listado de cartas a mostrar en el catalogo\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CardItem } from '../core/models/carditem.model';\nimport { CardItemService } from '../core/services/cartitem.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\n\n/**\n * @description\n * Componente para mostrar catalogo de cartas.\n */\n@Component({\n  selector: 'app-carditem-list',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './carditem-list.component.html',\n  styleUrl: './carditem-list.component.css'\n})\nexport class CarditemListComponent {\n  /**\n   * Listado de cartas a mostrar en el catalogo\n   */\n  carditemList: CardItem[] = [];\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param route Manejo de redirecciones\n   * @param cardItemService Manejo de catalogo de cartas\n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private route: ActivatedRoute, \n    private cardItemService: CardItemService, \n    private authService: AuthService\n  ) {}\n\n  /**\n   * Iniciacion de componente.\n   * Se obtiene parametros de url:\n   *  -categoria = tipo de carta\n   *  -search = nombre de carta\n   * Se obtiene listado de carta segun filtros o se trae el catalogo completo a mostrar.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const categoria = params.get('categoria') || '';\n      const search = params.get('search') || '';\n      if (categoria !== '' || search !== '') {\n        this.carditemList = this.cardItemService.getCardListWithFilters(categoria,search);\n      }else{\n        this.carditemList = this.cardItemService.getCardsList();\n      }\n    });\n  }\n\n  /**\n   * Accion para agregar una carta seleccionada a al carrito de compras\n   * @param cardId Identificador de carta\n   * @param cardName Nombre de carta\n   */\n  addItem(cardId: number, cardName: string){\n    const result = this.authService.addItemToShoppingCart(cardId);\n    if(result){\n      alert('Se ha agregado '+cardName+' al carrito');\n    }else{\n      alert('No hay suficiente stock para '+cardName);\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n\n        \n\n            \n                \n                \n                  {{ cardItem.CardName }}\n                  {{ cardItem.SetName }}\n                  {{ cardItem.Price| currency }}\n                \n                Agregar al carro\n            \n\n        \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{ cardItem.CardName }}                  {{ cardItem.SetName }}                  {{ cardItem.Price| currency }}                                Agregar al carro                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarditemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de formulario de ingreso a la aplicacion\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de login\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario para variables de login\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Get de valor username del formulario\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:59\n                                \n                            \n                    \n                        \n                                Get de valor password del formulario\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormGroup, ReactiveFormsModule, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\n\n/**\n * @description\n * Componente de formulario de ingreso a la aplicacion\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent {\n  /**\n   * Formulario para variables de login\n   */\n  loginForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Funciones de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(private authService: AuthService,private router: Router){}\n\n  /**\n   * Iniciacion de formulario de login\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  /**\n   * Get de valor username del formulario\n   */\n  get username(){\n    return this.loginForm.get('username');\n  }\n\n  /**\n   * Get de valor password del formulario\n   */\n  get password(){\n    return this.loginForm.get('password');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(): void {\n    if( this.authService.login(this.loginForm.get('username')?.value,this.loginForm.get('password')?.value) ){\n      alert('Se ha logueado');\n      this.router.navigate(['/']);\n    }else{\n      alert('Usuario o Contraseña incorretos');\n    }\n  }\n\n}\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n                Nombre de Usuario es obligatorio.\n                Nombre de Usuario no tiene el formato correcto.\n              \n            \n          \n    \n          \n            Contraseña\n            \n              \n            \n              Contraseña obligatorio.\n              Contraseña no tiene el formato correcto.\n            \n            \n          \n\n          \n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                      Nombre de Usuario es obligatorio.                Nombre de Usuario no tiene el formato correcto.                                                              Contraseña                                                    Contraseña obligatorio.              Contraseña no tiene el formato correcto.                                                        Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterForm\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a la capa service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Accion de boton para que el usuario salga de su session actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente.\nSuscripcion a variable que indica si hay usuario logueado.\nIniciacion de formulario para filtros de busqueda.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Accion de boton para realizar la busqueda en el catalogo segun los filtros\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filterForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario para manejar filtro de busqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    Booleano para indicar si el usuario se encuentra logueado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { FormGroup, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @description\n * Componente para el manejo de navbar, contiene accion para busqueda de cartas por nombre.\n */\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    RouterModule,\n    ReactiveFormsModule,\n    CommonModule\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * Formulario para manejar filtro de busqueda\n   */\n  filterForm!: FormGroup;\n  /**\n   * Booleano para indicar si el usuario se encuentra logueado\n   */\n  isLoggedIn: boolean = false;\n\n  /**\n   * Constructor con dependencias a la capa service.\n   * @param router Manejo de redirecciones\n   * @param authService Funciones para manejo de sesion\n   */\n  constructor(private router: Router, private authService: AuthService){};\n\n  /**\n   * Iniciacion de componente.\n   * Suscripcion a variable que indica si hay usuario logueado.\n   * Iniciacion de formulario para filtros de busqueda.\n   */\n  ngOnInit(): void {\n    this.authService.isAuthenticated().subscribe(status => {\n      this.isLoggedIn = status;\n    });\n    this.filterForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  /**\n   * Accion de boton para realizar la busqueda en el catalogo segun los filtros\n   */\n  onSearch(){\n    const search = this.filterForm.get('search')?.value.toLowerCase() || '';\n    if(search !== ''){\n      this.router.navigate(['/buscar/'+search]);\n    }\n  }\n\n  /**\n   * Accion de boton para que el usuario salga de su session actual\n   */\n  logout(){\n    this.authService.logout();\n    alert('Se ha cerrado sesión.');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        Mana Market\n        \n            \n        \n        \n            \n            Mana Market\n            \n            \n            \n                \n                \n                    \n                    Carrito de compras\n                    \n                \n                \n                \n                    \n                    Home\n                    \n                    \n                    Planeswalkers\n                    Encantamientos\n                    Criaturas\n                    Artefactos\n                    \n                \n                \n                \n                    \n                    Buscar\n                \n                \n                \n                    Ingresar\n                    Registrarse\n                    Cuenta Usuario\n                    Cerrar sesión\n                    Recuperar Contraseña\n                \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Mana Market                                                            Mana Market                                                                                                            Carrito de compras                                                                                                            Home                                                            Planeswalkers                    Encantamientos                    Criaturas                    Artefactos                                                                                                            Buscar                                                                    Ingresar                    Registrarse                    Cuenta Usuario                    Cerrar sesión                    Recuperar Contraseña                                                '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-detail/order-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar detalle de un carrito de compras selecionado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                showImage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con iniciacion de objeto de carrito de compras\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentShoppingCart\n                    \n                \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:23\n                            \n                        \n                \n                    \n                        Valor de entrada del carrito selecionado\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showImage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/order-detail/order-detail.component.ts:27\n                            \n                        \n                \n                    \n                        Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-detail/order-detail.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Funcion para calcular precio total de la compra\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Precio total del carrito de compras\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/order-detail/order-detail.component.ts:31\n                        \n                    \n\n            \n                \n                    Precio total de compra del carro\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\n\n/**\n * @description\n * Componente para mostrar detalle de un carrito de compras selecionado\n */\n@Component({\n  selector: 'app-order-detail',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.css'\n})\nexport class OrderDetailComponent {\n  /**\n   * Valor de entrada del carrito selecionado\n   */\n  @Input() currentShoppingCart: ShoppingCart;\n  /**\n   * Bolleano de entrada para indicar si se debe mostrar las imagenes de las cartas del carrito\n   */\n  @Input() showImage: boolean = false;\n  /**\n   * Precio total de compra del carro\n   */\n  total: number = 0;\n\n  /**\n   * Constructor con iniciacion de objeto de carrito de compras\n   */\n  constructor(){\n    this.currentShoppingCart = {} as ShoppingCart;\n  }\n\n  /**\n   * Funcion para calcular precio total de la compra\n   * @param cardList Listado de cartas del carrito selecionado\n   * @returns Precio total del carrito de compras\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Carta\n            Precio\n            Cantidad\n            Subtotal\n        \n    \n    \n        \n            \n            {{card.CardName}}\n            {{card.Price | currency}}\n            {{card.Quantity}}\n            {{card.Price * card.Quantity | currency}}\n        \n        \n            \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            Total\n            {{calcTotal(currentShoppingCart.CardList) | currency}}\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Carta            Precio            Cantidad            Subtotal                                                {{card.CardName}}            {{card.Price | currency}}            {{card.Quantity}}            {{card.Price * card.Quantity | currency}}                                                                                                                                            Total            {{calcTotal(currentShoppingCart.CardList) | currency}}            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderFinishComponent.html":{"url":"components/OrderFinishComponent.html","title":"component - OrderFinishComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderFinishComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-finish/order-finish.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de confirmacion de compra\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-finish\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OrderDetailComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-finish.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-finish.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor con dependecia a manejo de sesion.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-finish/order-finish.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras\nValidacion al inicio del flujo para confirmar que exista un carrito de compras activo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-finish/order-finish.component.ts:25\n                        \n                    \n\n            \n                \n                    Variable de Carrito de compras actual\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\nimport { CartStatus } from '../core/enum/cart-status.enum';\n\n/**\n * Componente de pantalla de confirmacion de compra\n */\n@Component({\n  selector: 'app-order-finish',\n  standalone: true,\n  imports: [\n    OrderDetailComponent,\n    RouterModule\n  ],\n  templateUrl: './order-finish.component.html',\n  styleUrl: './order-finish.component.css'\n})\nexport class OrderFinishComponent {\n  /**\n   * Variable de Carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n\n  /**\n   * Constructor con dependecia a manejo de sesion.\n   * @param authService Funciones de manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras\n   * Validacion al inicio del flujo para confirmar que exista un carrito de compras activo\n   */\n  ngOnInit() {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      this.currentShoppingCart = shoppingCart;\n    });\n    if(this.currentShoppingCart.id === undefined || this.currentShoppingCart.id === 0){\n      alert('ha ocurrido un error');\n      this.router.navigate(['/']);\n    }else{\n      if(this.currentShoppingCart.Status === CartStatus.Abierto){\n        this.authService.updateShoppingCartStatus(CartStatus.Pagado);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n    Orden Finalizada\n    \n    \n    \n    \n        Hacer otra compra\n        Ver tus ordenes\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Orden Finalizada                        Hacer otra compra        Ver tus ordenes        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderFinishComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/order-list/order-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listar los carritos de compra realizados por el usuario logueado\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OrderDetailComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                orderList\n                            \n                            \n                                selectedOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcQuantity\n                            \n                            \n                                calcTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectForDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingCartService: ShoppingCartService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/order-list/order-list.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingCartService\n                                                  \n                                                        \n                                                                        ShoppingCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de carrito de compras\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calcQuantity\n                        \n                    \n                \n            \n            \n                \ncalcQuantity(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Funcion para sumar el total de cartas de un carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas de un carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                total de cartas del carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calcTotal\n                        \n                    \n                \n            \n            \n                \ncalcTotal(cardList: CardItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Funcion para aclcular el total de la compra del carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cardList\n                                            \n                                                            CardItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Listado de cartas del carrito de compras\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Valor total de la compra\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForDetail\n                        \n                    \n                \n            \n            \n                \nselectForDetail(selected: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/order-list/order-list.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Accion que setea carrito de compras seleccionado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selected\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras selecionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:35\n                        \n                    \n\n            \n                \n                    Booleano para mostrar card con informacion del carrito de compras seleccionado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orderList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:27\n                        \n                    \n\n            \n                \n                    Listado de carritos de compra realizados por el usuario activo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/order-list/order-list.component.ts:31\n                        \n                    \n\n            \n                \n                    Carrito de compras seleccionado\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCartService } from '../core/services/shopping-cart.service';\nimport { AuthService } from '../core/services/auth.service';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { CommonModule } from '@angular/common';\nimport { CardItem } from '../core/models/carditem.model';\nimport { OrderDetailComponent } from '../order-detail/order-detail.component';\n\n/**\n * @description\n * Componente para listar los carritos de compra realizados por el usuario logueado\n */\n@Component({\n  selector: 'app-order-list',\n  standalone: true,\n  imports: [\n    CommonModule,\n    OrderDetailComponent\n  ],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.css'\n})\nexport class OrderListComponent {\n  /**\n   * Listado de carritos de compra realizados por el usuario activo\n   */\n  orderList: ShoppingCart[] = [];\n  /**\n   * Carrito de compras seleccionado\n   */\n  selectedOrder: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Booleano para mostrar card con informacion del carrito de compras seleccionado\n   */\n  isSelected: boolean = false;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param shoppingCartService Manejo de carrito de compras \n   * @param authService Manejo de sesion\n   */\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private authService: AuthService\n  ){}\n\n  /**\n   * Iniciacion de id usuario actual y sus respectivos carritos de compra realizados.\n   */\n  ngOnInit(): void {\n    this.isSelected = false;\n    const userId = this.authService.getUser().id;\n    this.orderList = this.shoppingCartService.getAllShopppingCartsByUser(userId);\n  }\n\n  /**\n   * Accion que setea carrito de compras seleccionado\n   * @param selected Carrito de compras selecionado\n   */\n  selectForDetail(selected: ShoppingCart){\n    this.selectedOrder = selected;\n    this.isSelected = true;\n  }\n\n  /**\n   * Funcion para aclcular el total de la compra del carrito de compras\n   * @param cardList Listado de cartas del carrito de compras\n   * @returns Valor total de la compra\n   */\n  calcTotal(cardList: CardItem[]): number{\n    let calcTotal = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcTotal += (card.Price * card.Quantity);\n      });\n    }\n    return calcTotal;\n  }\n\n  /**\n   * Funcion para sumar el total de cartas de un carrito de compras\n   * @param cardList Listado de cartas de un carrito de compras\n   * @returns total de cartas del carrito de compras\n   */\n  calcQuantity(cardList: CardItem[]): number{\n    let calcQuantity = 0;\n    if(cardList !== undefined){\n      cardList.forEach(card => {\n        calcQuantity += card.Quantity;\n      });\n    }\n    return calcQuantity;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n    \n\n    \n        \n            \n                \n                    Orden\n                    Estado\n                    Cantidad de Cartas\n                    Total\n                    \n                \n            \n            \n                \n                    {{order.id}}\n                    {{order.Status}}\n                    {{calcQuantity(order.CardList)}}\n                    {{calcTotal(order.CardList) | currency}}\n                    Ver detalle\n                \n            \n        \n    \n\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Orden                    Estado                    Cantidad de Cartas                    Total                                                                                                {{order.id}}                    {{order.Status}}                    {{calcQuantity(order.CardList)}}                    {{calcTotal(order.CardList) | currency}}                    Ver detalle                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordRecoveryComponent.html":{"url":"components/PasswordRecoveryComponent.html","title":"component - PasswordRecoveryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordRecoveryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-recovery/password-recovery.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para iniciar recuperacion de contrasena\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-recovery\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./password-recovery.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-recovery.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                recoverPassForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userServie: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/password-recovery/password-recovery.component.ts:26\n                            \n                        \n\n                \n                    \n                            Contructor con dependencia a funciones de manejo de ususario\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                                \n                                                        userServie\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones de informacion de ususario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Iniciacion de formulario de recuperacion de contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/password-recovery/password-recovery.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario de recuperar contrasena\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        recoverPassForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/password-recovery/password-recovery.component.ts:26\n                        \n                    \n\n            \n                \n                    Fromulario para recuperar contrasena\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/password-recovery/password-recovery.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { UserService } from '../core/services/user.service';\n\n/**\n * @description\n * Componente para iniciar recuperacion de contrasena\n */\n@Component({\n  selector: 'app-password-recovery',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  templateUrl: './password-recovery.component.html',\n  styleUrl: './password-recovery.component.css'\n})\nexport class PasswordRecoveryComponent {\n  /**\n   * Fromulario para recuperar contrasena\n   */\n  recoverPassForm!: FormGroup;\n\n  /**\n   * Contructor con dependencia a funciones de manejo de ususario\n   * @param router Manejo de redirecciones\n   * @param userServie Funciones de informacion de ususario\n   */\n  constructor(private router: Router, private userServie: UserService){}\n\n  /**\n   * Iniciacion de formulario de recuperacion de contrasena\n   */\n  ngOnInit(): void {\n    this.recoverPassForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get email(){\n    return this.recoverPassForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario de recuperar contrasena\n   */\n  onSubmit() {\n    alert('Se ha enviado Email de recuperacion');\n\n    if(this.userServie.checkEmail(this.email?.value)){\n      this.router.navigate(['/']);\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Email\n            \n              \n            \n                Email es obligatorio.\n                Email no tiene el formato correcto.\n              \n            \n          \n\n          \n            Recuperar Contrasena\n            Ingresar\n            Registrarse\n          \n\n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Email                                                      Email es obligatorio.                Email no tiene el formato correcto.                                                          Recuperar Contrasena            Ingresar            Registrarse                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordRecoveryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/password-reset/password-reset.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-reset\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./password-reset.component.html\n            \n\n\n\n            \n                styleUrl\n                ./password-reset.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-password-reset',\n  standalone: true,\n  imports: [],\n  templateUrl: './password-reset.component.html',\n  styleUrl: './password-reset.component.css'\n})\nexport class PasswordResetComponent {\n\n}\n\n    \n\n    \n        password-reset works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'password-reset works!'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/payment/payment.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de pantalla de Mock de proceso de pago\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n            \n                styleUrl\n                ./payment.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isPaymentSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/payment/payment.component.ts:24\n                            \n                        \n\n                \n                    \n                            Contructor de componente con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\nTempo de espera de 4 segundos para simular proceso de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect\n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/payment/payment.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isPaymentSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/payment/payment.component.ts:24\n                        \n                    \n\n            \n                \n                    Booleano para indicar si se ha realizado el pago\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente de pantalla de Mock de proceso de pago\n */\n@Component({\n  selector: 'app-payment',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.css'\n})\nexport class PaymentComponent {\n\n  /**\n   * Booleano para indicar si se ha realizado el pago\n   */\n  isPaymentSuccess: boolean = false;\n\n  /**\n   * Contructor de componente con dependencias a funciones de sesion\n   * @param authService Manejo de informacion de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de componente donde se verifica que exista un carrito de compras activo en la sesion.\n   * Tempo de espera de 4 segundos para simular proceso de pago.\n   */\n  ngOnInit() {\n\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      if(shoppingCart.id === undefined || shoppingCart.id === 0){\n        alert('ha ocurrido un error');\n        this.router.navigate(['/']);\n      }\n    });\n\n    setTimeout(() => {\n      this.isPaymentSuccess = true;\n      this.redirect();\n    }, 4000);\n\n  }\n\n  /**\n   * Acion de simulacion de pago, espera de 4 segundos antes de redirigir a pantalla de finalizacion de carrito\n   */\n  redirect() {\n    setTimeout(() => {\n      this.router.navigate(['/orden-realizada']);\n    }, 4000);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n  \n    \n\n        \n            Procesando pago\n            \n                Loading...\n            \n        \n        \n            Pago realizado\n            redirigiendo al portal\n            \n                Loading...\n            \n        \n\n    \n  \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Procesando pago                            Loading...                                        Pago realizado            redirigiendo al portal                            Loading...                                          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationFormComponent.html":{"url":"components/RegistrationFormComponent.html","title":"component - RegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration-form/registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con pantalla de formulario de registro\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./registration-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./registration-form.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a capa service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de informacion de usuario\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Inciacion de formulario de registro definiendo validaciones de cada campo\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/registration-form/registration-form.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Accion submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registrationForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/registration-form/registration-form.component.ts:28\n                        \n                    \n\n            \n                \n                    formulario de registro\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/registration-form/registration-form.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { UserService } from '../core/services/user.service';\nimport { NgClass, CommonModule} from '@angular/common';\nimport { onlyLettersValidator, passwordValidator, samePasswordValidator } from '../core/validators/validators';\nimport { AuthService } from '../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente con pantalla de formulario de registro\n */\n@Component({\n  selector: 'app-registration-form',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    NgClass,\n    CommonModule\n  ],\n  templateUrl: './registration-form.component.html',\n  styleUrl: './registration-form.component.css'\n})\nexport class RegistrationFormComponent {\n  /**\n   * formulario de registro\n   */\n  registrationForm!: FormGroup;\n\n  /**\n   * Constructor con dependencias a capa service\n   * @param userService Manejo de informacion de usuario\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Inciacion de formulario de registro definiendo validaciones de cada campo\n   */\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        passwordValidator(),\n        Validators.minLength(8),\n        Validators.maxLength(16)\n      ])\n    },{\n      validators: samePasswordValidator('password','confirmPassword')\n    });\n  }\n\n  get firstName(){\n    return this.registrationForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.registrationForm.get('lastName');\n  }\n\n  get username(){\n    return this.registrationForm.get('username');\n  }\n\n  get email(){\n    return this.registrationForm.get('email');\n  }\n\n  get password(){\n    return this.registrationForm.get('password');\n  }\n\n  get confirmPassword(){\n    return this.registrationForm.get('confirmPassword');\n  }\n\n  /**\n   * Accion submit de formulario\n   */\n  onSubmit(): void {\n    if (this.registrationForm.valid) {\n      const result = this.userService.createUser(\n        this.registrationForm.get('username')?.value,\n        this.registrationForm.get('firstName')?.value,\n        this.registrationForm.get('lastName')?.value,\n        this.registrationForm.get('password')?.value,\n        this.registrationForm.get('email')?.value\n      );\n      if(result){\n        alert('Se ha registrado con exito');\n        this.authService.login(this.registrationForm.get('username')?.value,this.registrationForm.get('password')?.value);\n        this.router.navigate(['/']);\n      }else{\n        alert('El nombre de usuario ya esta en uso');\n      }\n    }else{\n      alert('Vuelva comprobar los campos del formulario');\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n      \n        Nombre de Usuario\n        \n          \n        \n            Nombre de Usuario es obligatorio.\n            Debe tener entre 5 y 20 caracteres.\n            Solo puede contener letras.\n          \n        \n      \n\n      \n        Contraseña\n        \n          \n        \n          Contraseña obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n        \n        \n      \n\n      \n        Confirmar Contraseña\n        \n          \n        \n          Confirmar Contraseña es obligatorio.\n          Debe tener entre 8 y 16 caracteres.\n          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.\n          Las contraseñas no coinciden.\n        \n        \n      \n\n      \n        Nombre\n        \n        \n          Nombre es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Apellido\n        \n        \n          Apellido es obligatorio.\n          Debe tener entre 5 y 50 caracteres.\n          Solo puede contener letras.\n        \n      \n\n      \n        Email \n        \n        \n          Email es obligatorio.\n          Formato de email no válido.\n        \n      \n      \n    \n\n    Registrarse\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Nombre de Usuario                                      Nombre de Usuario es obligatorio.            Debe tener entre 5 y 20 caracteres.            Solo puede contener letras.                                      Contraseña                                    Contraseña obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.                                    Confirmar Contraseña                                    Confirmar Contraseña es obligatorio.          Debe tener entre 8 y 16 caracteres.          La contraseña debe contener a lo menos una mayúscula, una minúscula, un número y un símbolo.          Las contraseñas no coinciden.                                    Nombre                          Nombre es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Apellido                          Apellido es obligatorio.          Debe tener entre 5 y 50 caracteres.          Solo puede contener letras.                            Email                           Email es obligatorio.          Formato de email no válido.                            Registrarse  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCart.html":{"url":"interfaces/ShoppingCart.html","title":"interface - ShoppingCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/shopping-cart.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto que define la estructura del carrito de compras del sitio.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AddressId\n                                        \n                                \n                                \n                                        \n                                            CardList\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Price\n                                        \n                                \n                                \n                                        \n                                            Status\n                                        \n                                \n                                \n                                        \n                                            UserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AddressId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AddressId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Direccion de entrega del pedido.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CardList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CardList:         CardItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Listado que contiene las cartas a comprar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Valor total del carrito de compras.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Status:         CartStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Estado del carito de compras definido en CartStatus.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario que creo el carrito de compras.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CartStatus } from \"../enum/cart-status.enum\";\nimport { CardItem } from \"./carditem.model\";\n\n/**\n * @description\n * Objeto que define la estructura del carrito de compras del sitio.\n */\nexport interface ShoppingCart{\n    /**\n     * Identificador de objeto.\n     */\n    id: number;\n    /**\n     * Usuario que creo el carrito de compras.\n     */\n    UserId: number;\n    /**\n     * Estado del carito de compras definido en CartStatus.\n     */\n    Status: CartStatus;\n    /**\n     * Listado que contiene las cartas a comprar.\n     */\n    CardList: CardItem[];\n    /**\n     * Direccion de entrega del pedido.\n     */\n    AddressId: number;\n    /**\n     * Valor total del carrito de compras.\n     */\n    Price: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar contenido de carrito de compras\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shopping-cart.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentShoppingCart\n                            \n                            \n                                hasItems\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor dcon dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de redirecciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buy\n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Funcion para simular pago, redirige a mock pasarela de pago\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Iniciacion de variable de carrito de compras actual del cliente logueado.\nse calcula el precio del total del carrito\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentShoppingCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart\n\n                    \n                \n                \n                    \n                        Default value : {} as ShoppingCart\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:24\n                        \n                    \n\n            \n                \n                    Varieble que contiene el carrito de compras actual\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:32\n                        \n                    \n\n            \n                \n                    Booleano que indica si el carrito tine items\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:28\n                        \n                    \n\n            \n                \n                    Valor de precio total del carro de compras\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ShoppingCart } from '../core/models/shopping-cart.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * @description\n * Componente para mostrar contenido de carrito de compras\n */\n@Component({\n  selector: 'app-shopping-cart',\n  standalone: true,\n  imports: [\n    CommonModule\n  ],\n  templateUrl: './shopping-cart.component.html',\n  styleUrl: './shopping-cart.component.css'\n})\nexport class ShoppingCartComponent {\n  /**\n   * Varieble que contiene el carrito de compras actual\n   */\n  currentShoppingCart: ShoppingCart = {} as ShoppingCart;\n  /**\n   * Valor de precio total del carro de compras\n   */\n  total: number = 0;\n  /**\n   * Booleano que indica si el carrito tine items\n   */\n  hasItems: boolean = false;\n\n  /**\n   * Constructor dcon dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   * @param router Manejo de redirecciones\n   */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  /**\n   * Iniciacion de variable de carrito de compras actual del cliente logueado.\n   * se calcula el precio del total del carrito\n   */\n  ngOnInit(): void {\n    this.authService.getCurrentShoppingCart().subscribe(shoppingCart => {\n      let calcTotal = 0;\n      this.currentShoppingCart = shoppingCart;\n      if(this.currentShoppingCart.CardList !== undefined){\n        this.currentShoppingCart.CardList.forEach(card => {\n          this.hasItems = true;\n          calcTotal += (card.Price * card.Quantity);\n        });\n      }\n      this.total = calcTotal;\n    });\n  }\n\n  /**\n   * Funcion para simular pago, redirige a mock pasarela de pago\n   */\n  buy(){\n    if(this.authService.getUser().id === undefined){\n      alert('Necesita Ingresar al sitio para realizar la compra');\n      this.router.navigate(['/login']);\n    }\n    this.router.navigate(['/pago']);\n  }\n}\n\n    \n\n    \n        \n\n    Carrito de compras\n\n    \n    \n        \n            \n                \n                Carta\n                Precio\n                Cantidad\n                Subtotal\n                \n            \n        \n        \n            \n                \n                {{card.CardName}}\n                {{card.Price | currency}}\n                {{card.Quantity}}\n                {{card.Price * card.Quantity | currency}}\n                \n            \n            \n                \n                \n                \n                \n                \n                \n            \n            \n                \n                \n                \n                Total\n                {{total | currency}}\n                \n            \n        \n    \n\n    Comprar\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Carrito de compras                                                            Carta                Precio                Cantidad                Subtotal                                                                                        {{card.CardName}}                {{card.Price | currency}}                {{card.Quantity}}                {{card.Price * card.Quantity | currency}}                                                                                                                                                                                                                                Total                {{total | currency}}                                            Comprar'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/shopping-cart.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock de funciones para manejo de carros de compra.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                shoppingCartList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItemToShoppingCart\n                            \n                            \n                                createShoppingcar\n                            \n                            \n                                getAllShopppingCartsByUser\n                            \n                            \n                                updateShoppingCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cardItemService: CardItemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor que referencia funcione para manejo de catalogo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardItemService\n                                                  \n                                                        \n                                                                        CardItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Funciones para manejo de cartas del catalogo\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItemToShoppingCart\n                        \n                    \n                \n            \n            \n                \naddItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Funcion para agregar una carta al carrito de compras.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                        \n                                                cardId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carta a agregar al carrito\n\n                                            \n                                        \n                                        \n                                                shoppingCartId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de carrito de compras actual\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createShoppingcar\n                        \n                    \n                \n            \n            \n                \ncreateShoppingcar(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Funcion para crear un carrito de compras dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart\n\n                        \n                            \n                                objeto de carrito de compras\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllShopppingCartsByUser\n                        \n                    \n                \n            \n            \n                \ngetAllShopppingCartsByUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    identificador de usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ShoppingCart[]\n\n                        \n                            \n                                Listado de carritos de compra realizadas por el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateShoppingCart\n                        \n                    \n                \n            \n            \n                \nupdateShoppingCart(updatedShoppingCart: ShoppingCart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/shopping-cart.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Funcion para actualizar carrito de compras\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedShoppingCart\n                                            \n                                                            ShoppingCart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Carrito de compras con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano indicando si se logro actualizar el carrito de compras\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        shoppingCartList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ShoppingCart[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/shopping-cart.service.ts:19\n                        \n                    \n\n            \n                \n                    Mock para menejar los carritos de compras del sitio\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ShoppingCart } from '../models/shopping-cart.model';\nimport { CartStatus } from '../enum/cart-status.enum';\nimport { CardItemService } from './cartitem.service';\n\n/**\n * @description\n * Mock de funciones para manejo de carros de compra.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShoppingCartService {\n\n    /**\n     * Mock para menejar los carritos de compras del sitio\n     */\n    shoppingCartList: ShoppingCart[] = [];\n\n    /**\n     * Constructor que referencia funcione para manejo de catalogo\n     * @param cardItemService Funciones para manejo de cartas del catalogo\n     */\n    constructor(private cardItemService: CardItemService){}\n\n    /**\n     * Funcion para crear un carrito de compras dado un usuario especifico.\n     * @param userId Identificador de usuario\n     * @returns objeto de carrito de compras\n     */\n    createShoppingcar(userId: number): ShoppingCart{\n        let newShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const newId = this.shoppingCartList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newShoppingCart.id = newId;\n        newShoppingCart.UserId = userId;\n        newShoppingCart.Status = CartStatus.Abierto;\n\n        this.shoppingCartList.push(newShoppingCart);\n        return newShoppingCart;\n    }\n\n    /**\n     * Funcion para actualizar carrito de compras\n     * @param updatedShoppingCart Carrito de compras con valores actualizados\n     * @returns booleano indicando si se logro actualizar el carrito de compras\n     */\n    updateShoppingCart(updatedShoppingCart: ShoppingCart): boolean{\n        const index = this.shoppingCartList.findIndex(shoppingCart => shoppingCart.id === updatedShoppingCart.id);\n        if(index !== -1){\n            this.shoppingCartList[index] = updatedShoppingCart;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion para agregar una carta al carrito de compras.\n     * @param userId Identificador de usuario\n     * @param cardId Identificador de carta a agregar al carrito\n     * @param shoppingCartId Identificador de carrito de compras actual\n     * @returns tupla de item de carrito actualizado y booleano que indica si hay stock\n     */\n    addItemToShoppingCart(userId: number, cardId: number, shoppingCartId: number): [ShoppingCart,boolean]{\n        const index = this.shoppingCartList.findIndex(shoppingCart => \n            shoppingCart.id === shoppingCartId &&\n            shoppingCart.Status === CartStatus.Abierto);\n\n        let selectedShoppingCart: ShoppingCart = {} as ShoppingCart;\n        const selectedCardItem = this.cardItemService.getCard(cardId);\n        let hasStock = false;\n\n        if(index !== -1){\n            selectedShoppingCart = this.shoppingCartList[index];\n        }else{\n            selectedShoppingCart = this.createShoppingcar(userId);\n        }\n\n        let cardIndex = -1;\n            \n        if(selectedShoppingCart.CardList !== undefined){\n            cardIndex = selectedShoppingCart.CardList.findIndex(card => card.Id === cardId);\n        }else{\n            selectedShoppingCart.CardList = [];\n        }\n            \n        \n        if(cardIndex !== -1){\n            hasStock = selectedCardItem.Quantity > selectedShoppingCart.CardList[cardIndex].Quantity;\n            if(hasStock){\n                selectedShoppingCart.CardList[cardIndex].Quantity += 1;\n            }\n            \n        }else{\n            hasStock = selectedCardItem.Quantity > 1;\n            if(hasStock){\n                let cardCopy = {...selectedCardItem};\n                cardCopy.Quantity = 1;\n                selectedShoppingCart.CardList.push(cardCopy);\n            }\n        }\n        \n\n        return [selectedShoppingCart,hasStock];\n    }\n\n    /**\n     * Funcion para obtener los carritos de compra realizados dado un usuario especifico.\n     * @param userId identificador de usuario\n     * @returns Listado de carritos de compra realizadas por el usuario.\n     */\n    getAllShopppingCartsByUser(userId: number): ShoppingCart[]{\n        return this.shoppingCartList.filter(shoppinCart => \n            shoppinCart.UserId === userId\n        ) || [] as ShoppingCart[];\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Objeto para definir estructura de usuarios del sistema.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            IsActive\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            Password\n                                        \n                                \n                                \n                                        \n                                            Role\n                                        \n                                \n                                \n                                        \n                                            UserName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Correo Electronico del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificador de Objeto.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IsActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IsActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apellido del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contrasena del usuario.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol del usuario que define las acciones disponibles que puede realizar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        UserName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del usuario.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    /**\n     * Identificador de Objeto.\n     */\n    id: number;\n    /**\n     * Nombre del usuario.\n     */\n    UserName: string;\n    /**\n     * Nombre del usuario.\n     */\n    FirstName: string;\n    /**\n     * apellido del usuario.\n     */\n    LastName: string;\n    /**\n     * Contrasena del usuario.\n     */\n    Password: string;\n    /**\n     * Correo Electronico del usuario.\n     */\n    Email: string;\n    /**\n     * Rol del usuario que define las acciones disponibles que puede realizar.\n     */\n    Role: string;\n    /**\n     * Indicador para representar que el usuario se encuentre Habilitado/Deshabilitado.\n     */\n    IsActive: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserManagementComponent.html":{"url":"components/UserManagementComponent.html","title":"component - UserManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-management/user-management.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente con formulario de edicion de usuario\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-management\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-management.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-management.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName\n                                \n                                \n                                    firstName\n                                \n                                \n                                    lastName\n                                \n                                \n                                    email\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-management/user-management.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor con dependencias a funciones de sesion\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manejo de sesion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Iniciacion de informacion de usuario.\nIniciacion de formulario de edicion de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-management/user-management.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Accion de submit de formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:31\n                        \n                    \n\n            \n                \n                    Variable con informacion de usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-management/user-management.component.ts:27\n                        \n                    \n\n            \n                \n                    Formulario de edicion de usuario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstName\n                    \n                \n\n                \n                    \n                        getfirstName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastName\n                    \n                \n\n                \n                    \n                        getlastName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user-management/user-management.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule, NgClass } from '@angular/common';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { User } from '../core/models/user.model';\nimport { AuthService } from '../core/services/auth.service';\nimport { onlyLettersValidator } from '../core/validators/validators';\n\n/**\n * @description\n * Componente con formulario de edicion de usuario\n */\n@Component({\n  selector: 'app-user-management',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgClass\n  ],\n  templateUrl: './user-management.component.html',\n  styleUrl: './user-management.component.css'\n})\nexport class UserManagementComponent {\n  /**\n   * Formulario de edicion de usuario\n   */\n  updateForm!: FormGroup;\n  /**\n   * Variable con informacion de usuario\n   */\n  currentUser: User = {} as User;\n\n  /**\n   * Constructor con dependencias a funciones de sesion\n   * @param authService Manejo de sesion\n   */\n  constructor(private authService: AuthService){}\n\n  /**\n   * Iniciacion de informacion de usuario.\n   * Iniciacion de formulario de edicion de usuario\n   */\n  ngOnInit(): void {\n    this.currentUser = this.authService.getUser();\n    this.updateForm = new FormGroup({\n      firstName: new FormControl(this.currentUser.FirstName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      lastName: new FormControl(this.currentUser.LastName, [\n        Validators.required,\n        onlyLettersValidator(),\n        Validators.minLength(5),\n        Validators.maxLength(50)\n      ]),\n      email: new FormControl(this.currentUser.Email, [\n        Validators.required,\n        Validators.email\n      ])\n    });\n  }\n\n  get userName(){\n    return this.currentUser.UserName;\n  }\n\n  get firstName(){\n    return this.updateForm.get('firstName');\n  }\n\n  get lastName(){\n    return this.updateForm.get('lastName');\n  }\n\n  get email(){\n    return this.updateForm.get('email');\n  }\n\n  /**\n   * Accion de submit de formulario\n   */\n  onSubmit(){\n    if(this.authService.updateBasicInfo(this.updateForm.get('firstName')?.value,this.updateForm.get('lastName')?.value,this.updateForm.get('email')?.value)){\n      alert('Se han actualizado los datos.');\n    }else{\n      alert('Error al actualizar los datos');\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n    \n          \n            Nombre de Usuario\n            \n              \n            \n          \n    \n          \n            Nombre\n            \n            \n              Nombre es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Apellido\n            \n            \n              Apellido es obligatorio.\n              Debe tener entre 5 y 50 caracteres.\n              Solo puede contener letras.\n            \n          \n    \n          \n            Email \n            \n            \n              Email es obligatorio.\n              Formato de email no válido.\n            \n          \n          \n        \n    \n        Actualizar Datos\n    \n      \n    \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Nombre de Usuario                                                                          Nombre                                      Nombre es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Apellido                                      Apellido es obligatorio.              Debe tener entre 5 y 50 caracteres.              Solo puede contener letras.                                                Email                                       Email es obligatorio.              Formato de email no válido.                                                    Actualizar Datos                  '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AddressCreateComponent', 'selector': 'app-address-create'},{'name': 'AddressManagementComponent', 'selector': 'app-address-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardDetailComponent', 'selector': 'app-card-detail'},{'name': 'CarditemListComponent', 'selector': 'app-carditem-list'},{'name': 'CardManageComponent', 'selector': 'app-card-manage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'OrderDetailComponent', 'selector': 'app-order-detail'},{'name': 'OrderFinishComponent', 'selector': 'app-order-finish'},{'name': 'OrderListComponent', 'selector': 'app-order-list'},{'name': 'PasswordRecoveryComponent', 'selector': 'app-password-recovery'},{'name': 'PasswordResetComponent', 'selector': 'app-password-reset'},{'name': 'PaymentComponent', 'selector': 'app-payment'},{'name': 'RegistrationFormComponent', 'selector': 'app-registration-form'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'UserManagementComponent', 'selector': 'app-user-management'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Funciones Mock para abordar la informacion del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmail\n                            \n                            \n                                createUser\n                            \n                            \n                                deactivateUser\n                            \n                            \n                                getUserAuth\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Funcion para validar si email ya se encuentra en uso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(userName: string, firstName: string, lastName: string, password: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para crear usuarios.\nAgrega un usuario a listado UsarList.\nValida que el nombre de usuario no se repita con los ya existentes.\nValida si email ya se encuentra en uso.\nSe agrega un usario con id correlativo a los id existentes.\nEl rol por defecto es 'user' que representa un cliente normal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                firstName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre\n\n                                            \n                                        \n                                        \n                                                lastName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Apellido\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena\n\n                                            \n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Correo Electronico\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleno que indica si se logro crear el usuario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivateUser\n                        \n                    \n                \n            \n            \n                \ndeactivateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para deshabilitar usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAuth\n                        \n                    \n                \n            \n            \n                \ngetUserAuth(userName: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para validar credenciales del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre de usuario\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Contrasena del usuario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Objeto User encontrado de lo contrario un objeto usuario vacio.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Funcion Mock para actualizar usuario.\nSe Valida que encuentre en el listado (BD) segun id y nombre de usuario.\nSi se encuentra se pisa objeto con nueva informacion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Objeto User con valores actualizados\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                booleano si se logro actualizar usuario.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:17\n                        \n                    \n\n            \n                \n                    Mock de listado de Usuarios de la aplicacion.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n/**\n * @description\n * Funciones Mock para abordar la informacion del usuario.\n */\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    /**\n     * Mock de listado de Usuarios de la aplicacion.\n     */\n    userList: User[] = [\n        {\n            id: 1,\n            UserName: 'admin',\n            FirstName: 'first',\n            LastName: 'second',\n            Password: 'admin',\n            Email: 'mail@mail.cl',\n            Role: 'admin',\n            IsActive: true\n        },\n        {\n            id: 2,\n            UserName: 'user1',\n            FirstName: 'prueba',\n            LastName: 'prueba',\n            Password: 'qwerty',\n            Email: 'mail2@mail.cl',\n            Role: 'user',\n            IsActive: true\n        }\n    ];\n\n    /**\n     * Funcion Mock para crear usuarios.\n     * Agrega un usuario a listado UsarList.\n     * Valida que el nombre de usuario no se repita con los ya existentes.\n     * Valida si email ya se encuentra en uso.\n     * Se agrega un usario con id correlativo a los id existentes.\n     * El rol por defecto es 'user' que representa un cliente normal.\n     * @param userName Nombre de usuario\n     * @param firstName Nombre\n     * @param lastName Apellido\n     * @param password Contrasena\n     * @param email Correo Electronico\n     * @returns booleno que indica si se logro crear el usuario.\n     */\n    createUser(userName: string, firstName: string, lastName: string, password: string, email: string): boolean{\n        if(this.userList.find(user => user.UserName === userName) !== undefined){\n            return false;\n        }\n\n        if(this.checkEmail(email)){\n            return false;\n        }\n\n        let newUser: User = {} as User;\n        const newId = this.userList.reduce((maxId, user) => {\n            return Math.max(maxId, user.id);\n        }, 0) + 1;\n\n        newUser.id = newId;\n        newUser.UserName = userName;\n        newUser.FirstName = firstName;\n        newUser.LastName = lastName;\n        newUser.Password = password;\n        newUser.Email = email;\n        newUser.Role = 'user';\n        newUser.IsActive = true;\n\n        this.userList.push(newUser);\n\n        return true;\n    }\n\n    /**\n     * Funcion Mock para validar credenciales del usuario.\n     * @param userName Nombre de usuario\n     * @param password Contrasena del usuario\n     * @returns Objeto User encontrado de lo contrario un objeto usuario vacio.\n     */\n    getUserAuth(userName: string, password: string): User{\n        return this.userList.find(user => user.UserName === userName && user.Password === password) || {} as User;\n    }\n\n    /**\n     * Funcion Mock para actualizar usuario.\n     * Se Valida que encuentre en el listado (BD) segun id y nombre de usuario.\n     * Si se encuentra se pisa objeto con nueva informacion.\n     * @param updatedUser Objeto User con valores actualizados\n     * @returns booleano si se logro actualizar usuario.\n     */\n    updateUser(updatedUser: User): boolean{\n        const index = this.userList.findIndex(user => user.id === updatedUser.id && user.UserName === updatedUser.UserName);\n        if(index !== -1){\n            this.userList[index] = updatedUser;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Funcion Mock para deshabilitar usuario.\n     */\n    deactivateUser(){\n\n    }\n\n    /**\n     * Funcion para validar si email ya se encuentra en uso\n     */\n    checkEmail(email: string): boolean{\n        return (this.userList.find(user => user.Email === email) !== undefined)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/address-create/address-create.component.ts\n            \n            component\n            AddressCreateComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/address-management/address-management.component.ts\n            \n            component\n            AddressManagementComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth-guard.guard.ts\n            \n            variable\n            authGuardGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/card-detail/card-detail.component.ts\n            \n            component\n            CardDetailComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/card-manage/card-manage.component.ts\n            \n            component\n            CardManageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/carditem-list/carditem-list.component.ts\n            \n            component\n            CarditemListComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/models/address.model.ts\n            \n            interface\n            Address\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/carditem.model.ts\n            \n            interface\n            CardItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/models/shopping-cart.model.ts\n            \n            interface\n            ShoppingCart\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/services/address.service.ts\n            \n            injectable\n            AddressService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/core/services/cartitem.service.ts\n            \n            injectable\n            CardItemService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyLettersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            onlyNumbersValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/validators.ts\n            \n            function\n            samePasswordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/order-finish/order-finish.component.ts\n            \n            component\n            OrderFinishComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/password-recovery/password-recovery.component.ts\n            \n            component\n            PasswordRecoveryComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/registration-form/registration-form.component.ts\n            \n            component\n            RegistrationFormComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/user-management/user-management.component.ts\n            \n            component\n            UserManagementComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CartStatus   (src/.../cart-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/enum/cart-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CartStatus\n                    \n                \n                        \n                            \n                                 Abierto\n                            \n                        \n                        \n                            \n                                Value : Abierto\n                            \n                        \n                        \n                            \n                                 Pagado\n                            \n                        \n                        \n                            \n                                Value : Pagado\n                            \n                        \n                        \n                            \n                                 Enviado\n                            \n                        \n                        \n                            \n                                Value : Enviado\n                            \n                        \n                        \n                            \n                                 Finalizado\n                            \n                        \n                        \n                            \n                                Value : Finalizado\n                            \n                        \n                        \n                            \n                                 Cancelado\n                            \n                        \n                        \n                            \n                                Value : Cancelado\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onlyLettersValidator   (src/.../validators.ts)\n                        \n                        \n                            onlyNumbersValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            samePasswordValidator   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/validators/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        onlyLettersValidator\n                        \n                    \n                \n            \n            \n                \nonlyLettersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que campo solo tenga letras en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyLetters\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyNumbersValidator\n                        \n                    \n                \n            \n            \n                \nonlyNumbersValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar con regex que el campo ingresado solo contega numeros en FormControl.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                onlyNumbers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar formato de contrasena en FormControl.\nQue tenga un numero, una letra mayuscula, una minuscula y un simbolo.\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                passwordFromat\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samePasswordValidator\n                        \n                    \n                \n            \n            \n                \nsamePasswordValidator(field1: string, field2: string)\n                \n            \n\n\n\n\n            \n                \n                        Funcion para validar que ambas contrasenas ingresadas sean las mismas en FormControl.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field1\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena\n\n                                            \n                                        \n                                        \n                                                field2\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    contrasena repetida\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                notSamePassword\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCardshop\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuardGuard   (src/.../auth-guard.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Definicion de appConfig\n\n                \n            \n\n        \n    \n\n    src/app/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuardGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n            \n                \n                    Uso de CanActivateFn para validar si se el usuario ingreso al sitio.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
